# java_leihs-procure-server env check via asdf v0.13.1
# java_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_java_leihs-procure-server to force update
# clojure_leihs-procure-server env check via asdf v0.13.1
# clojure_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_clojure_leihs-procure-server to force update
Warning: environ value /Users/mradl/.asdf/installs/java/zulu-11.60.19 for key :java-home has been overwritten with /Users/mradl/.asdf/installs/java/zulu-11.60.19/zulu-11.jdk/Contents/Home
2023-11-30T11:53:35.081Z NX-41294 WARN [leihs.core.release:13] - Failed to read releases.yml, returning bogus value 
2023-11-30T11:53:35.731Z NX-41294 INFO [leihs.core.logging:37] - initializing logging  {:min-level [[#{"leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :debug] [#{"*"} :debug]], :log-level :debug}
2023-11-30T11:53:35.738Z NX-41294 INFO [leihs.core.logging:39] - initialized logging  {:min-level [[#{"leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :debug] [#{"*"} :debug]], :ns-filter #{"*"}, :middleware [], :timestamp-opts {:pattern :iso8601, :locale :jvm-default, :timezone :utc}, :output-fn #object[taoensso.timbre$default_output_fn 0xe9c4d2a "taoensso.timbre$default_output_fn@e9c4d2a"], :appenders {:println {:enabled? true, :fn #object[taoensso.timbre.appenders.core$println_appender$fn__3459 0x4edde378 "taoensso.timbre.appenders.core$println_appender$fn__3459@4edde378"]}}, :_init-config {:loaded-from-source :default, :compile-time-config {:min-level nil, :ns-pattern "*"}}, :log-level :debug}
2023-11-30T11:53:35.740Z NX-41294 INFO [leihs.procurement.main:50] - main ("--dev-mode" "true" "--repl" "true" "run" "--db-port" "5415" "--db-name" "leihs_test")
2023-11-30T11:53:35.752Z NX-41294 INFO [leihs.core.repl:62] - init {:dev-mode true, :repl true, :repl-bind "localhost", :repl-port 62579, :repl-port-file ".nrepl-port"}
2023-11-30T11:53:35.753Z NX-41294 INFO [leihs.core.repl:70] - starting nREPL server  62579 localhost
2023-11-30T11:53:35.784Z NX-41294 INFO [leihs.core.repl:75] - started nREPL server 
2023-11-30T11:53:35.787Z NX-41294 INFO [leihs.procurement.run:326] - Invoking run with options:  {:db-host localhost, :db-max-pool-size 16, :db-min-pool-size 2, :db-name leihs_test, :db-password leihs, :db-port 5415, :db-user leihs, :dev-mode true, :http-host localhost, :http-max-threads 8, :http-min-threads 1, :http-port 3230, :http-queue-capacity 640, :http-thread-keep-alive-seconds 10, :http-worker-prefix leihs-service-http-worker-, :pid-file nil, :repl true, :repl-bind localhost, :repl-port 62579, :repl-port-file .nrepl-port}
2023-11-30T11:53:35.787Z NX-41294 INFO [leihs.core.shutdown:20] - PID 21333
2023-11-30T11:53:35.818Z NX-41294 INFO [leihs.core.shutdown:29] - Registering SIGTERM handler for shutdown.
2023-11-30T11:53:35.892Z NX-41294 INFO [leihs.core.graphql:17] - Initialized graphQL schema.
2023-11-30T11:53:35.893Z NX-41294 INFO [leihs.core.db:220] - Initializing db  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-11-30T11:53:35.898Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1100] - db-pool - configuration:
2023-11-30T11:53:35.905Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - allowPoolSuspension.............false
2023-11-30T11:53:35.906Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - autoCommit......................true
2023-11-30T11:53:35.906Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - catalog.........................none
2023-11-30T11:53:35.906Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - connectionInitSql...............none
2023-11-30T11:53:35.906Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - connectionTestQuery.............none
2023-11-30T11:53:35.907Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - connectionTimeout...............30000
2023-11-30T11:53:35.907Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSource......................none
2023-11-30T11:53:35.908Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSourceClassName............."org.postgresql.ds.PGSimpleDataSource"
2023-11-30T11:53:35.909Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSourceJNDI..................none
2023-11-30T11:53:35.909Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSourceProperties............{password=<masked>, databaseName=leihs_test, serverName=localhost, portNumber=5415}
2023-11-30T11:53:35.909Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - driverClassName.................none
2023-11-30T11:53:35.909Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - exceptionOverrideClassName......none
2023-11-30T11:53:35.910Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - healthCheckProperties...........{}
2023-11-30T11:53:35.910Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - healthCheckRegistry.............com.codahale.metrics.health.HealthCheckRegistry@4ed9fac
2023-11-30T11:53:35.910Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - idleTimeout.....................60000
2023-11-30T11:53:35.910Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - initializationFailTimeout.......1
2023-11-30T11:53:35.910Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - isolateInternalQueries..........false
2023-11-30T11:53:35.910Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - jdbcUrl.........................none
2023-11-30T11:53:35.911Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - keepaliveTime...................0
2023-11-30T11:53:35.911Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - leakDetectionThreshold..........0
2023-11-30T11:53:35.911Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - maxLifetime.....................3600000
2023-11-30T11:53:35.911Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - maximumPoolSize.................16
2023-11-30T11:53:35.911Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - metricRegistry..................com.codahale.metrics.MetricRegistry@4e9100bb
2023-11-30T11:53:35.911Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - metricsTrackerFactory...........none
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - minimumIdle.....................2
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - password........................<masked>
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - poolName........................"db-pool"
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - readOnly........................false
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - registerMbeans..................false
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - scheduledExecutor...............none
2023-11-30T11:53:35.912Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - schema..........................none
2023-11-30T11:53:35.913Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - threadFactory...................internal
2023-11-30T11:53:35.913Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - transactionIsolation............default
2023-11-30T11:53:35.913Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - username........................"leihs"
2023-11-30T11:53:35.913Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - validationTimeout...............5000
2023-11-30T11:53:35.916Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:80] - db-pool - Starting...
2023-11-30T11:53:35.988Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - db-pool - Added connection org.postgresql.jdbc.PgConnection@229e80fc
2023-11-30T11:53:35.993Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:82] - db-pool - Start completed.
2023-11-30T11:53:35.993Z NX-41294 INFO [leihs.core.db:222] - Initialized db  {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 "HikariDataSource (db-pool)"]}
2023-11-30T11:53:35.994Z NX-41294 INFO [leihs.core.db:223] - Initializing ds-next  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-11-30T11:53:36.007Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1100] - HikariPool-1 - configuration:
2023-11-30T11:53:36.008Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - allowPoolSuspension.............false
2023-11-30T11:53:36.008Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - autoCommit......................true
2023-11-30T11:53:36.008Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - catalog.........................none
2023-11-30T11:53:36.008Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - connectionInitSql...............none
2023-11-30T11:53:36.009Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - connectionTestQuery.............none
2023-11-30T11:53:36.009Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - connectionTimeout...............30000
2023-11-30T11:53:36.009Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSource......................none
2023-11-30T11:53:36.009Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSourceClassName.............none
2023-11-30T11:53:36.009Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSourceJNDI..................none
2023-11-30T11:53:36.010Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - dataSourceProperties............{password=<masked>}
2023-11-30T11:53:36.010Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - driverClassName.................none
2023-11-30T11:53:36.010Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - exceptionOverrideClassName......none
2023-11-30T11:53:36.010Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - healthCheckProperties...........{}
2023-11-30T11:53:36.010Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - healthCheckRegistry.............none
2023-11-30T11:53:36.010Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - idleTimeout.....................60000
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - initializationFailTimeout.......1
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - isolateInternalQueries..........false
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - jdbcUrl.........................jdbc:postgresql://localhost:5415/leihs_test
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - keepaliveTime...................0
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - leakDetectionThreshold..........0
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - maxLifetime.....................3600000
2023-11-30T11:53:36.011Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - maximumPoolSize.................16
2023-11-30T11:53:36.012Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - metricRegistry..................none
2023-11-30T11:53:36.012Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - metricsTrackerFactory...........none
2023-11-30T11:53:36.012Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - minimumIdle.....................2
2023-11-30T11:53:36.012Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - password........................<masked>
2023-11-30T11:53:36.012Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - poolName........................"HikariPool-1"
2023-11-30T11:53:36.012Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - readOnly........................false
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - registerMbeans..................false
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - scheduledExecutor...............none
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - schema..........................none
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - threadFactory...................internal
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - transactionIsolation............default
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - username........................"leihs"
2023-11-30T11:53:36.013Z NX-41294 DEBUG [com.zaxxer.hikari.HikariConfig:1132] - validationTimeout...............5000
2023-11-30T11:53:36.014Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2023-11-30T11:53:36.014Z NX-41294 DEBUG [com.zaxxer.hikari.util.DriverDataSource:107] - Loaded driver with class name org.postgresql.Driver for jdbcUrl=jdbc:postgresql://localhost:5415/leihs_test
2023-11-30T11:53:36.022Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@9c65d43
2023-11-30T11:53:36.022Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2023-11-30T11:53:36.028Z NX-41294 INFO [leihs.core.db:225] - Initialized ds-next  #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 "next.jdbc.result_set$as_unqualified_lower_maps@66a17058"]}}
2023-11-30T11:53:36.036Z NX-41294 INFO [leihs.core.http-server:101] - starting http-server  {:port 3230, :ip "localhost", :pool {:queue #object[java.util.concurrent.ArrayBlockingQueue 0x4c0d5237 "[]"], :pool #object[java.util.concurrent.ThreadPoolExecutor 0x2a782717 "java.util.concurrent.ThreadPoolExecutor@2a782717[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]"]}}
2023-11-30T11:53:36.047Z NX-41294 INFO [leihs.core.http-server:104] - started http-server 
2023-11-30T11:53:36.099Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2023-11-30T11:53:36.100Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2023-11-30T11:53:36.107Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:738] - db-pool - Added connection org.postgresql.jdbc.PgConnection@79ae5931
2023-11-30T11:53:36.120Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - After adding stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:53:36.128Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2023-11-30T11:53:36.128Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2023-11-30T11:53:36.135Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:738] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3eac1a4f
2023-11-30T11:53:36.148Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:53:47.524Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5cfe121e HikariProxyPreparedStatement@1560154654 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = ? WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 1]  type:  java.lang.Long
2023-11-30T11:53:47.524Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:47.526Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text 02368990-f4a1-4ff9-817e-c317db4c124b #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5cfe121e HikariProxyPreparedStatement@1560154654 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 2]  type:  java.lang.String
2023-11-30T11:53:47.527Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  02368990-f4a1-4ff9-817e-c317db4c124b
2023-11-30T11:53:47.528Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text sha256 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5cfe121e HikariProxyPreparedStatement@1560154654 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 3]  type:  java.lang.String
2023-11-30T11:53:47.529Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  sha256
2023-11-30T11:53:47.530Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text hex #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5cfe121e HikariProxyPreparedStatement@1560154654 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', 'sha256'), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 4]  type:  java.lang.String
2023-11-30T11:53:47.530Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  hex
2023-11-30T11:53:48.186Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [jimmie@goyette.com #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 1]
2023-11-30T11:53:48.231Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar jimmie@goyette.com]
2023-11-30T11:53:48.234Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  jimmie@goyette.com
2023-11-30T11:53:48.235Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 2]
2023-11-30T11:53:48.236Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:48.237Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:48.237Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 3]
2023-11-30T11:53:48.238Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.238Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.239Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 6]
2023-11-30T11:53:48.240Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:48.240Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:48.241Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 10]
2023-11-30T11:53:48.241Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.242Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.243Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 11]
2023-11-30T11:53:48.244Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:48.244Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.245Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 12]
2023-11-30T11:53:48.245Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:48.246Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.246Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "572264c6-6da9-4e28-b081-52d34f180fc8" #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 13]
2023-11-30T11:53:48.247Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"]
2023-11-30T11:53:48.247Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"
2023-11-30T11:53:48.248Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-30T09:54:12.806855000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x1862eb7c org.postgresql.jdbc.PgResultSetMetaData@1862eb7c] 14]
2023-11-30T11:53:48.249Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-30T09:54:12.806855000-00:00"]
2023-11-30T11:53:48.251Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-30T09:54:12.806855Z"
2023-11-30T11:53:48.254Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x493f8374 HikariProxyPreparedStatement@1228899188 wrapping SELECT role, inventory_pool_id FROM access_rights  WHERE user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.254Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44347 0x5eb2a6d2 leihs.core.locale$wrap$fn__44347@5eb2a6d2]

>> authorize::request > {:authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {Idea-d8c89f6f {:value 5d06a449-7aaa-4285-b65a-53c2ae3cb299}, leihs-anti-csrf-token {:value 65184e75-5146-4915-8494-09445d034d15}, leihs-user-session {:value 02368990-f4a1-4ff9-817e-c317db4c124b}}, :remote-addr 127.0.0.1, :start-time 108800240804291, :params {:return-to /procure}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 next.jdbc.result_set$as_unqualified_lower_maps@66a17058]}}, :query-params-raw {:return-to /procure}, :route-params nil, :headers {sec-fetch-site none, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x54deaf8f /127.0.0.1:3230<->/127.0.0.1:52236], :server-port 3230, :params-raw {:return-to /procure}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /procure}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Fprocure, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x70168fd7 compojure.core$routes$fn__27950@70168fd7], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
2023-11-30T11:53:48.266Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-11-30T11:53:48.279Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 1]
2023-11-30T11:53:48.282Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.282Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.282Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 2]
2023-11-30T11:53:48.282Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.283Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.283Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 1]
2023-11-30T11:53:48.284Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.284Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.284Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 2]
2023-11-30T11:53:48.284Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.284Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.285Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 1]
2023-11-30T11:53:48.285Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.285Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.285Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 2]
2023-11-30T11:53:48.286Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.286Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.286Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 1]
2023-11-30T11:53:48.287Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.287Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.287Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x75100d77 org.postgresql.jdbc.PgResultSetMetaData@75100d77] 2]
2023-11-30T11:53:48.288Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.288Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.289Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 1]
2023-11-30T11:53:48.290Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.290Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.291Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 2]
2023-11-30T11:53:48.291Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.291Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.291Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 1]
2023-11-30T11:53:48.292Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.292Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.293Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 2]
2023-11-30T11:53:48.293Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.293Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.293Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 1]
2023-11-30T11:53:48.294Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.294Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.294Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 2]
2023-11-30T11:53:48.294Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.295Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.295Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 1]
2023-11-30T11:53:48.295Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.295Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.295Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x1399395c org.postgresql.jdbc.PgResultSetMetaData@1399395c] 2]
2023-11-30T11:53:48.296Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.296Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.302Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 302, :headers {"Location" "/procure"}, :body ""}
2023-11-30T11:53:48.327Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4966607 HikariProxyPreparedStatement@76965383 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = ? WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 1]  type:  java.lang.Long
2023-11-30T11:53:48.327Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:48.328Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text 02368990-f4a1-4ff9-817e-c317db4c124b #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4966607 HikariProxyPreparedStatement@76965383 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 2]  type:  java.lang.String
2023-11-30T11:53:48.328Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  02368990-f4a1-4ff9-817e-c317db4c124b
2023-11-30T11:53:48.329Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text sha256 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4966607 HikariProxyPreparedStatement@76965383 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 3]  type:  java.lang.String
2023-11-30T11:53:48.329Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  sha256
2023-11-30T11:53:48.330Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text hex #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4966607 HikariProxyPreparedStatement@76965383 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', 'sha256'), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 4]  type:  java.lang.String
2023-11-30T11:53:48.330Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  hex
2023-11-30T11:53:48.332Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [jimmie@goyette.com #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 1]
2023-11-30T11:53:48.333Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar jimmie@goyette.com]
2023-11-30T11:53:48.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  jimmie@goyette.com
2023-11-30T11:53:48.333Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 2]
2023-11-30T11:53:48.333Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:48.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:48.334Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 3]
2023-11-30T11:53:48.334Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.334Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.334Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 6]
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 10]
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 11]
2023-11-30T11:53:48.335Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:48.336Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.336Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 12]
2023-11-30T11:53:48.336Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:48.336Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.336Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "572264c6-6da9-4e28-b081-52d34f180fc8" #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 13]
2023-11-30T11:53:48.336Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"]
2023-11-30T11:53:48.337Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"
2023-11-30T11:53:48.337Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-30T09:54:12.806855000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a0d6690 org.postgresql.jdbc.PgResultSetMetaData@2a0d6690] 14]
2023-11-30T11:53:48.337Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-30T09:54:12.806855000-00:00"]
2023-11-30T11:53:48.337Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-30T09:54:12.806855Z"
2023-11-30T11:53:48.338Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x49db072e HikariProxyPreparedStatement@1239090990 wrapping SELECT role, inventory_pool_id FROM access_rights  WHERE user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.338Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
>>> authenticate::skip= nil  handler-key= :procurement
>>> authenticate::authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44347 0x5eb2a6d2 leihs.core.locale$wrap$fn__44347@5eb2a6d2]

>> authorize::request > {:authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {Idea-d8c89f6f {:value 5d06a449-7aaa-4285-b65a-53c2ae3cb299}, leihs-anti-csrf-token {:value 65184e75-5146-4915-8494-09445d034d15}, leihs-user-session {:value 02368990-f4a1-4ff9-817e-c317db4c124b}}, :remote-addr 127.0.0.1, :start-time 108801105266750, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 next.jdbc.result_set$as_unqualified_lower_maps@66a17058]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site none, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x343cbc95 /127.0.0.1:3230<->/127.0.0.1:52236], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure, :server-name localhost, :handler-key :procurement, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x4eb4f42 leihs.procurement.backend.html$not_found_handler@4eb4f42], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :procurement
2023-11-30T11:53:48.341Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-11-30T11:53:48.343Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.344Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x6f50ea15 HikariProxyPreparedStatement@1867573781 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.344Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.356Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.357Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xd71faa5 HikariProxyPreparedStatement@225573541 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.357Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.370Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.371Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4fff5508 HikariProxyPreparedStatement@1342133512 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.371Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.389Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.391Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x76c48c2a HikariProxyPreparedStatement@1992592426 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.391Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.396Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 1]
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 2]
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.397Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 1]
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 2]
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 1]
2023-11-30T11:53:48.398Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.399Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.399Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 2]
2023-11-30T11:53:48.399Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.399Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.399Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 1]
2023-11-30T11:53:48.400Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.400Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.400Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x40fda029 org.postgresql.jdbc.PgResultSetMetaData@40fda029] 2]
2023-11-30T11:53:48.400Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.400Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.401Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 1]
2023-11-30T11:53:48.401Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.401Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.401Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 2]
2023-11-30T11:53:48.401Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.401Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 1]
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 2]
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 1]
2023-11-30T11:53:48.402Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 2]
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 1]
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.403Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.404Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x34950f0e org.postgresql.jdbc.PgResultSetMetaData@34950f0e] 2]
2023-11-30T11:53:48.404Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.404Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.406Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 404, :headers {"Content-Length" "2299", "Last-Modified" "Wed, 29 Nov 2023 08:52:54 GMT", "Content-Type" "text/html"}, :body #object[java.io.File 0x215f6ab6 "/Users/mradl/repos/leihs/procure/server/resources/public/procure/client/index.html"]}
2023-11-30T11:53:48.828Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xf67c19e HikariProxyPreparedStatement@258458014 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = ? WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 1]  type:  java.lang.Long
2023-11-30T11:53:48.828Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:48.829Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text 02368990-f4a1-4ff9-817e-c317db4c124b #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xf67c19e HikariProxyPreparedStatement@258458014 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 2]  type:  java.lang.String
2023-11-30T11:53:48.829Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  02368990-f4a1-4ff9-817e-c317db4c124b
2023-11-30T11:53:48.830Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text sha256 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xf67c19e HikariProxyPreparedStatement@258458014 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 3]  type:  java.lang.String
2023-11-30T11:53:48.830Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  sha256
2023-11-30T11:53:48.831Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text hex #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xf67c19e HikariProxyPreparedStatement@258458014 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', 'sha256'), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 4]  type:  java.lang.String
2023-11-30T11:53:48.831Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  hex
2023-11-30T11:53:48.835Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [jimmie@goyette.com #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 1]
2023-11-30T11:53:48.835Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar jimmie@goyette.com]
2023-11-30T11:53:48.835Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  jimmie@goyette.com
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 2]
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 3]
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.836Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 6]
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 10]
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 11]
2023-11-30T11:53:48.837Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 12]
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "572264c6-6da9-4e28-b081-52d34f180fc8" #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 13]
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"]
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"
2023-11-30T11:53:48.838Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-30T09:54:12.806855000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x78827c28 org.postgresql.jdbc.PgResultSetMetaData@78827c28] 14]
2023-11-30T11:53:48.839Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-30T09:54:12.806855000-00:00"]
2023-11-30T11:53:48.839Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-30T09:54:12.806855Z"
2023-11-30T11:53:48.840Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x6098c787 HikariProxyPreparedStatement@1620625287 wrapping SELECT role, inventory_pool_id FROM access_rights  WHERE user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.840Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44347 0x5eb2a6d2 leihs.core.locale$wrap$fn__44347@5eb2a6d2]

>> authorize::request > {:authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {Idea-d8c89f6f {:value 5d06a449-7aaa-4285-b65a-53c2ae3cb299}, leihs-anti-csrf-token {:value 65184e75-5146-4915-8494-09445d034d15}, leihs-user-session {:value 02368990-f4a1-4ff9-817e-c317db4c124b}}, :remote-addr 127.0.0.1, :start-time 108801557659208, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 next.jdbc.result_set$as_unqualified_lower_maps@66a17058]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure, connection keep-alive, x-csrf-token 65184e75-5146-4915-8494-09445d034d15, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x56defcbe /127.0.0.1:3230<->/127.0.0.1:52236], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 leihs.procurement.graphql$handler@7fcd7d61], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-11-30T11:53:48.843Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-11-30T11:53:48.843Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.843Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x52b38eca HikariProxyPreparedStatement@1387499210 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.844Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.844Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.845Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x75347ba5 HikariProxyPreparedStatement@1966373797 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.845Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.845Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.846Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x33db2373 HikariProxyPreparedStatement@869999475 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.846Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.847Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.848Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x47d453e9 HikariProxyPreparedStatement@1205097449 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.848Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.848Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-11-30T11:53:48.849Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 1]
2023-11-30T11:53:48.849Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.849Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.849Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 2]
2023-11-30T11:53:48.850Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.850Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.850Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 1]
2023-11-30T11:53:48.850Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.850Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.850Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 2]
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 1]
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 2]
2023-11-30T11:53:48.851Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.852Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.852Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 1]
2023-11-30T11:53:48.852Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.852Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.852Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x1aa96e2d org.postgresql.jdbc.PgResultSetMetaData@1aa96e2d] 2]
2023-11-30T11:53:48.853Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.853Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.853Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 1]
2023-11-30T11:53:48.854Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.854Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.854Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 2]
2023-11-30T11:53:48.854Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.854Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 1]
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 2]
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 1]
2023-11-30T11:53:48.855Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 2]
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 1]
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.856Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x61a7a7de org.postgresql.jdbc.PgResultSetMetaData@61a7a7de] 2]
2023-11-30T11:53:48.857Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.857Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH

>>>exec-query::variables {}
2023-11-30T11:53:48.862Z NX-41294 DEBUG [leihs.procurement.graphql:48] - query-string => query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}

2023-11-30T11:53:48.863Z NX-41294 DEBUG [leihs.procurement.graphql:49] - (-> request :body :variables) => {}
2023-11-30T11:53:48.863Z NX-41294 DEBUG [leihs.procurement.graphql:52] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "jimmie@goyette.com", :contracts_count 0, :lastname "Admin", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Procurement", :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"Idea-d8c89f6f" {:value "5d06a449-7aaa-4285-b65a-53c2ae3cb299"}, "leihs-anti-csrf-token" {:value "65184e75-5146-4915-8494-09445d034d15"}, "leihs-user-session" {:value "02368990-f4a1-4ff9-817e-c317db4c124b"}}, :remote-addr "127.0.0.1", :start-time 108801557659208, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 "next.jdbc.result_set$as_unqualified_lower_maps@66a17058"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b", "content-length" "502", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure", "connection" "keep-alive", "x-csrf-token" "65184e75-5146-4915-8494-09445d034d15", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x56defcbe "/127.0.0.1:3230<->/127.0.0.1:52236"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 "HikariDataSource (db-pool)"]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "me", :variables {}, :query "query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 "leihs.procurement.graphql$handler@7fcd7d61"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}
2023-11-30T11:53:48.878Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1c8bd5f0 HikariProxyPreparedStatement@478926320 wrapping SELECT users.id, users.firstname, users.lastname FROM users  WHERE users.id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.878Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.879Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x6838d69c org.postgresql.jdbc.PgResultSetMetaData@6838d69c] 1]
2023-11-30T11:53:48.879Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.879Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.879Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x6838d69c org.postgresql.jdbc.PgResultSetMetaData@6838d69c] 2]
2023-11-30T11:53:48.880Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:48.880Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:48.880Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x6838d69c org.postgresql.jdbc.PgResultSetMetaData@6838d69c] 3]
2023-11-30T11:53:48.880Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:48.880Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:48.881Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x557395b HikariProxyPreparedStatement@89602395 wrapping SELECT procurement_users_filters.* FROM procurement_users_filters  WHERE procurement_users_filters.user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.881Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.887Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 1]
2023-11-30T11:53:48.887Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.887Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.887Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 2]
2023-11-30T11:53:48.887Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 1]
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 2]
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 1]
2023-11-30T11:53:48.888Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.889Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.889Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 2]
2023-11-30T11:53:48.889Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.889Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.890Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 1]
2023-11-30T11:53:48.890Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.890Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.890Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x66d200ba org.postgresql.jdbc.PgResultSetMetaData@66d200ba] 2]
2023-11-30T11:53:48.890Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.890Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.891Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 1]
2023-11-30T11:53:48.891Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:48.891Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:48.891Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 2]
2023-11-30T11:53:48.891Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 1]
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 2]
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:48.892Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 1]
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 2]
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 1]
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:48.893Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:48.894Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x6d2cfa99 org.postgresql.jdbc.PgResultSetMetaData@6d2cfa99] 2]
2023-11-30T11:53:48.894Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:48.894Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:48.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.936Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x41ca658b HikariProxyPreparedStatement@1103783307 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.936Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.937Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:48.937Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x6a0b10a6 HikariProxyPreparedStatement@1779110054 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:48.938Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.939Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1b7ea50a HikariProxyPreparedStatement@461284618 wrapping SELECT procurement_categories.* FROM procurement_categories INNER JOIN procurement_category_inspectors ON procurement_categories.id = procurement_category_inspectors.category_id WHERE procurement_category_inspectors.user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.939Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.964Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2bff045 HikariProxyPreparedStatement@46133317 wrapping SELECT procurement_categories.* FROM procurement_categories INNER JOIN procurement_category_viewers ON procurement_categories.id = procurement_category_viewers.category_id WHERE procurement_category_viewers.user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:48.965Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:48.978Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x28687f2 org.postgresql.jdbc.PgResultSetMetaData@28687f2] 1]
2023-11-30T11:53:48.981Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int4 0]
2023-11-30T11:53:48.981Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:48.981Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.587049000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x28687f2 org.postgresql.jdbc.PgResultSetMetaData@28687f2] 2]
2023-11-30T11:53:48.982Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.587049000-00:00"]
2023-11-30T11:53:48.982Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.587049Z"
2023-11-30T11:53:48.982Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.587049000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x28687f2 org.postgresql.jdbc.PgResultSetMetaData@28687f2] 3]
2023-11-30T11:53:48.982Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.587049000-00:00"]
2023-11-30T11:53:48.982Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.587049Z"
2023-11-30T11:53:48.982Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [http://hartmann.io/rolf #object[org.postgresql.jdbc.PgResultSetMetaData 0x28687f2 org.postgresql.jdbc.PgResultSetMetaData@28687f2] 4]
2023-11-30T11:53:48.983Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar http://hartmann.io/rolf]
2023-11-30T11:53:48.983Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  http://hartmann.io/rolf
2023-11-30T11:53:48.985Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x5fb69cee ["Eum architecto minus magnam."]] #object[org.postgresql.jdbc.PgResultSetMetaData 0x28687f2 org.postgresql.jdbc.PgResultSetMetaData@28687f2] 5]
2023-11-30T11:53:48.985Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:jsonb #object[org.postgresql.util.PGobject 0x5fb69cee ["Eum architecto minus magnam."]]]
2023-11-30T11:53:48.986Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  [Eum architecto minus magnam.]

>>>pure-handler {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"65184e75-5146-4915-8494-09445d034d15","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"e68ca036-dced-4666-b9e9-a6b55119f013","firstname":"Procurement","lastname":"Admin","login":null,"email":"jimmie@goyette.com"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id e68ca036-dced-4666-b9e9-a6b55119f013] [:firstname Procurement] [:lastname Admin] [:permissions #ordered/map ([:isAdmin true] [:isRequester false] [:isInspectorForCategories []] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url http://hartmann.io/rolf] [:__typename :ProcurementSettings])])}
2023-11-30T11:53:48.989Z NX-41294 DEBUG [leihs.procurement.graphql:72] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"65184e75-5146-4915-8494-09445d034d15\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e68ca036-dced-4666-b9e9-a6b55119f013\",\"firstname\":\"Procurement\",\"lastname\":\"Admin\",\"login\":null,\"email\":\"jimmie@goyette.com\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e68ca036-dced-4666-b9e9-a6b55119f013"] [:firstname "Procurement"] [:lastname "Admin"] [:permissions #ordered/map ([:isAdmin true] [:isRequester false] [:isInspectorForCategories []] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}
2023-11-30T11:53:48.989Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"65184e75-5146-4915-8494-09445d034d15\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e68ca036-dced-4666-b9e9-a6b55119f013\",\"firstname\":\"Procurement\",\"lastname\":\"Admin\",\"login\":null,\"email\":\"jimmie@goyette.com\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e68ca036-dced-4666-b9e9-a6b55119f013"] [:firstname "Procurement"] [:lastname "Admin"] [:permissions #ordered/map ([:isAdmin true] [:isRequester false] [:isInspectorForCategories []] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}}
2023-11-30T11:53:49.043Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x66ca4dbe HikariProxyPreparedStatement@1724534206 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = ? WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 1]  type:  java.lang.Long
2023-11-30T11:53:49.044Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.044Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text 02368990-f4a1-4ff9-817e-c317db4c124b #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x66ca4dbe HikariProxyPreparedStatement@1724534206 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 2]  type:  java.lang.String
2023-11-30T11:53:49.044Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  02368990-f4a1-4ff9-817e-c317db4c124b
2023-11-30T11:53:49.045Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text sha256 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x66ca4dbe HikariProxyPreparedStatement@1724534206 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 3]  type:  java.lang.String
2023-11-30T11:53:49.045Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  sha256
2023-11-30T11:53:49.046Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text hex #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x66ca4dbe HikariProxyPreparedStatement@1724534206 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', 'sha256'), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 4]  type:  java.lang.String
2023-11-30T11:53:49.046Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  hex
2023-11-30T11:53:49.048Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [jimmie@goyette.com #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 1]
2023-11-30T11:53:49.048Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar jimmie@goyette.com]
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  jimmie@goyette.com
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 2]
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 3]
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 6]
2023-11-30T11:53:49.049Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:49.050Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:49.050Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 10]
2023-11-30T11:53:49.050Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.050Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 11]
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2842b7a0 HikariProxyPreparedStatement@675461024 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = ? WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 1]  type:  java.lang.Long
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 12]
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.051Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "572264c6-6da9-4e28-b081-52d34f180fc8" #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 13]
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text 02368990-f4a1-4ff9-817e-c317db4c124b #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2842b7a0 HikariProxyPreparedStatement@675461024 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 2]  type:  java.lang.String
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"]
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  02368990-f4a1-4ff9-817e-c317db4c124b
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-30T09:54:12.806855000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x651fdcd3 org.postgresql.jdbc.PgResultSetMetaData@651fdcd3] 14]
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-30T09:54:12.806855000-00:00"]
2023-11-30T11:53:49.052Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-30T09:54:12.806855Z"
2023-11-30T11:53:49.053Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text sha256 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2842b7a0 HikariProxyPreparedStatement@675461024 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 3]  type:  java.lang.String
2023-11-30T11:53:49.053Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  sha256
2023-11-30T11:53:49.053Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x58506a29 HikariProxyPreparedStatement@1481665065 wrapping SELECT role, inventory_pool_id FROM access_rights  WHERE user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.053Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text hex #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2842b7a0 HikariProxyPreparedStatement@675461024 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', 'sha256'), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 4]  type:  java.lang.String
2023-11-30T11:53:49.053Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.053Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  hex
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44347 0x5eb2a6d2 leihs.core.locale$wrap$fn__44347@5eb2a6d2]

>> authorize::request > {:authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {Idea-d8c89f6f {:value 5d06a449-7aaa-4285-b65a-53c2ae3cb299}, leihs-anti-csrf-token {:value 65184e75-5146-4915-8494-09445d034d15}, leihs-user-session {:value 02368990-f4a1-4ff9-817e-c317db4c124b}}, :remote-addr 127.0.0.1, :start-time 108801817365833, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 next.jdbc.result_set$as_unqualified_lower_maps@66a17058]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token 65184e75-5146-4915-8494-09445d034d15, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x74f3f5b3 /127.0.0.1:3230<->/127.0.0.1:52247], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 leihs.procurement.graphql$handler@7fcd7d61], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-11-30T11:53:49.056Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-11-30T11:53:49.057Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.059Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x44d06b6b HikariProxyPreparedStatement@1154509675 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.059Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.062Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.062Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2c7bd834 HikariProxyPreparedStatement@746313780 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.062Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [jimmie@goyette.com #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 1]
2023-11-30T11:53:49.063Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.063Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.064Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x398c8394 HikariProxyPreparedStatement@965510036 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.064Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.064Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.065Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x109ec3e2 HikariProxyPreparedStatement@278840290 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.065Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.066Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-11-30T11:53:49.067Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x573241e6 HikariProxyPreparedStatement@1462911462 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = ? WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 1]  type:  java.lang.Long
2023-11-30T11:53:49.067Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.068Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar jimmie@goyette.com]
2023-11-30T11:53:49.068Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text 02368990-f4a1-4ff9-817e-c317db4c124b #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x573241e6 HikariProxyPreparedStatement@1462911462 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest(?, ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 2]  type:  java.lang.String
2023-11-30T11:53:49.068Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  jimmie@goyette.com
2023-11-30T11:53:49.068Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  02368990-f4a1-4ff9-817e-c317db4c124b
2023-11-30T11:53:49.068Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 2]
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 3]
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text sha256 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x573241e6 HikariProxyPreparedStatement@1462911462 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', ?), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 3]  type:  java.lang.String
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  sha256
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 6]
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:49.069Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 10]
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text hex #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x573241e6 HikariProxyPreparedStatement@1462911462 wrapping SELECT users.email, users.firstname, users.id, users.is_admin, users.language_locale, users.lastname, users.login, users.org_id, users.is_system_admin, users.id AS user_id, (SELECT count(*) FROM contracts WHERE contracts.user_id = users.id) AS contracts_count, (SELECT count(*) FROM access_rights WHERE access_rights.user_id = users.id) AS inventory_pool_roles_count, user_sessions.id AS user_session_id, user_sessions.created_at AS user_session_created_at, authentication_systems.external_sign_out_url AS external_sign_out_url FROM users INNER JOIN user_sessions ON users.id = user_id INNER JOIN authentication_systems ON authentication_systems.id = user_sessions.authentication_system_id INNER JOIN system_and_security_settings ON system_and_security_settings.id = 0 WHERE (user_sessions.token_hash = encode(digest('02368990-f4a1-4ff9-817e-c317db4c124b', 'sha256'), ?) AND now() < user_sessions.created_at + system_and_security_settings.sessions_max_lifetime_secs * interval '1 second' AND account_enabled = TRUE)] 4]  type:  java.lang.String
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  hex
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 11]
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 12]
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.070Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.071Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "572264c6-6da9-4e28-b081-52d34f180fc8" #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 13]
2023-11-30T11:53:49.071Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"]
2023-11-30T11:53:49.071Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"
2023-11-30T11:53:49.071Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-30T09:54:12.806855000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x7be3e66c org.postgresql.jdbc.PgResultSetMetaData@7be3e66c] 14]
2023-11-30T11:53:49.071Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-30T09:54:12.806855000-00:00"]
2023-11-30T11:53:49.071Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-30T09:54:12.806855Z"
2023-11-30T11:53:49.072Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:738] - db-pool - Added connection org.postgresql.jdbc.PgConnection@3ef7fc53
2023-11-30T11:53:49.072Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [jimmie@goyette.com #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 1]
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar jimmie@goyette.com]
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  jimmie@goyette.com
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 2]
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4366df30 HikariProxyPreparedStatement@1130815280 wrapping SELECT role, inventory_pool_id FROM access_rights  WHERE user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:49.073Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 3]
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 6]
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 1]
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:49.074Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:49.075Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 10]
2023-11-30T11:53:49.075Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.075Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.075Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 11]
2023-11-30T11:53:49.075Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.075Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 12]
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "572264c6-6da9-4e28-b081-52d34f180fc8" #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 13]
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"]
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "572264c6-6da9-4e28-b081-52d34f180fc8"
2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-30T09:54:12.806855000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x421f123d org.postgresql.jdbc.PgResultSetMetaData@421f123d] 14]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44347 0x5eb2a6d2 leihs.core.locale$wrap$fn__44347@5eb2a6d2]

>> authorize::request > {:authenticated-entity {2023-11-30T11:53:49.076Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-30T09:54:12.806855000-00:00"]
:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {Idea-d8c89f6f {:value 5d06a449-7aaa-4285-b65a-53c2ae3cb299}, leihs-anti-csrf-token {:value 65184e75-5146-4915-8494-09445d034d15}, leihs-user-session 2023-11-30T11:53:49.077Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-30T09:54:12.806855Z"
{:value 02368990-f4a1-4ff9-817e-c317db4c124b}}, :remote-addr 127.0.0.1, :start-time 108801817149250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 next.jdbc.result_set$as_unqualified_lower_maps@66a17058]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token 65184e75-5146-4915-8494-09445d034d15, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x8ff2d86 /127.0.0.1:3230<->/127.0.0.1:52237], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 leihs.procurement.graphql$handler@7fcd7d61], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-11-30T11:53:49.077Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-11-30T11:53:49.077Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.077Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x33d84e02 HikariProxyPreparedStatement@869813762 wrapping SELECT role, inventory_pool_id FROM access_rights  WHERE user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.077Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.078Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x341b3a HikariProxyPreparedStatement@3414842 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.078Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44347 0x5eb2a6d2 leihs.core.locale$wrap$fn__44347@5eb2a6d2]

>> authorize::request > {:authenticated-entity {:email jimmie@goyette.com, :contracts_count 0, :lastname Admin, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Procurement, :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {Idea-d8c89f6f {:value 5d06a449-7aaa-4285-b65a-53c2ae3cb299}, leihs-anti-csrf-token {:value 65184e75-5146-4915-8494-09445d034d15}, leihs-user-session {:value 02368990-f4a1-4ff9-817e-c317db4c124b}}, :remote-addr 127.0.0.1, :start-time 108801816911666, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 next.jdbc.result_set$as_unqualified_lower_maps@66a17058]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b, content-length 4019, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token 65184e75-5146-4915-8494-09445d034d15, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3b348b46 /127.0.0.1:3230<->/127.0.0.1:52236], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 HikariDataSource (db-pool)]}, :content-length 4019, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search nil, :organizations [fb664326-a8ef-4556-af02-07d3127cd9ec], :categories [7d5ba731-edd9-41ba-8773-7337d24c2327], :priority [NORMAL HIGH], :budgetPeriods [8b8fe440-cae5-4bf9-8048-d0ec2399faa1]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 leihs.procurement.graphql$handler@7fcd7d61], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-11-30T11:53:49.079Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.079Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-11-30T11:53:49.079Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.079Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.079Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 2]
2023-11-30T11:53:49.079Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2b2e4dca HikariProxyPreparedStatement@724454858 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5f37e722 HikariProxyPreparedStatement@1597499170 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 1]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 2]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.080Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 1]
2023-11-30T11:53:49.080Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 2]
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x7a09ab1c HikariProxyPreparedStatement@2047453980 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x7eb4a478 HikariProxyPreparedStatement@2125767800 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.081Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 1]
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.082Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x58aea021 org.postgresql.jdbc.PgResultSetMetaData@58aea021] 2]
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x7a968126 HikariProxyPreparedStatement@2056683814 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.082Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.082Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 1]
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x63f74967 HikariProxyPreparedStatement@1677150567 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.083Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 2]
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x8cb1046 HikariProxyPreparedStatement@147525702 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 1]
2023-11-30T11:53:49.083Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-11-30T11:53:49.083Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 2]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 1]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 1]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 1]
2023-11-30T11:53:49.084Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 2]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 1]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 2]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x630e20ca org.postgresql.jdbc.PgResultSetMetaData@630e20ca] 2]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 1]
2023-11-30T11:53:49.085Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 2]
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 1]
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.086Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 2]
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 1]
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.087Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 2]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x3107eb89 org.postgresql.jdbc.PgResultSetMetaData@3107eb89] 2]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 1]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 2]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.088Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 1]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 2]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 1]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 1]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.089Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x5950bdf1 org.postgresql.jdbc.PgResultSetMetaData@5950bdf1] 2]
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 2]
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 1]
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.090Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 2]

>>>exec-query::variables {}
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:738] - db-pool - Added connection org.postgresql.jdbc.PgConnection@40360cd3
2023-11-30T11:53:49.091Z NX-41294 DEBUG [leihs.procurement.graphql:48] - query-string => query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}

2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 1]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [leihs.procurement.graphql:49] - (-> request :body :variables) => {}
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 1]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 2]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [leihs.procurement.graphql:52] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "jimmie@goyette.com", :contracts_count 0, :lastname "Admin", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Procurement", :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"Idea-d8c89f6f" {:value "5d06a449-7aaa-4285-b65a-53c2ae3cb299"}, "leihs-anti-csrf-token" {:value "65184e75-5146-4915-8494-09445d034d15"}, "leihs-user-session" {:value "02368990-f4a1-4ff9-817e-c317db4c124b"}}, :remote-addr "127.0.0.1", :start-time 108801817365833, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 "next.jdbc.result_set$as_unqualified_lower_maps@66a17058"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b", "content-length" "502", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure/requests", "connection" "keep-alive", "x-csrf-token" "65184e75-5146-4915-8494-09445d034d15", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x74f3f5b3 "/127.0.0.1:3230<->/127.0.0.1:52247"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 "HikariDataSource (db-pool)"]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "me", :variables {}, :query "query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 "leihs.procurement.graphql$handler@7fcd7d61"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.091Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 2]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 1]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 1]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 2]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x104f5e54 org.postgresql.jdbc.PgResultSetMetaData@104f5e54] 2]
2023-11-30T11:53:49.092Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 1]
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 2]
2023-11-30T11:53:49.093Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 1]
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x5f8648d7 org.postgresql.jdbc.PgResultSetMetaData@5f8648d7] 2]
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x7f57582a HikariProxyPreparedStatement@2136430634 wrapping SELECT users.id, users.firstname, users.lastname FROM users  WHERE users.id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.094Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.095Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.095Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.095Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[org.postgresql.jdbc.PgResultSetMetaData 0x7dfb3ec2 org.postgresql.jdbc.PgResultSetMetaData@7dfb3ec2] 1]
2023-11-30T11:53:49.095Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Procurement #object[org.postgresql.jdbc.PgResultSetMetaData 0x7dfb3ec2 org.postgresql.jdbc.PgResultSetMetaData@7dfb3ec2] 2]
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Procurement]
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Procurement
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Admin #object[org.postgresql.jdbc.PgResultSetMetaData 0x7dfb3ec2 org.postgresql.jdbc.PgResultSetMetaData@7dfb3ec2] 3]
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Admin]
2023-11-30T11:53:49.096Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Admin
2023-11-30T11:53:49.097Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1d8aec78 HikariProxyPreparedStatement@495643768 wrapping SELECT procurement_users_filters.* FROM procurement_users_filters  WHERE procurement_users_filters.user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.097Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"

>>>exec-query::variables {}
2023-11-30T11:53:49.098Z NX-41294 DEBUG [leihs.procurement.graphql:48] - query-string => query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}

2023-11-30T11:53:49.098Z NX-41294 DEBUG [leihs.procurement.graphql:49] - (-> request :body :variables) => {}
2023-11-30T11:53:49.098Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 1]
2023-11-30T11:53:49.098Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.098Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.098Z NX-41294 DEBUG [leihs.procurement.graphql:52] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "jimmie@goyette.com", :contracts_count 0, :lastname "Admin", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Procurement", :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"Idea-d8c89f6f" {:value "5d06a449-7aaa-4285-b65a-53c2ae3cb299"}, "leihs-anti-csrf-token" {:value "65184e75-5146-4915-8494-09445d034d15"}, "leihs-user-session" {:value "02368990-f4a1-4ff9-817e-c317db4c124b"}}, :remote-addr "127.0.0.1", :start-time 108801817149250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 "next.jdbc.result_set$as_unqualified_lower_maps@66a17058"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b", "content-length" "534", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure/requests", "connection" "keep-alive", "x-csrf-token" "65184e75-5146-4915-8494-09445d034d15", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x8ff2d86 "/127.0.0.1:3230<->/127.0.0.1:52237"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 "HikariDataSource (db-pool)"]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "RequestFilters", :variables {}, :query "query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 "leihs.procurement.graphql$handler@7fcd7d61"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}
2023-11-30T11:53:49.098Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 2]
2023-11-30T11:53:49.098Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.098Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 1]
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 2]
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 1]
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.099Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 2]
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 1]
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x440d1a75 org.postgresql.jdbc.PgResultSetMetaData@440d1a75] 2]
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.100Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH
2023-11-30T11:53:49.101Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (UK) #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 1]
2023-11-30T11:53:49.101Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (UK)]
2023-11-30T11:53:49.101Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (UK)
2023-11-30T11:53:49.101Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-GB #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 2]
2023-11-30T11:53:49.101Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-GB]
2023-11-30T11:53:49.101Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-GB
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [English (US) #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 1]
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar English (US)]
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  English (US)
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [en-US #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 2]
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar en-US]
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  en-US
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Deutsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 1]
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Deutsch]
2023-11-30T11:53:49.102Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Deutsch
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [de-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 2]
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar de-CH]
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  de-CH
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Züritüütsch #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 1]
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Züritüütsch]
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Züritüütsch
2023-11-30T11:53:49.103Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [gsw-CH #object[org.postgresql.jdbc.PgResultSetMetaData 0x4c7585ef org.postgresql.jdbc.PgResultSetMetaData@4c7585ef] 2]
2023-11-30T11:53:49.104Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar gsw-CH]
2023-11-30T11:53:49.104Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  gsw-CH

>>>exec-query::variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search nil, :organizations [fb664326-a8ef-4556-af02-07d3127cd9ec], :categories [7d5ba731-edd9-41ba-8773-7337d24c2327], :priority [NORMAL HIGH], :budgetPeriods [8b8fe440-cae5-4bf9-8048-d0ec2399faa1]}
2023-11-30T11:53:49.106Z NX-41294 DEBUG [leihs.procurement.graphql:48] - query-string => query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

2023-11-30T11:53:49.106Z NX-41294 DEBUG [leihs.procurement.graphql:49] - (-> request :body :variables) => {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search nil, :organizations ["fb664326-a8ef-4556-af02-07d3127cd9ec"], :categories ["7d5ba731-edd9-41ba-8773-7337d24c2327"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]}
2023-11-30T11:53:49.106Z NX-41294 DEBUG [leihs.procurement.graphql:52] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "jimmie@goyette.com", :contracts_count 0, :lastname "Admin", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Procurement", :scope_admin_write false, :user_session_created_at #time/instant "2023-11-30T09:54:12.806855Z", :id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :user_session_id #uuid "572264c6-6da9-4e28-b081-52d34f180fc8", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e68ca036-dced-4666-b9e9-a6b55119f013", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"Idea-d8c89f6f" {:value "5d06a449-7aaa-4285-b65a-53c2ae3cb299"}, "leihs-anti-csrf-token" {:value "65184e75-5146-4915-8494-09445d034d15"}, "leihs-user-session" {:value "02368990-f4a1-4ff9-817e-c317db4c124b"}}, :remote-addr "127.0.0.1", :start-time 108801816911666, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x79938160 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x66a17058 "next.jdbc.result_set$as_unqualified_lower_maps@66a17058"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "Idea-d8c89f6f=5d06a449-7aaa-4285-b65a-53c2ae3cb299; leihs-anti-csrf-token=65184e75-5146-4915-8494-09445d034d15; leihs-user-session=02368990-f4a1-4ff9-817e-c317db4c124b", "content-length" "4019", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure/requests", "connection" "keep-alive", "x-csrf-token" "65184e75-5146-4915-8494-09445d034d15", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3b348b46 "/127.0.0.1:3230<->/127.0.0.1:52236"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x25e6d558 "HikariDataSource (db-pool)"]}, :content-length 4019, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "RequestsIndexFiltered", :variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search nil, :organizations ["fb664326-a8ef-4556-af02-07d3127cd9ec"], :categories ["7d5ba731-edd9-41ba-8773-7337d24c2327"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]}, :query "query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7fcd7d61 "leihs.procurement.graphql$handler@7fcd7d61"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}
2023-11-30T11:53:49.112Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.113Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x67d95e3d HikariProxyPreparedStatement@1742298685 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.113Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.114Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.114Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2c6153c2 HikariProxyPreparedStatement@744575938 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.114Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.115Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x7b88ff8f HikariProxyPreparedStatement@2072575887 wrapping SELECT procurement_categories.* FROM procurement_categories INNER JOIN procurement_category_inspectors ON procurement_categories.id = procurement_category_inspectors.category_id WHERE procurement_category_inspectors.user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.116Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.117Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xa685faf HikariProxyPreparedStatement@174612399 wrapping SELECT procurement_categories.* FROM procurement_categories INNER JOIN procurement_category_viewers ON procurement_categories.id = procurement_category_viewers.category_id WHERE procurement_category_viewers.user_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.118Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.119Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x74177ea4 org.postgresql.jdbc.PgResultSetMetaData@74177ea4] 1]
>>>get-dashboard
2023-11-30T11:53:49.124Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int4 0]
2023-11-30T11:53:49.124Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [fb664326-a8ef-4556-af02-07d3127cd9ec], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search nil, :priority [:NORMAL :HIGH], :budget_period_id [8b8fe440-cae5-4bf9-8048-d0ec2399faa1], :category_id [7d5ba731-edd9-41ba-8773-7337d24c2327]}
>>value nil
2023-11-30T11:53:49.124Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.587049000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x74177ea4 org.postgresql.jdbc.PgResultSetMetaData@74177ea4] 2]
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories  ORDER BY procurement_main_categories.name ASC]
2023-11-30T11:53:49.125Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.587049000-00:00"]
2023-11-30T11:53:49.125Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.587049Z"
2023-11-30T11:53:49.125Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.587049000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x74177ea4 org.postgresql.jdbc.PgResultSetMetaData@74177ea4] 3]
2023-11-30T11:53:49.126Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.587049000-00:00"]
2023-11-30T11:53:49.126Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.587049Z"
2023-11-30T11:53:49.126Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [http://hartmann.io/rolf #object[org.postgresql.jdbc.PgResultSetMetaData 0x74177ea4 org.postgresql.jdbc.PgResultSetMetaData@74177ea4] 4]
2023-11-30T11:53:49.126Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar http://hartmann.io/rolf]
2023-11-30T11:53:49.126Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  http://hartmann.io/rolf
2023-11-30T11:53:49.128Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x5351af39 ["Eum architecto minus magnam."]] #object[org.postgresql.jdbc.PgResultSetMetaData 0x74177ea4 org.postgresql.jdbc.PgResultSetMetaData@74177ea4] 5]
2023-11-30T11:53:49.128Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:jsonb #object[org.postgresql.util.PGobject 0x5351af39 ["Eum architecto minus magnam."]]]
2023-11-30T11:53:49.128Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  [Eum architecto minus magnam.]

>>>pure-handler {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"65184e75-5146-4915-8494-09445d034d15","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"e68ca036-dced-4666-b9e9-a6b55119f013","firstname":"Procurement","lastname":"Admin","login":null,"email":"jimmie@goyette.com"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id e68ca036-dced-4666-b9e9-a6b55119f013] [:firstname Procurement] [:lastname Admin] [:permissions #ordered/map ([:isAdmin true] [:isRequester false] [:isInspectorForCategories []] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url http://hartmann.io/rolf] [:__typename :ProcurementSettings])])}
2023-11-30T11:53:49.129Z NX-41294 DEBUG [leihs.procurement.graphql:72] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"65184e75-5146-4915-8494-09445d034d15\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e68ca036-dced-4666-b9e9-a6b55119f013\",\"firstname\":\"Procurement\",\"lastname\":\"Admin\",\"login\":null,\"email\":\"jimmie@goyette.com\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e68ca036-dced-4666-b9e9-a6b55119f013"] [:firstname "Procurement"] [:lastname "Admin"] [:permissions #ordered/map ([:isAdmin true] [:isRequester false] [:isInspectorForCategories []] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}
2023-11-30T11:53:49.129Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"65184e75-5146-4915-8494-09445d034d15\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e68ca036-dced-4666-b9e9-a6b55119f013\",\"firstname\":\"Procurement\",\"lastname\":\"Admin\",\"login\":null,\"email\":\"jimmie@goyette.com\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e68ca036-dced-4666-b9e9-a6b55119f013"] [:firstname "Procurement"] [:lastname "Admin"] [:permissions #ordered/map ([:isAdmin true] [:isRequester false] [:isInspectorForCategories []] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}}
2023-11-30T11:53:49.133Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x6ab7e01f org.postgresql.jdbc.PgResultSetMetaData@6ab7e01f] 1]
2023-11-30T11:53:49.136Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]
2023-11-30T11:53:49.136Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.136Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Budget-Period-Past #object[org.postgresql.jdbc.PgResultSetMetaData 0x6ab7e01f org.postgresql.jdbc.PgResultSetMetaData@6ab7e01f] 2]
2023-11-30T11:53:49.136Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Budget-Period-Past]
2023-11-30T11:53:49.136Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Budget-Period-Past
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-08-23T22:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x6ab7e01f org.postgresql.jdbc.PgResultSetMetaData@6ab7e01f] 3]
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-08-23T22:00:00.000000000-00:00"]
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-08-23T22:00:00Z"
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-22T23:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x6ab7e01f org.postgresql.jdbc.PgResultSetMetaData@6ab7e01f] 4]
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-22T23:00:00.000000000-00:00"]
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-22T23:00:00Z"
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x6ab7e01f org.postgresql.jdbc.PgResultSetMetaData@6ab7e01f] 5]
2023-11-30T11:53:49.137Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.138Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
2023-11-30T11:53:49.138Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x6ab7e01f org.postgresql.jdbc.PgResultSetMetaData@6ab7e01f] 6]
2023-11-30T11:53:49.138Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.138Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
2023-11-30T11:53:49.140Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[org.postgresql.jdbc.PgResultSetMetaData 0x4d7ec88c org.postgresql.jdbc.PgResultSetMetaData@4d7ec88c] 1]
2023-11-30T11:53:49.141Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[org.postgresql.jdbc.PgResultSetMetaData 0x7d2a031d org.postgresql.jdbc.PgResultSetMetaData@7d2a031d] 1]
2023-11-30T11:53:49.143Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"]
2023-11-30T11:53:49.143Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.143Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Main Category MC1 #object[org.postgresql.jdbc.PgResultSetMetaData 0x4d7ec88c org.postgresql.jdbc.PgResultSetMetaData@4d7ec88c] 2]
2023-11-30T11:53:49.143Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Main Category MC1]
2023-11-30T11:53:49.143Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"]
2023-11-30T11:53:49.144Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Main Category MC1
2023-11-30T11:53:49.144Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
>>mainCats ({:id #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", :name Main Category MC1})
2023-11-30T11:53:49.144Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Main Category MC1 #object[org.postgresql.jdbc.PgResultSetMetaData 0x7d2a031d org.postgresql.jdbc.PgResultSetMetaData@7d2a031d] 2]
2023-11-30T11:53:49.144Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Main Category MC1]
2023-11-30T11:53:49.144Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Main Category MC1
2023-11-30T11:53:49.145Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 8b8fe440-cae5-4bf9-8048-d0ec2399faa1 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x77355b3a HikariProxyPreparedStatement@1999985466 wrapping SELECT procurement_budget_periods.* FROM procurement_budget_periods  WHERE (procurement_budget_periods.id in (?)) ORDER BY end_date DESC] 1]  type:  java.lang.String
2023-11-30T11:53:49.145Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.145Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0xdc581a6 HikariProxyPreparedStatement@231047590 wrapping SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.145Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.147Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x45cd13a1 org.postgresql.jdbc.PgResultSetMetaData@45cd13a1] 1]
2023-11-30T11:53:49.150Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Budget-Period-Past #object[org.postgresql.jdbc.PgResultSetMetaData 0x45cd13a1 org.postgresql.jdbc.PgResultSetMetaData@45cd13a1] 2]
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Budget-Period-Past]
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Budget-Period-Past
2023-11-30T11:53:49.150Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1216be49 HikariProxyPreparedStatement@303480393 wrapping SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC] 1]  type:  java.util.UUID
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-08-23T22:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x45cd13a1 org.postgresql.jdbc.PgResultSetMetaData@45cd13a1] 3]
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-08-23T22:00:00.000000000-00:00"]
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-08-23T22:00:00Z"
2023-11-30T11:53:49.151Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-22T23:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x45cd13a1 org.postgresql.jdbc.PgResultSetMetaData@45cd13a1] 4]
2023-11-30T11:53:49.152Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-22T23:00:00.000000000-00:00"]
2023-11-30T11:53:49.152Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "7d5ba731-edd9-41ba-8773-7337d24c2327" #object[org.postgresql.jdbc.PgResultSetMetaData 0x28f56b5 org.postgresql.jdbc.PgResultSetMetaData@28f56b5] 1]
2023-11-30T11:53:49.152Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-22T23:00:00Z"
2023-11-30T11:53:49.152Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x45cd13a1 org.postgresql.jdbc.PgResultSetMetaData@45cd13a1] 5]
2023-11-30T11:53:49.153Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.153Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
2023-11-30T11:53:49.154Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x45cd13a1 org.postgresql.jdbc.PgResultSetMetaData@45cd13a1] 6]
2023-11-30T11:53:49.154Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.154Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
>>resultA0-bps-original ({:id #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1", :name Budget-Period-Past, :inspection_start_date #time/instant "2023-08-23T22:00:00Z", :end_date #time/instant "2023-11-22T23:00:00Z", :created_at #time/instant "2023-11-24T19:25:51.605131Z", :updated_at #time/instant "2023-11-24T19:25:51.605131Z"})
2023-11-30T11:53:49.154Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"]
>>queryA1 [SELECT procurement_budget_periods.* FROM procurement_budget_periods  WHERE (procurement_budget_periods.id in (?)) ORDER BY end_date DESC 8b8fe440-cae5-4bf9-8048-d0ec2399faa1]
2023-11-30T11:53:49.154Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.154Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Category C1 #object[org.postgresql.jdbc.PgResultSetMetaData 0x28f56b5 org.postgresql.jdbc.PgResultSetMetaData@28f56b5] 2]
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Category C1]
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Category C1
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 8b8fe440-cae5-4bf9-8048-d0ec2399faa1 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2f424bba HikariProxyPreparedStatement@792873914 wrapping SELECT procurement_budget_periods.* FROM procurement_budget_periods  WHERE (procurement_budget_periods.id in (?)) ORDER BY end_date DESC] 1]  type:  java.lang.String
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[org.postgresql.jdbc.PgResultSetMetaData 0x28f56b5 org.postgresql.jdbc.PgResultSetMetaData@28f56b5] 3]
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"]
2023-11-30T11:53:49.155Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x50b811b3 org.postgresql.jdbc.PgResultSetMetaData@50b811b3] 1]
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Budget-Period-Past #object[org.postgresql.jdbc.PgResultSetMetaData 0x50b811b3 org.postgresql.jdbc.PgResultSetMetaData@50b811b3] 2]
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Budget-Period-Past]
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Budget-Period-Past
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-08-23T22:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x50b811b3 org.postgresql.jdbc.PgResultSetMetaData@50b811b3] 3]
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-08-23T22:00:00.000000000-00:00"]
2023-11-30T11:53:49.156Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-08-23T22:00:00Z"
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-22T23:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x50b811b3 org.postgresql.jdbc.PgResultSetMetaData@50b811b3] 4]
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-22T23:00:00.000000000-00:00"]
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-22T23:00:00Z"
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x50b811b3 org.postgresql.jdbc.PgResultSetMetaData@50b811b3] 5]
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x50b811b3 org.postgresql.jdbc.PgResultSetMetaData@50b811b3] 6]
2023-11-30T11:53:49.157Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.158Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
>>resultA1 ({:id #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1", :name Budget-Period-Past, :inspection_start_date #time/instant "2023-08-23T22:00:00Z", :end_date #time/instant "2023-11-22T23:00:00Z", :created_at #time/instant "2023-11-24T19:25:51.605131Z", :updated_at #time/instant "2023-11-24T19:25:51.605131Z"})
>>resultA1-2 ({:id #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1", :name Budget-Period-Past, :inspection_start_date #time/instant "2023-08-23T22:00:00Z", :end_date #time/instant "2023-11-22T23:00:00Z", :created_at #time/instant "2023-11-24T19:25:51.605131Z", :updated_at #time/instant "2023-11-24T19:25:51.605131Z"})
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [fb664326-a8ef-4556-af02-07d3127cd9ec], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search nil, :priority [:NORMAL :HIGH], :budget_period_id [8b8fe440-cae5-4bf9-8048-d0ec2399faa1], :category_id [7d5ba731-edd9-41ba-8773-7337d24c2327]} nil
2023-11-30T11:53:49.159Z NX-41294 DEBUG [leihs.procurement.resources.requests:140] - arguments => {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id ["fb664326-a8ef-4556-af02-07d3127cd9ec"], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search nil, :priority [:NORMAL :HIGH], :budget_period_id ["8b8fe440-cae5-4bf9-8048-d0ec2399faa1"], :category_id ["7d5ba731-edd9-41ba-8773-7337d24c2327"]}
2023-11-30T11:53:49.160Z NX-41294 DEBUG [leihs.procurement.resources.requests:141] - value => nil
>get-requests>> ???
>o> 1-After requests-query-map:
2023-11-30T11:53:49.161Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.162Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1db0b843 HikariProxyPreparedStatement@498120771 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.162Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.163Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.164Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1f9294c6 HikariProxyPreparedStatement@529700038 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.164Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.165Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.165Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x768e17e5 HikariProxyPreparedStatement@1989023717 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.165Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.167Z NX-41294 DEBUG [leihs.procurement.permissions.user:85] - (->> [viewer? inspector? admin?] (map (fn* [p1__39301#] (p1__39301# tx auth-entity))) (some true?)) => true
2023-11-30T11:53:49.168Z NX-41294 DEBUG [leihs.procurement.resources.requests:64] - (user-perms/advanced? tx (:authenticated-entity rrequest)) => true
>o> state-sql #sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED]
>o> class honeysql.types.SqlCall
2023-11-30T11:53:49.169Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9" #object[org.postgresql.jdbc.PgResultSetMetaData 0x267213a9 org.postgresql.jdbc.PgResultSetMetaData@267213a9] 1]
>o> state-sql _> formatted [CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
2023-11-30T11:53:49.170Z NX-41294 DEBUG [leihs.procurement.resources.request:142] - result => #sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"]
2023-11-30T11:53:49.172Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"]
2023-11-30T11:53:49.172Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"
2023-11-30T11:53:49.172Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Home, Jewelry & Computers #object[org.postgresql.jdbc.PgResultSetMetaData 0x267213a9 org.postgresql.jdbc.PgResultSetMetaData@267213a9] 2]
2023-11-30T11:53:49.171Z NX-41294 DEBUG [leihs.procurement.resources.request:166] - (-> requests-base-query (sql/merge-select [(state-sql advanced-user?) :state]) (sql/merge-join :procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
2023-11-30T11:53:49.172Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Home, Jewelry & Computers]
2023-11-30T11:53:49.172Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Home, Jewelry & Computers
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-11-30T11:53:49.173Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-11-30T11:53:49.174Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [2023-11-30T11:53:49.175Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1edf82a3 HikariProxyPreparedStatement@517964451 wrapping SELECT procurement_organizations.* FROM procurement_organizations  WHERE procurement_organizations.parent_id = ? ORDER BY procurement_organizations.name ASC] 1]  type:  java.util.UUID
#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* 2023-11-30T11:53:49.175Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"
[#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-11-30T11:53:49.175Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "fb664326-a8ef-4556-af02-07d3127cd9ec" #object[org.postgresql.jdbc.PgResultSetMetaData 0x5a868c11 org.postgresql.jdbc.PgResultSetMetaData@5a868c11] 1]
2023-11-30T11:53:49.176Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"]
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"
2023-11-30T11:53:49.176Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Beauty & Kids #object[org.postgresql.jdbc.PgResultSetMetaData 0x5a868c11 org.postgresql.jdbc.PgResultSetMetaData@5a868c11] 2]
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Beauty & Kids]
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Beauty & Kids
2023-11-30T11:53:49.176Z NX-41294 DEBUG [leihs.procurement.resources.requests:66] - (-> (request/requests-base-query-with-state advanced-user?) request-helpers/join-and-nest-associated-resources) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-11-30T11:53:49.176Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9" #object[org.postgresql.jdbc.PgResultSetMetaData 0x5a868c11 org.postgresql.jdbc.PgResultSetMetaData@5a868c11] 4]
2023-11-30T11:53:49.177Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"]
2023-11-30T11:53:49.177Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"
>o> 2-After apply-scope: {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:and [:in :procurement_requests.category_id [7d5ba731-edd9-41ba-8773-7337d24c2327]] [:in :procurement_requests.budget_period_id [8b8fe440-cae5-4bf9-8048-d0ec2399faa1]] [:in :procurement_requests.organization_id [fb664326-a8ef-4556-af02-07d3127cd9ec]] [:in :procurement_requests.priority (normal high)] [:in :procurement_requests.inspector_priority (low medium high mandatory)] [:or [:= :procurement_requests.approved_quantity nil] [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] [:= :procurement_requests.approved_quantity 0]] [:in :procurement_requests.order_status (#sql/call [:cast not_processed :order_status_enum] #sql/call [:cast in_progress :order_status_enum] #sql/call [:cast procured :order_status_enum] #sql/call [:cast alternative_procured :order_status_enum] #sql/call [:cast not_procured :order_status_enum])]]}

>>>pure-handler {:data #ordered/map ([:budget_periods [#ordered/map ([:id 8b8fe440-cae5-4bf9-8048-d0ec2399faa1] [:name Budget-Period-Past] [:inspection_start_date 2023-08-23T22:00:00Z] [:end_date 2023-11-22T23:00:00Z] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id d2907cbd-98d0-48b7-ab9a-f06803e5cabb] [:name Main Category MC1] [:categories [#ordered/map ([:id 7d5ba731-edd9-41ba-8773-7337d24c2327] [:name Category C1] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9] [:name Home, Jewelry & Computers] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id fb664326-a8ef-4556-af02-07d3127cd9ec] [:name Beauty & Kids] [:shortname nil] [:__typename :Organization])]])]])}
2023-11-30T11:53:49.177Z NX-41294 DEBUG [leihs.procurement.graphql:72] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:name "Budget-Period-Past"] [:inspection_start_date "2023-08-23T22:00:00Z"] [:end_date "2023-11-22T23:00:00Z"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:name "Main Category MC1"] [:categories [#ordered/map ([:id "7d5ba731-edd9-41ba-8773-7337d24c2327"] [:name "Category C1"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"] [:name "Home, Jewelry & Computers"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "fb664326-a8ef-4556-af02-07d3127cd9ec"] [:name "Beauty & Kids"] [:shortname nil] [:__typename :Organization])]])]])}
2023-11-30T11:53:49.177Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.178Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:budget_periods [#ordered/map ([:id "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:name "Budget-Period-Past"] [:inspection_start_date "2023-08-23T22:00:00Z"] [:end_date "2023-11-22T23:00:00Z"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:name "Main Category MC1"] [:categories [#ordered/map ([:id "7d5ba731-edd9-41ba-8773-7337d24c2327"] [:name "Category C1"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"] [:name "Home, Jewelry & Computers"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "fb664326-a8ef-4556-af02-07d3127cd9ec"] [:name "Beauty & Kids"] [:shortname nil] [:__typename :Organization])]])]])}}
2023-11-30T11:53:49.178Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x24778302 HikariProxyPreparedStatement@611812098 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.178Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
>o> 3-After sql-format: {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:and [:in :procurement_requests.category_id [7d5ba731-edd9-41ba-8773-7337d24c2327]] [:in :procurement_requests.budget_period_id [8b8fe440-cae5-4bf9-8048-d0ec2399faa1]] [:in :procurement_requests.organization_id [fb664326-a8ef-4556-af02-07d3127cd9ec]] [:in :procurement_requests.priority (normal high)] [:in :procurement_requests.inspector_priority (low medium high mandatory)] [:or [:= :procurement_requests.approved_quantity nil] [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] [:= :procurement_requests.approved_quantity 0]] [:in :procurement_requests.order_status (#sql/call [:cast not_processed :order_status_enum] #sql/call [:cast in_progress :order_status_enum] #sql/call [:cast procured :order_status_enum] #sql/call [:cast alternative_procured :order_status_enum] #sql/call [:cast not_procured :order_status_enum])]]}
2023-11-30T11:53:49.197Z NX-41294 DEBUG [leihs.procurement.resources.requests:170] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "7d5ba731-edd9-41ba-8773-7337d24c2327" "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" "fb664326-a8ef-4556-af02-07d3127cd9ec" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured"]
2023-11-30T11:53:49.198Z NX-41294 DEBUG [leihs.procurement.resources.requests:172] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "7d5ba731-edd9-41ba-8773-7337d24c2327" "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" "fb664326-a8ef-4556-af02-07d3127cd9ec" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured"]
>>broken-query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED 7d5ba731-edd9-41ba-8773-7337d24c2327 8b8fe440-cae5-4bf9-8048-d0ec2399faa1 fb664326-a8ef-4556-af02-07d3127cd9ec normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured]
2023-11-30T11:53:49.198Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.199Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x65b20a83 HikariProxyPreparedStatement@1706166915 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.199Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.200Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.201Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x3bb6d8fd HikariProxyPreparedStatement@1001838845 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.201Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.201Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.202Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2be1d28f HikariProxyPreparedStatement@736219791 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.202Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.202Z NX-41294 DEBUG [leihs.procurement.permissions.user:85] - (->> [viewer? inspector? admin?] (map (fn* [p1__39301#] (p1__39301# tx auth-entity))) (some true?)) => true
2023-11-30T11:53:49.205Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text NEW #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 1]  type:  java.lang.String
2023-11-30T11:53:49.205Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  NEW
2023-11-30T11:53:49.206Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text APPROVED #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 2]  type:  java.lang.String
2023-11-30T11:53:49.206Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  APPROVED
2023-11-30T11:53:49.207Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 3]  type:  java.lang.Long
2023-11-30T11:53:49.207Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.209Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text PARTIALLY_APPROVED #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 4]  type:  java.lang.String
2023-11-30T11:53:49.209Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  PARTIALLY_APPROVED
2023-11-30T11:53:49.210Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 5]  type:  java.lang.Long
2023-11-30T11:53:49.210Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.211Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:text DENIED #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 6]  type:  java.lang.String
2023-11-30T11:53:49.211Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  DENIED
2023-11-30T11:53:49.212Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 7d5ba731-edd9-41ba-8773-7337d24c2327 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in (?)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 7]  type:  java.lang.String
2023-11-30T11:53:49.212Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.213Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 8b8fe440-cae5-4bf9-8048-d0ec2399faa1 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 8]  type:  java.lang.String
2023-11-30T11:53:49.213Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.215Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid fb664326-a8ef-4556-af02-07d3127cd9ec #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 9]  type:  java.lang.String
2023-11-30T11:53:49.215Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"
2023-11-30T11:53:49.216Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:varchar normal #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 10]  type:  java.lang.String
2023-11-30T11:53:49.216Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  normal
2023-11-30T11:53:49.217Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:varchar high #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', ?)) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 11]  type:  java.lang.String
2023-11-30T11:53:49.217Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  high
2023-11-30T11:53:49.219Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:varchar low #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in (?, ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 12]  type:  java.lang.String
2023-11-30T11:53:49.219Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  low
2023-11-30T11:53:49.220Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:varchar medium #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', ?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 13]  type:  java.lang.String
2023-11-30T11:53:49.220Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  medium
2023-11-30T11:53:49.221Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:varchar high #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 14]  type:  java.lang.String
2023-11-30T11:53:49.222Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  high
2023-11-30T11:53:49.223Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:varchar mandatory #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 15]  type:  java.lang.String
2023-11-30T11:53:49.223Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  mandatory
2023-11-30T11:53:49.224Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 16]  type:  java.lang.Long
2023-11-30T11:53:49.228Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.229Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:int4 0 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 17]  type:  java.lang.Long
2023-11-30T11:53:49.229Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  0
2023-11-30T11:53:49.230Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:order_status_enum not_processed #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) OR procurement_requests.approved_quantity = 0) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 18]  type:  java.lang.String
2023-11-30T11:53:49.234Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  not_processed
2023-11-30T11:53:49.237Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:order_status_enum in_progress #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) OR procurement_requests.approved_quantity = 0) AND (procurement_requests.order_status in (CAST('not_processed' AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 19]  type:  java.lang.String
2023-11-30T11:53:49.237Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  in_progress
2023-11-30T11:53:49.239Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:order_status_enum procured #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) OR procurement_requests.approved_quantity = 0) AND (procurement_requests.order_status in (CAST('not_processed' AS order_status_enum), CAST('in_progress' AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 20]  type:  java.lang.String
2023-11-30T11:53:49.239Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  procured
2023-11-30T11:53:49.240Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:order_status_enum alternative_procured #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) OR procurement_requests.approved_quantity = 0) AND (procurement_requests.order_status in (CAST('not_processed' AS order_status_enum), CAST('in_progress' AS order_status_enum), CAST('procured' AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 21]  type:  java.lang.String
2023-11-30T11:53:49.245Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  alternative_procured
2023-11-30T11:53:49.251Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:order_status_enum not_procured #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2d8135d1 HikariProxyPreparedStatement@763442641 wrapping SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN 'NEW' WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN 'APPROVED' WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) THEN 'PARTIALLY_APPROVED' WHEN procurement_requests.approved_quantity = 0 THEN 'DENIED' END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE ((procurement_requests.category_id in ('7d5ba731-edd9-41ba-8773-7337d24c2327'::uuid)) AND (procurement_requests.budget_period_id in ('8b8fe440-cae5-4bf9-8048-d0ec2399faa1'::uuid)) AND (procurement_requests.organization_id in ('fb664326-a8ef-4556-af02-07d3127cd9ec'::uuid)) AND (procurement_requests.priority in ('normal', 'high')) AND (procurement_requests.inspector_priority in ('low', 'medium', 'high', 'mandatory')) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > 0) OR procurement_requests.approved_quantity = 0) AND (procurement_requests.order_status in (CAST('not_processed' AS order_status_enum), CAST('in_progress' AS order_status_enum), CAST('procured' AS order_status_enum), CAST('alternative_procured' AS order_status_enum), CAST(? AS order_status_enum)))) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))] 22]  type:  java.lang.String
2023-11-30T11:53:49.252Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  not_procured
2023-11-30T11:53:49.322Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 1]
2023-11-30T11:53:49.330Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"]
2023-11-30T11:53:49.330Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"
2023-11-30T11:53:49.330Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 2]
2023-11-30T11:53:49.330Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]
2023-11-30T11:53:49.330Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.330Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "7d5ba731-edd9-41ba-8773-7337d24c2327" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 3]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "2187a76b-557a-4775-9a1e-778142161819" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 4]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "2187a76b-557a-4775-9a1e-778142161819"]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "2187a76b-557a-4775-9a1e-778142161819"
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "fb664326-a8ef-4556-af02-07d3127cd9ec" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 5]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Mediocre Aluminum Shoes #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 9]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Mediocre Aluminum Shoes]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Mediocre Aluminum Shoes
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [1 #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 11]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int4 1]
2023-11-30T11:53:49.331Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  1
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [0 #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 14]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:int8 0]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  0
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [CHF #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 15]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar CHF]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  CHF
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [normal #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 16]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar normal]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  normal
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Corporis commodi provident nam. #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 20]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Corporis commodi provident nam.]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Corporis commodi provident nam.
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.635215000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 22]
2023-11-30T11:53:49.332Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.635215000-00:00"]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.635215Z"
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [medium #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 23]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar medium]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  medium
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "64bfb152-ea6c-42da-98c6-325afeb462bc" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 24]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "64bfb152-ea6c-42da-98c6-325afeb462bc"]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "64bfb152-ea6c-42da-98c6-325afeb462bc"
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.635215000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 25]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.635215000-00:00"]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.635215Z"
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [aquisition #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 26]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar aquisition]
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  aquisition
2023-11-30T11:53:49.333Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Budget-Period-Past.001 #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 28]
2023-11-30T11:53:49.334Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Budget-Period-Past.001]
2023-11-30T11:53:49.334Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Budget-Period-Past.001
2023-11-30T11:53:49.336Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [not_processed #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 29]
2023-11-30T11:53:49.336Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:order_status_enum not_processed]
2023-11-30T11:53:49.336Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  not_processed
2023-11-30T11:53:49.336Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [NEW #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 31]
2023-11-30T11:53:49.336Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar NEW]
2023-11-30T11:53:49.336Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  NEW
2023-11-30T11:53:49.337Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x2e07ab1b {"id":"8b8fe440-cae5-4bf9-8048-d0ec2399faa1","name":"Budget-Period-Past","inspection_start_date":"2023-08-24T00:00:00+02:00","end_date":"2023-11-23T00:00:00+01:00","created_at":"2023-11-24T20:25:51.605131","updated_at":"2023-11-24T20:25:51.605131","is_past":true}] #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 32]
2023-11-30T11:53:49.337Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:json #object[org.postgresql.util.PGobject 0x2e07ab1b {"id":"8b8fe440-cae5-4bf9-8048-d0ec2399faa1","name":"Budget-Period-Past","inspection_start_date":"2023-08-24T00:00:00+02:00","end_date":"2023-11-23T00:00:00+01:00","created_at":"2023-11-24T20:25:51.605131","updated_at":"2023-11-24T20:25:51.605131","is_past":true}]]
2023-11-30T11:53:49.337Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  {:id 8b8fe440-cae5-4bf9-8048-d0ec2399faa1, :name Budget-Period-Past, :inspection_start_date 2023-08-24T00:00:00+02:00, :end_date 2023-11-23T00:00:00+01:00, :created_at 2023-11-24T20:25:51.605131, :updated_at 2023-11-24T20:25:51.605131, :is_past true}
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x19fba57a {"id": "7d5ba731-edd9-41ba-8773-7337d24c2327", "name": "Category C1", "cost_center": null, "main_category": {"id": "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", "name": "Main Category MC1"}, "main_category_id": "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", "procurement_account": null, "general_ledger_account": null}] #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 33]
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:jsonb #object[org.postgresql.util.PGobject 0x19fba57a {"id": "7d5ba731-edd9-41ba-8773-7337d24c2327", "name": "Category C1", "cost_center": null, "main_category": {"id": "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", "name": "Main Category MC1"}, "main_category_id": "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", "procurement_account": null, "general_ledger_account": null}]]
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  {:id 7d5ba731-edd9-41ba-8773-7337d24c2327, :name Category C1, :cost_center nil, :main_category {:id d2907cbd-98d0-48b7-ab9a-f06803e5cabb, :name Main Category MC1}, :main_category_id d2907cbd-98d0-48b7-ab9a-f06803e5cabb, :procurement_account nil, :general_ledger_account nil}
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x4290ea8f {"id": "fb664326-a8ef-4556-af02-07d3127cd9ec", "name": "Beauty & Kids", "parent_id": "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9", "shortname": null, "department": {"id": "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9", "name": "Home, Jewelry & Computers", "parent_id": null, "shortname": null}}] #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 35]
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:jsonb #object[org.postgresql.util.PGobject 0x4290ea8f {"id": "fb664326-a8ef-4556-af02-07d3127cd9ec", "name": "Beauty & Kids", "parent_id": "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9", "shortname": null, "department": {"id": "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9", "name": "Home, Jewelry & Computers", "parent_id": null, "shortname": null}}]]
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  {:id fb664326-a8ef-4556-af02-07d3127cd9ec, :name Beauty & Kids, :parent_id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9, :shortname nil, :department {:id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9, :name Home, Jewelry & Computers, :parent_id nil, :shortname nil}}
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x77ff2d0f {"id": "64bfb152-ea6c-42da-98c6-325afeb462bc", "name": "reception room", "general": false, "building": {"id": "3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c", "code": null, "name": "9594 Beer Extension"}, "building_id": "3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c", "description": null}] #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 37]
2023-11-30T11:53:49.339Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:jsonb #object[org.postgresql.util.PGobject 0x77ff2d0f {"id": "64bfb152-ea6c-42da-98c6-325afeb462bc", "name": "reception room", "general": false, "building": {"id": "3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c", "code": null, "name": "9594 Beer Extension"}, "building_id": "3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c", "description": null}]]
2023-11-30T11:53:49.340Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  {:id 64bfb152-ea6c-42da-98c6-325afeb462bc, :name reception room, :general false, :building {:id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c, :code nil, :name 9594 Beer Extension}, :building_id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c, :description nil}
2023-11-30T11:53:49.340Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#object[org.postgresql.util.PGobject 0x6dbf0253 {"id":"2187a76b-557a-4775-9a1e-778142161819","login":null,"firstname":"Lynsey","lastname":"Kertzmann","phone":null,"org_id":null,"email":"chanda@ortiz.net","badge_id":null,"address":null,"city":null,"zip":null,"country":null,"settings":null,"delegator_user_id":null,"created_at":"2023-11-24T20:25:51.614964+01:00","updated_at":"2023-11-24T20:25:51.614964+01:00","account_enabled":true,"password_sign_in_enabled":true,"url":null,"img256_url":null,"img32_url":null,"img_digest":null,"is_admin":false,"extended_info":null,"searchable":"Lynsey Kertzmann chanda@ortiz.net    Kertzmann Lynsey","secondary_email":null,"language_locale":null,"admin_protected":false,"is_system_admin":false,"pool_protected":false,"system_admin_protected":false,"organization":"local","account_disabled_at":null,"last_sign_in_at":null}] #object[org.postgresql.jdbc.PgResultSetMetaData 0x315f985b org.postgresql.jdbc.PgResultSetMetaData@315f985b] 39]
2023-11-30T11:53:49.340Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:json #object[org.postgresql.util.PGobject 0x6dbf0253 {"id":"2187a76b-557a-4775-9a1e-778142161819","login":null,"firstname":"Lynsey","lastname":"Kertzmann","phone":null,"org_id":null,"email":"chanda@ortiz.net","badge_id":null,"address":null,"city":null,"zip":null,"country":null,"settings":null,"delegator_user_id":null,"created_at":"2023-11-24T20:25:51.614964+01:00","updated_at":"2023-11-24T20:25:51.614964+01:00","account_enabled":true,"password_sign_in_enabled":true,"url":null,"img256_url":null,"img32_url":null,"img_digest":null,"is_admin":false,"extended_info":null,"searchable":"Lynsey Kertzmann chanda@ortiz.net    Kertzmann Lynsey","secondary_email":null,"language_locale":null,"admin_protected":false,"is_system_admin":false,"pool_protected":false,"system_admin_protected":false,"organization":"local","account_disabled_at":null,"last_sign_in_at":null}]]
2023-11-30T11:53:49.340Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  {:system_admin_protected false, :address nil, :email chanda@ortiz.net, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Kertzmann, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Lynsey Kertzmann chanda@ortiz.net    Kertzmann Lynsey, :updated_at 2023-11-24T20:25:51.614964+01:00, :firstname Lynsey, :zip nil, :id 2187a76b-557a-4775-9a1e-778142161819, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-11-24T20:25:51.614964+01:00, :admin_protected false}
>>requestsB2 (2023-11-30T11:53:49.342Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 8b8fe440-cae5-4bf9-8048-d0ec2399faa1 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x17720398 HikariProxyPreparedStatement@393347992 wrapping SELECT procurement_budget_periods.* FROM procurement_budget_periods  WHERE procurement_budget_periods.id = ?] 1]  type:  java.lang.String
2023-11-30T11:53:49.342Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.343Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x21579e42 org.postgresql.jdbc.PgResultSetMetaData@21579e42] 1]
2023-11-30T11:53:49.343Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Budget-Period-Past #object[org.postgresql.jdbc.PgResultSetMetaData 0x21579e42 org.postgresql.jdbc.PgResultSetMetaData@21579e42] 2]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Budget-Period-Past]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Budget-Period-Past
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-08-23T22:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x21579e42 org.postgresql.jdbc.PgResultSetMetaData@21579e42] 3]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-08-23T22:00:00.000000000-00:00"]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-08-23T22:00:00Z"
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-22T23:00:00.000000000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x21579e42 org.postgresql.jdbc.PgResultSetMetaData@21579e42] 4]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamptz #inst "2023-11-22T23:00:00.000000000-00:00"]
2023-11-30T11:53:49.344Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-22T23:00:00Z"
2023-11-30T11:53:49.345Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x21579e42 org.postgresql.jdbc.PgResultSetMetaData@21579e42] 5]
2023-11-30T11:53:49.345Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.345Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
2023-11-30T11:53:49.345Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#inst "2023-11-24T19:25:51.605131000-00:00" #object[org.postgresql.jdbc.PgResultSetMetaData 0x21579e42 org.postgresql.jdbc.PgResultSetMetaData@21579e42] 6]
2023-11-30T11:53:49.345Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:timestamp #inst "2023-11-24T19:25:51.605131000-00:00"]
2023-11-30T11:53:49.345Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #time/instant "2023-11-24T19:25:51.605131Z"
2023-11-30T11:53:49.346Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 7d5ba731-edd9-41ba-8773-7337d24c2327 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x4b776572 HikariProxyPreparedStatement@1266115954 wrapping SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.id = ?] 1]  type:  java.lang.String
2023-11-30T11:53:49.346Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.347Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "7d5ba731-edd9-41ba-8773-7337d24c2327" #object[org.postgresql.jdbc.PgResultSetMetaData 0x764efaf8 org.postgresql.jdbc.PgResultSetMetaData@764efaf8] 1]
2023-11-30T11:53:49.349Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"]
2023-11-30T11:53:49.349Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.350Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Category C1 #object[org.postgresql.jdbc.PgResultSetMetaData 0x764efaf8 org.postgresql.jdbc.PgResultSetMetaData@764efaf8] 2]
2023-11-30T11:53:49.350Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Category C1]
2023-11-30T11:53:49.350Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Category C1
2023-11-30T11:53:49.350Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[org.postgresql.jdbc.PgResultSetMetaData 0x764efaf8 org.postgresql.jdbc.PgResultSetMetaData@764efaf8] 3]
2023-11-30T11:53:49.351Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"]
2023-11-30T11:53:49.351Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.351Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 2187a76b-557a-4775-9a1e-778142161819 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x1fdad519 HikariProxyPreparedStatement@534435097 wrapping SELECT users.id, users.firstname, users.lastname FROM users  WHERE users.id = ?] 1]  type:  java.lang.String
2023-11-30T11:53:49.352Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "2187a76b-557a-4775-9a1e-778142161819"
2023-11-30T11:53:49.352Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "2187a76b-557a-4775-9a1e-778142161819" #object[org.postgresql.jdbc.PgResultSetMetaData 0x593d5338 org.postgresql.jdbc.PgResultSetMetaData@593d5338] 1]
2023-11-30T11:53:49.354Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "2187a76b-557a-4775-9a1e-778142161819"]
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "2187a76b-557a-4775-9a1e-778142161819"
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Lynsey #object[org.postgresql.jdbc.PgResultSetMetaData 0x593d5338 org.postgresql.jdbc.PgResultSetMetaData@593d5338] 2]
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:text Lynsey]
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Lynsey
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Kertzmann #object[org.postgresql.jdbc.PgResultSetMetaData 0x593d5338 org.postgresql.jdbc.PgResultSetMetaData@593d5338] 3]
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Kertzmann]
2023-11-30T11:53:49.355Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Kertzmann
2023-11-30T11:53:49.355Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => [SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.356Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x10afe287 HikariProxyPreparedStatement@279962247 wrapping SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.356Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.357Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => [SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.358Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x52542612 HikariProxyPreparedStatement@1381246482 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.358Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.359Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => [SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"]
2023-11-30T11:53:49.360Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x107c95d6 HikariProxyPreparedStatement@276600278 wrapping SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.360Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.362Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:date 2023-11-23 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x63f961c0 HikariProxyPreparedStatement@1677287872 wrapping SELECT current_date > CAST(? AS date) AS result ] 1]  type:  java.lang.String
2023-11-30T11:53:49.362Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  2023-11-23
2023-11-30T11:53:49.363Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:date 2023-08-24 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x57c3c199 HikariProxyPreparedStatement@1472446873 wrapping SELECT current_date < CAST(? AS date) AS result ] 1]  type:  java.lang.String
2023-11-30T11:53:49.363Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  2023-08-24
2023-11-30T11:53:49.364Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:date 2023-08-24 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2e40f106 HikariProxyPreparedStatement@776007942 wrapping SELECT (current_date >= CAST(? AS date) and current_date < CAST(? AS date)) AS result ] 1]  type:  java.lang.String
2023-11-30T11:53:49.364Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  2023-08-24
2023-11-30T11:53:49.364Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:date 2023-11-23 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2e40f106 HikariProxyPreparedStatement@776007942 wrapping SELECT (current_date >= CAST('2023-08-24' AS date) and current_date < CAST(? AS date)) AS result ] 2]  type:  java.lang.String
2023-11-30T11:53:49.364Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  2023-11-23
2023-11-30T11:53:49.364Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => [SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = ? AND procurement_category_inspectors.category_id = ?))) AS result  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" 7d5ba731-edd9-41ba-8773-7337d24c2327]
2023-11-30T11:53:49.365Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5986d1dd HikariProxyPreparedStatement@1502007773 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = ? AND procurement_category_inspectors.category_id = ?))) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.365Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.365Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 7d5ba731-edd9-41ba-8773-7337d24c2327 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x5986d1dd HikariProxyPreparedStatement@1502007773 wrapping SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = 'e68ca036-dced-4666-b9e9-a6b55119f013'::uuid AND procurement_category_inspectors.category_id = ?))) AS result ] 2]  type:  java.lang.String
2023-11-30T11:53:49.365Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.366Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => [SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE (procurement_category_viewers.user_id = ? AND procurement_category_viewers.category_id = ?))) AS result  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" 7d5ba731-edd9-41ba-8773-7337d24c2327]
2023-11-30T11:53:49.366Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "e68ca036-dced-4666-b9e9-a6b55119f013" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x22f81ff2 HikariProxyPreparedStatement@586686450 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE (procurement_category_viewers.user_id = ? AND procurement_category_viewers.category_id = ?))) AS result ] 1]  type:  java.util.UUID
2023-11-30T11:53:49.366Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "e68ca036-dced-4666-b9e9-a6b55119f013"
2023-11-30T11:53:49.367Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid 7d5ba731-edd9-41ba-8773-7337d24c2327 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x22f81ff2 HikariProxyPreparedStatement@586686450 wrapping SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE (procurement_category_viewers.user_id = 'e68ca036-dced-4666-b9e9-a6b55119f013'::uuid AND procurement_category_viewers.category_id = ?))) AS result ] 2]  type:  java.lang.String
2023-11-30T11:53:49.367Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.368Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid abae04c5-d767-425e-acc2-7ce04df645d1 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x433d3b03 HikariProxyPreparedStatement@1128086275 wrapping SELECT rooms.* FROM rooms  WHERE (rooms.general = TRUE AND rooms.building_id = ?) ORDER BY general DESC, name ASC] 1]  type:  java.lang.String
2023-11-30T11:53:49.368Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "abae04c5-d767-425e-acc2-7ce04df645d1"
2023-11-30T11:53:49.368Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "b8927fd2-014c-48c2-b095-fa1d5620debe" #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a1a30b5 org.postgresql.jdbc.PgResultSetMetaData@2a1a30b5] 1]
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe"]
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe"
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [general room #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a1a30b5 org.postgresql.jdbc.PgResultSetMetaData@2a1a30b5] 2]
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar general room]
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  general room
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "abae04c5-d767-425e-acc2-7ce04df645d1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x2a1a30b5 org.postgresql.jdbc.PgResultSetMetaData@2a1a30b5] 4]
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "abae04c5-d767-425e-acc2-7ce04df645d1"]
2023-11-30T11:53:49.371Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "abae04c5-d767-425e-acc2-7ce04df645d1"
2023-11-30T11:53:49.372Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid abae04c5-d767-425e-acc2-7ce04df645d1 #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x64480a8d HikariProxyPreparedStatement@1682442893 wrapping SELECT buildings.* FROM buildings  WHERE buildings.id = ?] 1]  type:  java.lang.String
2023-11-30T11:53:49.372Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "abae04c5-d767-425e-acc2-7ce04df645d1"
2023-11-30T11:53:49.373Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "abae04c5-d767-425e-acc2-7ce04df645d1" #object[org.postgresql.jdbc.PgResultSetMetaData 0x1bac441c org.postgresql.jdbc.PgResultSetMetaData@1bac441c] 1]
2023-11-30T11:53:49.376Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "abae04c5-d767-425e-acc2-7ce04df645d1"]
2023-11-30T11:53:49.376Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "abae04c5-d767-425e-acc2-7ce04df645d1"
2023-11-30T11:53:49.376Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [general building #object[org.postgresql.jdbc.PgResultSetMetaData 0x1bac441c org.postgresql.jdbc.PgResultSetMetaData@1bac441c] 2]
2023-11-30T11:53:49.376Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar general building]
2023-11-30T11:53:49.376Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  general building
{:category {:read true, :write false, :default {:id #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327", :name Category C1, :main_category_id #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id 7d5ba731-edd9-41ba-8773-7337d24c2327, :name Category C1, :cost_center nil, :main_category {:id d2907cbd-98d0-48b7-ab9a-f06803e5cabb, :name Main Category MC1}, :main_category_id d2907cbd-98d0-48b7-ab9a-f06803e5cabb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :motivation {:read true, :write false, :required true, :value Corporis commodi provident nam., :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :budget_period {:read true, :write false, :default {:id #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1", :name Budget-Period-Past, :inspection_start_date #time/instant "2023-08-23T22:00:00Z", :end_date #time/instant "2023-11-22T23:00:00Z", :created_at #time/instant "2023-11-24T19:25:51.605131Z", :updated_at #time/instant "2023-11-24T19:25:51.605131Z"}, :required true, :value {:id 8b8fe440-cae5-4bf9-8048-d0ec2399faa1, :name Budget-Period-Past, :inspection_start_date 2023-08-24T00:00:00+02:00, :end_date 2023-11-23T00:00:00+01:00, :created_at 2023-11-24T20:25:51.605131, :updated_at 2023-11-24T20:25:51.605131, :is_past true}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :article_name {:read true, :write false, :default nil, :required true, :value Mediocre Aluminum Shoes, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :state :NEW, :organization {:value {:id fb664326-a8ef-4556-af02-07d3127cd9ec, :name Beauty & Kids, :parent_id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9, :shortname nil, :department {:id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9, :name Home, Jewelry & Computers, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :updated_at {:value #time/instant "2023-11-24T19:25:51.635215Z", :read false, :write false, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 64bfb152-ea6c-42da-98c6-325afeb462bc, :name reception room, :general false, :building {:id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c, :code nil, :name 9594 Beer Extension}, :building_id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c, :description nil}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :approved_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :user {:read true, :write false, :required true, :default {:id #uuid "2187a76b-557a-4775-9a1e-778142161819", :firstname Lynsey, :lastname Kertzmann}, :value {:system_admin_protected false, :address nil, :email chanda@ortiz.net, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Kertzmann, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Lynsey Kertzmann chanda@ortiz.net    Kertzmann Lynsey, :updated_at 2023-11-24T20:25:51.614964+01:00, :firstname Lynsey, :zip nil, :id 2187a76b-557a-4775-9a1e-778142161819, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-11-24T20:25:51.614964+01:00, :admin_protected false}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :created_at {:value #time/instant "2023-11-24T19:25:51.635215Z", :read false, :write false, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :short_id Budget-Period-Past.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}})
>>dashboard-cache-keyB2 {:id 1608672852}

>o> final-result (2023-11-30T11:53:49.379Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x64842bd2 HikariProxyPreparedStatement@1686383570 wrapping SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC] 1]  type:  java.util.UUID
2023-11-30T11:53:49.379Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.380Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "7d5ba731-edd9-41ba-8773-7337d24c2327" #object[org.postgresql.jdbc.PgResultSetMetaData 0x59eb1334 org.postgresql.jdbc.PgResultSetMetaData@59eb1334] 1]
2023-11-30T11:53:49.380Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"]
2023-11-30T11:53:49.380Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"
2023-11-30T11:53:49.380Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [Category C1 #object[org.postgresql.jdbc.PgResultSetMetaData 0x59eb1334 org.postgresql.jdbc.PgResultSetMetaData@59eb1334] 2]
2023-11-30T11:53:49.380Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:varchar Category C1]
2023-11-30T11:53:49.380Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  Category C1
2023-11-30T11:53:49.381Z NX-41294 DEBUG [pg-types.read-column:326] - dispatch-to-convert-column [#uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[org.postgresql.jdbc.PgResultSetMetaData 0x59eb1334 org.postgresql.jdbc.PgResultSetMetaData@59eb1334] 3]
2023-11-30T11:53:49.381Z NX-41294 DEBUG [pg-types.read-column:326] - calling convert-column with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"]
2023-11-30T11:53:49.381Z NX-41294 DEBUG [pg-types.read-column:326] - converted-column:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
2023-11-30T11:53:49.382Z NX-41294 DEBUG [pg-types.sql-parameter:326] - calling convert-parameter with:  [:uuid #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb" #object[com.zaxxer.hikari.pool.HikariProxyPreparedStatement 0x2ae55366 HikariProxyPreparedStatement@719672166 wrapping SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?] 1]  type:  java.util.UUID
2023-11-30T11:53:49.382Z NX-41294 DEBUG [pg-types.sql-parameter:326] - converted-parameter:  #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"
{:main_categories ({:id #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", :name Main Category MC1, :categories ({:main_category_id #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", :name Category C1, :requests ({:category {:read true, :write false, :default {:id #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327", :name Category C1, :main_category_id #uuid "d2907cbd-98d0-48b7-ab9a-f06803e5cabb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id 7d5ba731-edd9-41ba-8773-7337d24c2327, :name Category C1, :cost_center nil, :main_category {:id d2907cbd-98d0-48b7-ab9a-f06803e5cabb, :name Main Category MC1}, :main_category_id d2907cbd-98d0-48b7-ab9a-f06803e5cabb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :motivation {:read true, :write false, :required true, :value Corporis commodi provident nam., :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :budget_period {:read true, :write false, :default {:id #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1", :name Budget-Period-Past, :inspection_start_date #time/instant "2023-08-23T22:00:00Z", :end_date #time/instant "2023-11-22T23:00:00Z", :created_at #time/instant "2023-11-24T19:25:51.605131Z", :updated_at #time/instant "2023-11-24T19:25:51.605131Z"}, :required true, :value {:id 8b8fe440-cae5-4bf9-8048-d0ec2399faa1, :name Budget-Period-Past, :inspection_start_date 2023-08-24T00:00:00+02:00, :end_date 2023-11-23T00:00:00+01:00, :created_at 2023-11-24T20:25:51.605131, :updated_at 2023-11-24T20:25:51.605131, :is_past true}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :article_name {:read true, :write false, :default nil, :required true, :value Mediocre Aluminum Shoes, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :state :NEW, :organization {:value {:id fb664326-a8ef-4556-af02-07d3127cd9ec, :name Beauty & Kids, :parent_id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9, :shortname nil, :department {:id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9, :name Home, Jewelry & Computers, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :updated_at {:value #time/instant "2023-11-24T19:25:51.635215Z", :read false, :write false, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 64bfb152-ea6c-42da-98c6-325afeb462bc, :name reception room, :general false, :building {:id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c, :code nil, :name 9594 Beer Extension}, :building_id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c, :description nil}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :approved_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :user {:read true, :write false, :required true, :default {:id #uuid "2187a76b-557a-4775-9a1e-778142161819", :firstname Lynsey, :lastname Kertzmann}, :value {:system_admin_protected false, :address nil, :email chanda@ortiz.net, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Kertzmann, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Lynsey Kertzmann chanda@ortiz.net    Kertzmann Lynsey, :updated_at 2023-11-24T20:25:51.614964+01:00, :firstname Lynsey, :zip nil, :id 2187a76b-557a-4775-9a1e-778142161819, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-11-24T20:25:51.614964+01:00, :admin_protected false}, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :created_at {:value #time/instant "2023-11-24T19:25:51.635215Z", :read false, :write false, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}, :short_id Budget-Period-Past.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "40284a6b-cf5e-41c1-af6c-dc423894ee11"}}), :general_ledger_account nil, :id #uuid "7d5ba731-edd9-41ba-8773-7337d24c2327", :total_price_cents 0, :procurement_account nil, :cacheKey 1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb_7d5ba731-edd9-41ba-8773-7337d24c2327, :cost_center nil}), :total_price_cents 0, :cacheKey 1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb}), :name Budget-Period-Past, :updated_at #time/instant "2023-11-24T19:25:51.605131Z", :inspection_start_date #time/instant "2023-08-23T22:00:00Z", :end_date #time/instant "2023-11-22T23:00:00Z", :id #uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1", :total_price_cents 0, :cacheKey 1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1, :created_at #time/instant "2023-11-24T19:25:51.605131Z"}) 


>o> final-result (json) [{"main_categories":[{"id":"d2907cbd-98d0-48b7-ab9a-f06803e5cabb","name":"Main Category MC1","categories":[{"main_category_id":"d2907cbd-98d0-48b7-ab9a-f06803e5cabb","name":"Category C1","requests":[{"category":{"read":true,"write":false,"default":{"id":"7d5ba731-edd9-41ba-8773-7337d24c2327","name":"Category C1","main_category_id":"d2907cbd-98d0-48b7-ab9a-f06803e5cabb","general_ledger_account":null,"cost_center":null,"procurement_account":null},"required":true,"value":{"id":"7d5ba731-edd9-41ba-8773-7337d24c2327","name":"Category C1","cost_center":null,"main_category":{"id":"d2907cbd-98d0-48b7-ab9a-f06803e5cabb","name":"Main Category MC1"},"main_category_id":"d2907cbd-98d0-48b7-ab9a-f06803e5cabb","procurement_account":null,"general_ledger_account":null},"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"supplier":{"read":true,"write":false,"default":null,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"motivation":{"read":true,"write":false,"required":true,"value":"Corporis commodi provident nam.","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"accounting_type":{"read":true,"write":false,"default":"aquisition","required":true,"value":"aquisition","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"actionPermissions":{"edit":true,"delete":false,"moveBudgetPeriod":false,"moveCategory":false},"article_number":{"read":true,"write":false,"default":null,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"inspector_priority":{"read":true,"write":false,"default":"MEDIUM","required":true,"value":"MEDIUM","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"price_cents":{"read":true,"write":false,"default":0,"required":true,"value":0,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"budget_period":{"read":true,"write":false,"default":{"id":"8b8fe440-cae5-4bf9-8048-d0ec2399faa1","name":"Budget-Period-Past","inspection_start_date":"2023-08-23T22:00:00Z","end_date":"2023-11-22T23:00:00Z","created_at":"2023-11-24T19:25:51.605131Z","updated_at":"2023-11-24T19:25:51.605131Z"},"required":true,"value":{"id":"8b8fe440-cae5-4bf9-8048-d0ec2399faa1","name":"Budget-Period-Past","inspection_start_date":"2023-08-24T00:00:00+02:00","end_date":"2023-11-23T00:00:00+01:00","created_at":"2023-11-24T20:25:51.605131","updated_at":"2023-11-24T20:25:51.605131","is_past":true},"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"article_name":{"read":true,"write":false,"default":null,"required":true,"value":"Mediocre Aluminum Shoes","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"replacement":{"read":true,"write":false,"default":null,"required":true,"value":true,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"attachments":{"read":true,"write":false,"required":false,"value":"unqueried","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"DELETE":false,"template":{"read":true,"write":false,"default":null,"required":true,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"state":"NEW","organization":{"value":{"id":"fb664326-a8ef-4556-af02-07d3127cd9ec","name":"Beauty & Kids","parent_id":"d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9","shortname":null,"department":{"id":"d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9","name":"Home, Jewelry & Computers","parent_id":null,"shortname":null}},"read":false,"write":false,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"supplier_name":{"read":true,"write":false,"default":null,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"order_status":{"read":true,"write":true,"default":"NOT_PROCURED","required":true,"value":"NOT_PROCESSED","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"requested_quantity":{"read":true,"write":false,"required":true,"value":1,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"general_ledger_account":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"updated_at":{"value":"2023-11-24T19:25:51.635215Z","read":false,"write":false,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"priority":{"read":true,"write":false,"default":"NORMAL","required":true,"value":"NORMAL","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"id":"40284a6b-cf5e-41c1-af6c-dc423894ee11","total_price_cents":0,"price_currency":{"read":true,"write":false,"default":"CHF","required":true,"value":"CHF","request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"procurement_account":{"read":true,"write":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"room":{"read":true,"write":false,"default":{"id":"b8927fd2-014c-48c2-b095-fa1d5620debe","name":"general room","description":null,"building_id":"abae04c5-d767-425e-acc2-7ce04df645d1","general":true,"building":{"id":"abae04c5-d767-425e-acc2-7ce04df645d1","name":"general building","code":null}},"required":true,"value":{"id":"64bfb152-ea6c-42da-98c6-325afeb462bc","name":"reception room","general":false,"building":{"id":"3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c","code":null,"name":"9594 Beer Extension"},"building_id":"3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c","description":null},"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"inspection_comment":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"approved_quantity":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"order_quantity":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"cost_center":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"user":{"read":true,"write":false,"required":true,"default":{"id":"2187a76b-557a-4775-9a1e-778142161819","firstname":"Lynsey","lastname":"Kertzmann"},"value":{"system_admin_protected":false,"address":null,"email":"chanda@ortiz.net","pool_protected":false,"last_sign_in_at":null,"img32_url":null,"account_enabled":true,"lastname":"Kertzmann","phone":null,"img_digest":null,"org_id":null,"extended_info":null,"secondary_email":null,"city":null,"settings":null,"is_admin":false,"organization":"local","login":null,"searchable":"Lynsey Kertzmann chanda@ortiz.net    Kertzmann Lynsey","updated_at":"2023-11-24T20:25:51.614964+01:00","firstname":"Lynsey","zip":null,"id":"2187a76b-557a-4775-9a1e-778142161819","url":null,"password_sign_in_enabled":true,"account_disabled_at":null,"is_system_admin":false,"badge_id":null,"language_locale":null,"img256_url":null,"country":null,"delegator_user_id":null,"created_at":"2023-11-24T20:25:51.614964+01:00","admin_protected":false},"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"receiver":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"internal_order_number":{"read":true,"write":false,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"created_at":{"value":"2023-11-24T19:25:51.635215Z","read":false,"write":false,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"order_comment":{"read":true,"write":true,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"},"short_id":"Budget-Period-Past.001","model":{"read":true,"write":false,"default":null,"required":false,"value":null,"request-id":"40284a6b-cf5e-41c1-af6c-dc423894ee11"}}],"general_ledger_account":null,"id":"7d5ba731-edd9-41ba-8773-7337d24c2327","total_price_cents":0,"procurement_account":null,"cacheKey":"1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb_7d5ba731-edd9-41ba-8773-7337d24c2327","cost_center":null}],"total_price_cents":0,"cacheKey":"1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb"}],"name":"Budget-Period-Past","updated_at":"2023-11-24T19:25:51.605131Z","inspection_start_date":"2023-08-23T22:00:00Z","end_date":"2023-11-22T23:00:00Z","id":"8b8fe440-cae5-4bf9-8048-d0ec2399faa1","total_price_cents":0,"cacheKey":"1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1","created_at":"2023-11-24T19:25:51.605131Z"}] 


>>>pure-handler {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey 1608672852] [:total_count 1] [:budget_periods [#ordered/map ([:id 8b8fe440-cae5-4bf9-8048-d0ec2399faa1] [:cacheKey 1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1] [:name Budget-Period-Past] [:inspection_start_date 2023-08-23T22:00:00Z] [:end_date 2023-11-22T23:00:00Z] [:total_price_cents 0] [:main_categories [#ordered/map ([:id d2907cbd-98d0-48b7-ab9a-f06803e5cabb] [:cacheKey 1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb] [:name Main Category MC1] [:image_url nil] [:total_price_cents 0] [:categories [#ordered/map ([:id 7d5ba731-edd9-41ba-8773-7337d24c2327] [:cacheKey 1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb_7d5ba731-edd9-41ba-8773-7337d24c2327] [:name Category C1] [:total_price_cents 0] [:requests [#ordered/map ([:id 40284a6b-cf5e-41c1-af6c-dc423894ee11] [:short_id Budget-Period-Past.001] [:user #ordered/map ([:value #ordered/map ([:id 2187a76b-557a-4775-9a1e-778142161819] [:firstname Lynsey] [:lastname Kertzmann] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id 7d5ba731-edd9-41ba-8773-7337d24c2327] [:name Category C1] [:main_category #ordered/map ([:id d2907cbd-98d0-48b7-ab9a-f06803e5cabb] [:name Main Category MC1] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name Budget-Period-Past] [:id 8b8fe440-cae5-4bf9-8048-d0ec2399faa1] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value Mediocre Aluminum Shoes] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id fb664326-a8ef-4556-af02-07d3127cd9ec] [:name Beauty & Kids] [:shortname nil] [:department #ordered/map ([:id d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9] [:name Home, Jewelry & Computers] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value CHF] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id 64bfb152-ea6c-42da-98c6-325afeb462bc] [:name reception room] [:building #ordered/map ([:id 3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c] [:name 9594 Beer Extension] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value Corporis commodi provident nam.] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value aquisition] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents 0] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
2023-11-30T11:53:49.389Z NX-41294 DEBUG [leihs.procurement.graphql:72] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1608672852"] [:total_count 1] [:budget_periods [#ordered/map ([:id "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:cacheKey "1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:name "Budget-Period-Past"] [:inspection_start_date "2023-08-23T22:00:00Z"] [:end_date "2023-11-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:cacheKey "1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:name "Main Category MC1"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "7d5ba731-edd9-41ba-8773-7337d24c2327"] [:cacheKey "1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb_7d5ba731-edd9-41ba-8773-7337d24c2327"] [:name "Category C1"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "40284a6b-cf5e-41c1-af6c-dc423894ee11"] [:short_id "Budget-Period-Past.001"] [:user #ordered/map ([:value #ordered/map ([:id "2187a76b-557a-4775-9a1e-778142161819"] [:firstname "Lynsey"] [:lastname "Kertzmann"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "7d5ba731-edd9-41ba-8773-7337d24c2327"] [:name "Category C1"] [:main_category #ordered/map ([:id "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:name "Main Category MC1"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Budget-Period-Past"] [:id "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Mediocre Aluminum Shoes"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "fb664326-a8ef-4556-af02-07d3127cd9ec"] [:name "Beauty & Kids"] [:shortname nil] [:department #ordered/map ([:id "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"] [:name "Home, Jewelry & Computers"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "64bfb152-ea6c-42da-98c6-325afeb462bc"] [:name "reception room"] [:building #ordered/map ([:id "3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c"] [:name "9594 Beer Extension"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Corporis commodi provident nam."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
2023-11-30T11:53:49.390Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1608672852"] [:total_count 1] [:budget_periods [#ordered/map ([:id "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:cacheKey "1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:name "Budget-Period-Past"] [:inspection_start_date "2023-08-23T22:00:00Z"] [:end_date "2023-11-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:cacheKey "1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:name "Main Category MC1"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "7d5ba731-edd9-41ba-8773-7337d24c2327"] [:cacheKey "1608672852_8b8fe440-cae5-4bf9-8048-d0ec2399faa1_d2907cbd-98d0-48b7-ab9a-f06803e5cabb_7d5ba731-edd9-41ba-8773-7337d24c2327"] [:name "Category C1"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "40284a6b-cf5e-41c1-af6c-dc423894ee11"] [:short_id "Budget-Period-Past.001"] [:user #ordered/map ([:value #ordered/map ([:id "2187a76b-557a-4775-9a1e-778142161819"] [:firstname "Lynsey"] [:lastname "Kertzmann"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "7d5ba731-edd9-41ba-8773-7337d24c2327"] [:name "Category C1"] [:main_category #ordered/map ([:id "d2907cbd-98d0-48b7-ab9a-f06803e5cabb"] [:name "Main Category MC1"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Budget-Period-Past"] [:id "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Mediocre Aluminum Shoes"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "fb664326-a8ef-4556-af02-07d3127cd9ec"] [:name "Beauty & Kids"] [:shortname nil] [:department #ordered/map ([:id "d6f9842f-4a7f-45ed-8ac5-c708cd6f8ca9"] [:name "Home, Jewelry & Computers"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "64bfb152-ea6c-42da-98c6-325afeb462bc"] [:name "reception room"] [:building #ordered/map ([:id "3eaa2152-ebd3-4b7c-b370-f107fa7b4d7c"] [:name "9594 Beer Extension"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Corporis commodi provident nam."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
2023-11-30T11:54:06.106Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - Before cleanup stats (total=4, active=0, idle=4, waiting=0)
2023-11-30T11:54:06.109Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - After cleanup  stats (total=4, active=0, idle=4, waiting=0)
2023-11-30T11:54:06.110Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - db-pool - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:54:06.133Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - Before cleanup stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:54:06.134Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - After cleanup  stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:54:06.134Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:54:36.116Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - Before cleanup stats (total=4, active=0, idle=4, waiting=0)
2023-11-30T11:54:36.124Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - After cleanup  stats (total=4, active=0, idle=4, waiting=0)
2023-11-30T11:54:36.124Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - db-pool - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:54:36.140Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - Before cleanup stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:54:36.141Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - After cleanup  stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:54:36.141Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:55:06.126Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - Before cleanup stats (total=4, active=0, idle=4, waiting=0)
2023-11-30T11:55:06.129Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - After cleanup  stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:06.129Z NX-41294 DEBUG [com.zaxxer.hikari.pool.PoolBase:132] - db-pool - Closing connection org.postgresql.jdbc.PgConnection@40360cd3: (connection has passed idleTimeout)
2023-11-30T11:55:06.129Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - db-pool - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:55:06.130Z NX-41294 DEBUG [com.zaxxer.hikari.pool.PoolBase:132] - db-pool - Closing connection org.postgresql.jdbc.PgConnection@3ef7fc53: (connection has passed idleTimeout)
2023-11-30T11:55:06.142Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - Before cleanup stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:06.142Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - After cleanup  stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:06.142Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:55:36.134Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - Before cleanup stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:36.142Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - db-pool - After cleanup  stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:36.143Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - db-pool - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-11-30T11:55:36.147Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - Before cleanup stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:36.148Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:414] - HikariPool-1 - After cleanup  stats (total=2, active=0, idle=2, waiting=0)
2023-11-30T11:55:36.148Z NX-41294 DEBUG [com.zaxxer.hikari.pool.HikariPool:521] - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).

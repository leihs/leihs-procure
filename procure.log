# java_leihs-procure-server env check via asdf v0.13.1
# java_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_java_leihs-procure-server to force update
# clojure_leihs-procure-server env check via asdf v0.13.1
# clojure_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_clojure_leihs-procure-server to force update
Warning: environ value /Users/mradl/.asdf/installs/java/zulu-11.60.19 for key :java-home has been overwritten with /Users/mradl/.asdf/installs/java/zulu-11.60.19/zulu-11.jdk/Contents/Home
>o> conc concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))
>o> templates::templates-base-query ERROR?
2023-12-08T09:56:39.484Z NX-41294 WARN [leihs.core.release:13] - Failed to read releases.yml, returning bogus value 
2023-12-08T09:56:40.120Z NX-41294 INFO [leihs.core.logging:37] - initializing logging  {:min-level [[#{"leihs.procurement" "leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :log-level nil}
2023-12-08T09:56:40.127Z NX-41294 INFO [leihs.core.logging:39] - initialized logging  {:min-level [[#{"leihs.procurement" "leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :ns-filter #{"*"}, :middleware [], :timestamp-opts {:pattern :iso8601, :locale :jvm-default, :timezone :utc}, :output-fn #object[taoensso.timbre$default_output_fn 0x78107aff "taoensso.timbre$default_output_fn@78107aff"], :appenders {:println {:enabled? true, :fn #object[taoensso.timbre.appenders.core$println_appender$fn__3459 0x3e2e7ce4 "taoensso.timbre.appenders.core$println_appender$fn__3459@3e2e7ce4"]}}, :_init-config {:loaded-from-source :default, :compile-time-config {:min-level nil, :ns-pattern "*"}}, :log-level nil}
2023-12-08T09:56:40.128Z NX-41294 INFO [leihs.procurement.main:50] - main ("--dev-mode" "true" "--repl" "true" "run")
2023-12-08T09:56:40.140Z NX-41294 INFO [leihs.core.repl:62] - init {:dev-mode true, :repl true, :repl-bind "localhost", :repl-port 15155, :repl-port-file ".nrepl-port"}
2023-12-08T09:56:40.141Z NX-41294 INFO [leihs.core.repl:70] - starting nREPL server  15155 localhost
2023-12-08T09:56:40.173Z NX-41294 INFO [leihs.core.repl:75] - started nREPL server 
2023-12-08T09:56:40.176Z NX-41294 INFO [leihs.procurement.run:326] - Invoking run with options:  {:db-host localhost, :db-max-pool-size 16, :db-min-pool-size 2, :db-name leihs_test, :db-password leihs, :db-port 5415, :db-user leihs, :dev-mode true, :http-host localhost, :http-max-threads 8, :http-min-threads 1, :http-port 3230, :http-queue-capacity 640, :http-thread-keep-alive-seconds 10, :http-worker-prefix leihs-service-http-worker-, :pid-file nil, :repl true, :repl-bind localhost, :repl-port 15155, :repl-port-file .nrepl-port}
2023-12-08T09:56:40.177Z NX-41294 INFO [leihs.core.shutdown:20] - PID 81032
2023-12-08T09:56:40.203Z NX-41294 INFO [leihs.core.shutdown:29] - Registering SIGTERM handler for shutdown.
2023-12-08T09:56:40.279Z NX-41294 INFO [leihs.core.graphql:17] - Initialized graphQL schema.
2023-12-08T09:56:40.280Z NX-41294 INFO [leihs.core.db:220] - Initializing db  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-08T09:56:40.286Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:80] - db-pool - Starting...
2023-12-08T09:56:40.357Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - db-pool - Added connection org.postgresql.jdbc.PgConnection@226c165e
2023-12-08T09:56:40.362Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:82] - db-pool - Start completed.
2023-12-08T09:56:40.363Z NX-41294 INFO [leihs.core.db:222] - Initialized db  {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 "HikariDataSource (db-pool)"]}
2023-12-08T09:56:40.363Z NX-41294 INFO [leihs.core.db:223] - Initializing ds-next  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-08T09:56:40.376Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2023-12-08T09:56:40.384Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a4af54a
2023-12-08T09:56:40.384Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2023-12-08T09:56:40.389Z NX-41294 INFO [leihs.core.db:225] - Initialized ds-next  #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d "next.jdbc.result_set$as_unqualified_lower_maps@20feff3d"]}}
2023-12-08T09:56:40.395Z NX-41294 INFO [leihs.core.http-server:101] - starting http-server  {:port 3230, :ip "localhost", :pool {:queue #object[java.util.concurrent.ArrayBlockingQueue 0x5702b5ed "[]"], :pool #object[java.util.concurrent.ThreadPoolExecutor 0x3b42c35 "java.util.concurrent.ThreadPoolExecutor@3b42c35[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]"]}}
2023-12-08T09:56:40.406Z NX-41294 INFO [leihs.core.http-server:104] - started http-server 
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 161380172608208, :params {:return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {:return-to /}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7405c77e /127.0.0.1:3230<->/127.0.0.1:61503], :server-port 3230, :params-raw {:return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2F, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.419Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.423Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.453Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.456Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}}, :remote-addr 127.0.0.1, :start-time 161380413233416, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23, referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x365ba587 /127.0.0.1:3230<->/127.0.0.1:61503], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.650Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.651Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.652Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.653Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}}, :remote-addr 127.0.0.1, :start-time 161380540503916, :params {:user amelia@rosenbaum.name, :password nil, :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x55bde80b HikariProxyConnection@1438509067 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23, content-length 100, sec-fetch-user ?1, referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x17637fd7 /127.0.0.1:3230<->/127.0.0.1:61503], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password , :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x23b7953b HikariProxyConnection@599233851 wrapping org.postgresql.jdbc.PgConnection@226c165e], :level 1, :rollback #object[clojure.lang.Atom 0x3de138ec {:status :ready, :val false}]}, :content-length 100, :form-params {:user amelia@rosenbaum.name, :password nil, :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password , :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x4b2d05ed BytesInputStream[len=100]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x55bde80b HikariProxyConnection@1438509067 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.790Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.791Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.792Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}}, :remote-addr 127.0.0.1, :start-time 161380649672541, :params {:user amelia@rosenbaum.name, :password password, :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x2affd570 HikariProxyConnection@721409392 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23, content-length 108, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x27346b7c /127.0.0.1:3230<->/127.0.0.1:61503], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x2548224c HikariProxyConnection@625484364 wrapping org.postgresql.jdbc.PgConnection@226c165e], :level 1, :rollback #object[clojure.lang.Atom 0x36614bd6 {:status :ready, :val false}]}, :content-length 108, :form-params {:user amelia@rosenbaum.name, :password password, :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x62e14c3f BytesInputStream[len=108]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x2affd570 HikariProxyConnection@721409392 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.888Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.890Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:07.891Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:07.891Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161380727222541, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x54f2c973 /127.0.0.1:3230<->/127.0.0.1:61503], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /, :server-name localhost, :handler-key :home, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :home
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.981Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.983Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.984Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.984Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.985Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.986Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.990Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:07.991Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161380825754583, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, referer http://localhost:3230/, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x763f5583 /127.0.0.1:3230<->/127.0.0.1:61508], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.070Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.071Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.072Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.073Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.074Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.074Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.075Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.076Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381133126375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, referer http://localhost:3230/procure/, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x56344ffa 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.377Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.378Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.379Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.379Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.380Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.381Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.381Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.382Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :procurement
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381139034916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x726accaf /127.0.0.1:3230<->/127.0.0.1:61509], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure, :server-name localhost, :handler-key :procurement, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :procurement
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.424Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.425Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.425Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.426Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.427Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.428Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.428Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.429Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381561358875, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, referer http://localhost:3230/procure, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3adb4ae2 /127.0.0.1:3230<->/127.0.0.1:61509], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.803Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.804Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.805Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.807Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.808Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.808Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381571920125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, content-length 502, referer http://localhost:3230/procure, connection keep-alive, x-csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0xcbe5e33 /127.0.0.1:3230<->/127.0.0.1:61510], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.849Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.849Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.850Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.851Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.853Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.853Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.854Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.854Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-08T09:57:08.858Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
2023-12-08T09:57:08.868Z NX-41294 DEBUG [leihs.procurement.resources.user:75] - id => #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
>>>2 {:id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
2023-12-08T09:57:08.871Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>>>3 nil
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.894Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:08.895Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
2023-12-08T09:57:08.911Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"5f7c2d7f-3913-44f9-9a97-0c3890d34b23\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"2166366e-5dd6-449c-805d-dcacab40f274\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "2166366e-5dd6-449c-805d-dcacab40f274"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "da7b4984-245f-441e-95c1-44f7b1301eb2"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381761996083, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, content-length 502, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x75729013 /127.0.0.1:3230<->/127.0.0.1:61515], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.013Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381761640125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, content-length 534, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6b3efd71 /127.0.0.1:3230<->/127.0.0.1:61509], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.014Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.015Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.015Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
2023-12-08T09:57:09.016Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.016Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.017Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.016Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.018Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.018Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.019Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.019Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.019Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.020Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-08T09:57:09.021Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.022Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
pure-handler >> 2

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-08T09:57:09.024Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
2023-12-08T09:57:09.026Z NX-41294 DEBUG [leihs.procurement.resources.user:75] - id => #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
pure-handler >> 2
>>>2 {:id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
2023-12-08T09:57:09.027Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
2023-12-08T09:57:09.027Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>>>3 nil
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381761145875, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, content-length 3575, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1888284d 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 3575, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.031Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.032Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.037Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.039Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.040Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.041Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.043Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.044Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at >o> admin? {:exists false}
#time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, >o> viewer?:external_sign_out_url  nil, :language_locale nil, :inventory_pool_roles_count 0, {:scope_admin_read false}:result
 false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 >o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) 0x20470798 #uuid "2166366e-5dd6-449c-805d-dcacab40f274"leihs.core.locale$wrap$fn__44425@20470798]]


>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at >o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #time/instant "2023-12-08T09:57:07.922942Z", :id#uuid "2166366e-5dd6-449c-805d-dcacab40f274" ]
#uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161381794693208, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable 2023-12-08T09:57:09.044Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
#object[com.zaxxer.hikari.HikariDataSource 2023-12-08T09:57:09.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, content-length 615, referer http://localhost:3230/procure/templates/edit, connection keep-alive, x-csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x56adcff9 /127.0.0.1:3230<->/127.0.0.1:61516>o> requester??] , :server-port 3230, {:params-raw :exists false}
{}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
2023-12-08T09:57:09.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-08T09:57:09.047Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
2023-12-08T09:57:09.047Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"5f7c2d7f-3913-44f9-9a97-0c3890d34b23\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"2166366e-5dd6-449c-805d-dcacab40f274\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "2166366e-5dd6-449c-805d-dcacab40f274"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "da7b4984-245f-441e-95c1-44f7b1301eb2"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.048Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.048Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.049Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.049Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.050Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
2023-12-08T09:57:09.050Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods []] [:main_categories [#ordered/map ([:id "fd180aa9-b0d1-432a-a549-2a5297e6a35d"] [:name "Geisha"] [:categories [#ordered/map ([:id "da7b4984-245f-441e-95c1-44f7b1301eb2"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations []])}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.051Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-08T09:57:09.055Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
pure-handler >> 2
2023-12-08T09:57:09.059Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>oo> templates::get-templates2 _> HERE value contains :id??) #uuid "da7b4984-245f-441e-95c1-44f7b1301eb2" {:id #uuid "da7b4984-245f-441e-95c1-44f7b1301eb2", :name Ennarea, :main_category_id #uuid "fd180aa9-b0d1-432a-a549-2a5297e6a35d", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>oo> templates::get-templates1a ?broken-base-query? {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [[[:concat ([:lower [:coalesce :procurement_templates.article_name ]] [:lower [:coalesce :models.product ]] [:lower [:coalesce :models.version ]])]]]}
>oo> templates::get-templates1b ?broken-base-query? [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC   ]
>oo> templates::get-templates1 [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC #uuid "da7b4984-245f-441e-95c1-44f7b1301eb2"   ]
2023-12-08T09:57:09.065Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:main_categories [#ordered/map ([:id "fd180aa9-b0d1-432a-a549-2a5297e6a35d"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "da7b4984-245f-441e-95c1-44f7b1301eb2"] [:name "Ennarea"] [:templates []] [:__typename :Category])]] [:__typename :MainCategory])]])}
>>>get-dashboard
>>args {}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats [{:id #uuid "fd180aa9-b0d1-432a-a549-2a5297e6a35d", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods ORDER BY end_date DESC]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {} nil
>o> helper1 id= nil
>o> helper2 nil nil nil
>oo> helper3a priority nil
>oo> helper3b priority nil
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority nil
>o> helper5
>oo> helper5a :order_status nil
>oo> helper5b :order_status nil
>oo> helper5c :order_status nil
>oo> order-status nil
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.073Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.074Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.075Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-08T09:57:09.077Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 nil nil nil
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>o> apply-scope #uuid "2166366e-5dd6-449c-805d-dcacab40f274"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.079Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.080Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.082Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.083Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.083Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> >o> HERE :row-fn ()
>o>dashboard-cache-keyB2 {:id -15128758}
2023-12-08T09:57:09.106Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-08T09:57:09.106Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -15128758
2023-12-08T09:57:09.107Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()
2023-12-08T09:57:09.107Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-15128758"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 5f7c2d7f-3913-44f9-9a97-0c3890d34b23}, leihs-user-session {:value abb8de65-aec7-46b0-9094-9f80f1d5e5c7}}, :remote-addr 127.0.0.1, :start-time 161382456044583, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x3e07da0d HikariProxyConnection@1040701965 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=5f7c2d7f-3913-44f9-9a97-0c3890d34b23; leihs-user-session=abb8de65-aec7-46b0-9094-9f80f1d5e5c7, content-length 325, referer http://localhost:3230/procure/templates/edit, connection keep-alive, x-csrf-token 5f7c2d7f-3913-44f9-9a97-0c3890d34b23, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4261a8d0 /127.0.0.1:3230<->/127.0.0.1:61515], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x47009bf0 HikariProxyConnection@1191222256 wrapping org.postgresql.jdbc.PgConnection@226c165e], :level 1, :rollback #object[clojure.lang.Atom 0x4e656699 {:status :ready, :val false}]}, :content-length 325, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminUpdateTemplates, :variables {:templates [{:article_name Mate 20 Lite, :category_id da7b4984-245f-441e-95c1-44f7b1301eb2, :supplier_name nil}]}, :query mutation adminUpdateTemplates($templates: [TemplateInput]) {
  update_templates(input_data: $templates) {
    id
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x3e07da0d HikariProxyConnection@1040701965 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.703Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.704Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.704Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.704Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  5f7c2d7f-3913-44f9-9a97-0c3890d34b23

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 1
2023-12-08T09:57:09.708Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query mutation adminUpdateTemplates($templates: [TemplateInput]) {
  update_templates(input_data: $templates) {
    id
    __typename
  }
}
 with variables {:templates [{:article_name "Mate 20 Lite", :category_id "da7b4984-245f-441e-95c1-44f7b1301eb2", :supplier_name nil}]}
>oo> vars from graphQL-Requst nil nil nil {:templates [{:article_name Mate 20 Lite, :category_id da7b4984-245f-441e-95c1-44f7b1301eb2, :supplier_name nil}]}
>>1x #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x3e07da0d HikariProxyConnection@1040701965 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>>2x {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:07.922942Z", :id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :user_session_id #uuid "3de2421f-41c0-44e2-93e2-abe2f812695d", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2166366e-5dd6-449c-805d-dcacab40f274", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.712Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.713Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> inspector? {:result true}
2023-12-08T09:57:09.714Z NX-41294 DEBUG [leihs.procurement.resources.templates:116] - input-data => [{:article_name "Mate 20 Lite", :category_id "da7b4984-245f-441e-95c1-44f7b1301eb2", :supplier_name nil}]
2023-12-08T09:57:09.715Z NX-41294 DEBUG [leihs.procurement.resources.templates:118] - tmpl => {:article_name "Mate 20 Lite", :category_id "da7b4984-245f-441e-95c1-44f7b1301eb2", :supplier_name nil}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
2023-12-08T09:57:09.715Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2166366e-5dd6-449c-805d-dcacab40f274"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = CAST(? AS UUID)) AND (procurement_category_inspectors.category_id = CAST(? AS UUID))) AS result #uuid "2166366e-5dd6-449c-805d-dcacab40f274" da7b4984-245f-441e-95c1-44f7b1301eb2]
2023-12-08T09:57:09.716Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = CAST(? AS UUID)) AND (procurement_category_inspectors.category_id = CAST(? AS UUID))) AS result" #uuid "2166366e-5dd6-449c-805d-dcacab40f274" "da7b4984-245f-441e-95c1-44f7b1301eb2"]
>o> inspector? {:result true}
>o> no / my-cast /debug  {:article_name Mate 20 Lite, :category_id da7b4984-245f-441e-95c1-44f7b1301eb2, :supplier_name nil}
>o> no before _> room_id= da7b4984-245f-441e-95c1-44f7b1301eb2
>o> no after _> room_id= {:article_name Mate 20 Lite, :category_id [[:cast da7b4984-245f-441e-95c1-44f7b1301eb2 :uuid]], :supplier_name nil}
2023-12-08T09:57:09.724Z NX-41294 DEBUG [leihs.procurement.resources.templates:125] - (template/insert-template! tx (dissoc tmpl :id)) => [{:next.jdbc/update-count 1}]
>e> #error {
 :cause ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
 :via
 [{:type org.postgresql.util.PSQLException
   :message ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
   :at [org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]}]
 :trace
 [[org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]
  [org.postgresql.core.v3.QueryExecutorImpl processResults QueryExecutorImpl.java 2268]
  [org.postgresql.core.v3.QueryExecutorImpl execute QueryExecutorImpl.java 313]
  [org.postgresql.jdbc.PgStatement executeInternal PgStatement.java 448]
  [org.postgresql.jdbc.PgStatement execute PgStatement.java 369]
  [org.postgresql.jdbc.PgPreparedStatement executeWithFlags PgPreparedStatement.java 159]
  [org.postgresql.jdbc.PgPreparedStatement execute PgPreparedStatement.java 148]
  [com.zaxxer.hikari.pool.ProxyPreparedStatement execute ProxyPreparedStatement.java 44]
  [com.zaxxer.hikari.pool.HikariProxyPreparedStatement execute HikariProxyPreparedStatement.java -1]
  [next.jdbc.result_set$stmt__GT_result_set invokeStatic result_set.clj 669]
  [next.jdbc.result_set$stmt__GT_result_set invoke result_set.clj 664]
  [next.jdbc.result_set$eval11828$fn__11836 invoke result_set.clj 897]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc.default_options$eval11019$fn__11024 invoke default_options.clj 31]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc$execute_BANG_ invokeStatic jdbc.clj 251]
  [next.jdbc$execute_BANG_ invoke jdbc.clj 238]
  [leihs.procurement.resources.template$get_template invokeStatic template.clj 95]
  [leihs.procurement.resources.template$get_template invoke template.clj 82]
  [leihs.procurement.resources.templates$get_template_id invokeStatic templates.clj 106]
  [leihs.procurement.resources.templates$get_template_id invoke templates.clj 103]
  [leihs.procurement.resources.templates$update_templates_BANG_ invokeStatic templates.clj 131]
  [leihs.procurement.resources.templates$update_templates_BANG_ invoke templates.clj 109]
  [leihs.procurement.authorization$wrap_ensure_one_of$fn__39307 invoke authorization.clj 39]
  [leihs.procurement.graphql.resolver$wrap_resolver_with_error$fn__44545 invoke resolver.clj 16]
  [com.walmartlabs.lacinia.schema$wrap_resolver_to_ensure_resolver_result$fn__14023 invoke schema.clj 986]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invokeStatic executor.clj 86]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invoke executor.clj 68]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync$fn__17487 invoke executor.clj 212]
  [com.walmartlabs.lacinia.resolve.ResolverResultImpl on_deliver_BANG_ resolve.clj 135]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invokeStatic executor.clj 208]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invoke executor.clj 203]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync$fn__17494 invoke executor.clj 230]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invokeStatic executor.clj 230]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invoke executor.clj 221]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17519 invoke executor.clj 400]
  [clojure.lang.AFn applyToHelper AFn.java 152]
  [clojure.lang.AFn applyTo AFn.java 144]
  [clojure.core$apply invokeStatic core.clj 667]
  [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1977]
  [clojure.core$with_bindings_STAR_ doInvoke core.clj 1977]
  [clojure.lang.RestFn invoke RestFn.java 425]
  [clojure.lang.AFn applyToHelper AFn.java 156]
  [clojure.lang.RestFn applyTo RestFn.java 132]
  [clojure.core$apply invokeStatic core.clj 671]
  [clojure.core$bound_fn_STAR_$fn__5767 doInvoke core.clj 2007]
  [clojure.lang.RestFn invoke RestFn.java 397]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17524 invoke executor.clj 421]
  [clojure.core$binding_conveyor_fn$fn__5772 invoke core.clj 2034]
  [clojure.lang.AFn call AFn.java 18]
  [java.util.concurrent.FutureTask run FutureTask.java 264]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1128]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 628]
  [java.lang.Thread run Thread.java 829]]}
2023-12-08T09:57:09.735Z NX-41294 WARN [leihs.procurement.graphql.resolver:326] - ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
2023-12-08T09:57:09.735Z NX-41294 DEBUG [leihs.procurement.graphql.resolver:326] - #error {
 :cause ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
 :via
 [{:type org.postgresql.util.PSQLException
   :message ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
   :at [org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]}]
 :trace
 [[org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]
  [org.postgresql.core.v3.QueryExecutorImpl processResults QueryExecutorImpl.java 2268]
  [org.postgresql.core.v3.QueryExecutorImpl execute QueryExecutorImpl.java 313]
  [org.postgresql.jdbc.PgStatement executeInternal PgStatement.java 448]
  [org.postgresql.jdbc.PgStatement execute PgStatement.java 369]
  [org.postgresql.jdbc.PgPreparedStatement executeWithFlags PgPreparedStatement.java 159]
  [org.postgresql.jdbc.PgPreparedStatement execute PgPreparedStatement.java 148]
  [com.zaxxer.hikari.pool.ProxyPreparedStatement execute ProxyPreparedStatement.java 44]
  [com.zaxxer.hikari.pool.HikariProxyPreparedStatement execute HikariProxyPreparedStatement.java -1]
  [next.jdbc.result_set$stmt__GT_result_set invokeStatic result_set.clj 669]
  [next.jdbc.result_set$stmt__GT_result_set invoke result_set.clj 664]
  [next.jdbc.result_set$eval11828$fn__11836 invoke result_set.clj 897]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc.default_options$eval11019$fn__11024 invoke default_options.clj 31]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc$execute_BANG_ invokeStatic jdbc.clj 251]
  [next.jdbc$execute_BANG_ invoke jdbc.clj 238]
  [leihs.procurement.resources.template$get_template invokeStatic template.clj 95]
  [leihs.procurement.resources.template$get_template invoke template.clj 82]
  [leihs.procurement.resources.templates$get_template_id invokeStatic templates.clj 106]
  [leihs.procurement.resources.templates$get_template_id invoke templates.clj 103]
  [leihs.procurement.resources.templates$update_templates_BANG_ invokeStatic templates.clj 131]
  [leihs.procurement.resources.templates$update_templates_BANG_ invoke templates.clj 109]
  [leihs.procurement.authorization$wrap_ensure_one_of$fn__39307 invoke authorization.clj 39]
  [leihs.procurement.graphql.resolver$wrap_resolver_with_error$fn__44545 invoke resolver.clj 16]
  [com.walmartlabs.lacinia.schema$wrap_resolver_to_ensure_resolver_result$fn__14023 invoke schema.clj 986]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invokeStatic executor.clj 86]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invoke executor.clj 68]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync$fn__17487 invoke executor.clj 212]
  [com.walmartlabs.lacinia.resolve.ResolverResultImpl on_deliver_BANG_ resolve.clj 135]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invokeStatic executor.clj 208]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invoke executor.clj 203]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync$fn__17494 invoke executor.clj 230]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invokeStatic executor.clj 230]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invoke executor.clj 221]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17519 invoke executor.clj 400]
  [clojure.lang.AFn applyToHelper AFn.java 152]
  [clojure.lang.AFn applyTo AFn.java 144]
  [clojure.core$apply invokeStatic core.clj 667]
  [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1977]
  [clojure.core$with_bindings_STAR_ doInvoke core.clj 1977]
  [clojure.lang.RestFn invoke RestFn.java 425]
  [clojure.lang.AFn applyToHelper AFn.java 156]
  [clojure.lang.RestFn applyTo RestFn.java 132]
  [clojure.core$apply invokeStatic core.clj 671]
  [clojure.core$bound_fn_STAR_$fn__5767 doInvoke core.clj 2007]
  [clojure.lang.RestFn invoke RestFn.java 397]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17524 invoke executor.clj 421]
  [clojure.core$binding_conveyor_fn$fn__5772 invoke core.clj 2034]
  [clojure.lang.AFn call AFn.java 18]
  [java.util.concurrent.FutureTask run FutureTask.java 264]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1128]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 628]
  [java.lang.Thread run Thread.java 829]]}
2023-12-08T09:57:09.737Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:update_templates nil]), :errors ({:message "ERROR: operator does not exist: uuid = character varying\n  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.\n  Position: 146", :locations [{:line 2, :column 3}], :path [:update_templates], :extensions {:exception "PSQLException", :arguments {:input_data $templates}}})}
2023-12-08T09:57:09.738Z NX-41294 DEBUG [leihs.procurement.graphql:87] - {:data #ordered/map ([:update_templates nil]), :errors ({:message "ERROR: operator does not exist: uuid = character varying\n  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.\n  Position: 146", :locations [{:line 2, :column 3}], :path [:update_templates], :extensions {:exception "PSQLException", :arguments {:input_data $templates}}})}

>o> ERROR 4pure-handler, result=> {:data #ordered/map ([:update_templates nil]), :errors ({:message ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146, :locations [{:line 2, :column 3}], :path [:update_templates], :extensions {:exception PSQLException, :arguments {:input_data $templates}}})}
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 161423679840083, :params {:return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {:return-to /}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6c16de68 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {:return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2F, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:50.917Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:50.922Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:50.928Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:50.930Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  c5c00245-4728-4c21-8f94-5fa213302491
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}}, :remote-addr 127.0.0.1, :start-time 161423818318208, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491, referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0xe19a358 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:51.052Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:51.052Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:51.053Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:51.053Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}}, :remote-addr 127.0.0.1, :start-time 161423936023250, :params {:user amelia@rosenbaum.name, :password nil, :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x52e8becc HikariProxyConnection@1390984908 wrapping org.postgresql.jdbc.PgConnection@165221e8], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491, content-length 100, sec-fetch-user ?1, referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5051bac8 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password , :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x12650994 HikariProxyConnection@308611476 wrapping org.postgresql.jdbc.PgConnection@56ccbca], :level 1, :rollback #object[clojure.lang.Atom 0x2b6f7ee {:status :ready, :val false}]}, :content-length 100, :form-params {:user amelia@rosenbaum.name, :password nil, :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password , :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x5f6c9a8a BytesInputStream[len=100]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x52e8becc HikariProxyConnection@1390984908 wrapping org.postgresql.jdbc.PgConnection@165221e8], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:51.173Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:51.174Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:51.174Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:51.176Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}}, :remote-addr 127.0.0.1, :start-time 161424041173583, :params {:user amelia@rosenbaum.name, :password password, :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x4b671dc5 HikariProxyConnection@1265049029 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491, content-length 108, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x393b22a7 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x75746f01 HikariProxyConnection@1970564865 wrapping org.postgresql.jdbc.PgConnection@226c165e], :level 1, :rollback #object[clojure.lang.Atom 0x133fa6e4 {:status :ready, :val false}]}, :content-length 108, :form-params {:user amelia@rosenbaum.name, :password password, :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token c5c00245-4728-4c21-8f94-5fa213302491, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x60451873 BytesInputStream[len=108]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x73fb416c compojure.core$routes$fn__27950@73fb416c], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x4b671dc5 HikariProxyConnection@1265049029 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:51.276Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:51.279Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-08T09:57:51.279Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-08T09:57:51.280Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161424073342708, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x77bc132a /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /, :server-name localhost, :handler-key :home, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :home
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.317Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.318Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.318Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.319Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.320Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.320Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.321Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.321Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161424161965208, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, referer http://localhost:3230/, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x67fcdc74 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.402Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.403Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.403Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.404Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.404Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.405Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.405Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.406Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161424534994458, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, referer http://localhost:3230/procure/, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2036edcf 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.776Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.778Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.778Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.779Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.779Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.780Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :procurement
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161424537510958, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x41f509ae /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure, :server-name localhost, :handler-key :procurement, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :procurement
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.790Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.791Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.791Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.792Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.793Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.793Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:51.793Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161424912509833, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, referer http://localhost:3230/procure, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x14bfdc83 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x3acdb9dd leihs.procurement.backend.html$not_found_handler@3acdb9dd], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.153Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.154Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.156Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.156Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.157Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161424920576916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, content-length 502, referer http://localhost:3230/procure, connection keep-alive, x-csrf-token c5c00245-4728-4c21-8f94-5fa213302491, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x79094bd6 /127.0.0.1:3230<->/127.0.0.1:61750], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.161Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.162Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.162Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.163Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.163Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.163Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.164Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.164Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-08T09:57:52.166Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
2023-12-08T09:57:52.167Z NX-41294 DEBUG [leihs.procurement.resources.user:75] - id => #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
>>>2 {:id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
2023-12-08T09:57:52.171Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>>>3 nil
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.186Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.187Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
2023-12-08T09:57:52.199Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"c5c00245-4728-4c21-8f94-5fa213302491\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"2e5d0df6-3cdd-4efd-9a30-0bd8333c8063\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "711b4d7c-96a9-4803-b49f-727a280f8657"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161425048759750, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, content-length 502, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c5c00245-4728-4c21-8f94-5fa213302491, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5f5a659f /127.0.0.1:3230<->/127.0.0.1:61751], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.298Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 >>> authenticate::skip= leihs.core.locale$wrap$fn__44425@20470798nil]
  handler-key= :graphql
>> authorize::request >
 >>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, {:scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id :authenticated-entity#uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false,  :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161425047923208, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{{:connectable :email amelia@rosenbaum.name, :contracts_count #object[com.zaxxer.hikari.HikariDataSource 0, :lastname Kemmer, :org_id nil, 0x12e00fa2 HikariDataSource (HikariPool-1)]:scope_read , true, :options :is_admin false, :authentication-method :session, :login nil, {:scope_system_admin_write :builder-fn false, :scope_write#object[next.jdbc.result_set$as_unqualified_lower_maps >o> admin? {:exists false}
0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, >myprint> :query-params-raw  admin false
 true, :firstname {Dawna, :scope_admin_write false, }:user_session_created_at , :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, content-length 3575, referer #time/instant "2023-12-08T09:57:51.294404Z", http://localhost:3230/procure/requests, connection :id keep-alive, x-csrf-token c5c00245-4728-4c21-8f94-5fa213302491, accept application/json, accept-language #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", de,en-US;q=0.7,en;q=0.3, :user_session_id sec-fetch-dest empty, #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", accept-encoding :scope_system_admin_readgzip, deflate, br,  sec-fetch-modefalse,  :access-rights cors}, :async-channel (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161425048309583, :params #object[org.httpkit.server.AsyncChannel {}, :settings >o> inspector?{ :email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, [0x5f039996 /127.0.0.1:3230<->/127.0.0.1:61750], :server-port 3230, SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result:params-raw  {}, :tx {:datasource #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
:tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, content-length 534, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c5c00245-4728-4c21-8f94-5fa213302491, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4532d534 /127.0.0.1:3230<->/127.0.0.1:61733], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
#object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 3575, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
2023-12-08T09:57:52.299Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.300Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.300Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? {:result true}
>myprint>  inspector true
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result >o> admin? #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
{:exists false}
>myprint>  admin false
2023-12-08T09:57:52.301Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.301Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.301Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer >o> inspector? false
{:result true}
>myprint>  inspector true
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.302Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.302Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> requester?? {:exists false}
>myprint>  requester false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result >o> viewer? #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
{:result false}
>myprint>  viewer false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.302Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.302Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.302Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> viewer? {2023-12-08T09:57:52.302Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
:result false}
>myprint>  viewer false
>o> admin? [>o> requester?? SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"][
SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.303Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.303Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
2023-12-08T09:57:52.303Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.304Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.304Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.304Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.305Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.305Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.305Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.306Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.306Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-08T09:57:52.309Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
pure-handler >> 2
2023-12-08T09:57:52.310Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
2023-12-08T09:57:52.312Z NX-41294 DEBUG [leihs.procurement.resources.user:75] - id => #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
pure-handler >> 2
2023-12-08T09:57:52.316Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>2 {:id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
2023-12-08T09:57:52.317Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>>>3 nil
>>>get-dashboard
>>args {}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161425081222833, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, content-length 615, referer http://localhost:3230/procure/templates/edit, connection keep-alive, x-csrf-token c5c00245-4728-4c21-8f94-5fa213302491, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x49ad583f /127.0.0.1:3230<->/127.0.0.1:61753], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x12e00fa2 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
2023-12-08T09:57:52.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
2023-12-08T09:57:52.326Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.326Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.327Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>>ToCheck mainCats [{:id #uuid "5c8e7ad7-4c09-44e3-9008-b60e6da038e1", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods ORDER BY end_date DESC]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {} nil
2023-12-08T09:57:52.327Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> helper1 id= nil
>o> helper2 nil nil nil
>oo> helper3a priority nil
>oo> helper3b priority nil
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority nil
>o> helper5
>oo> helper5a :order_status nil
>oo> helper5b :order_status nil
>oo> helper5c :order_status nil
>oo> order-status nil
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.328Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
2023-12-08T09:57:52.328Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
2023-12-08T09:57:52.329Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"c5c00245-4728-4c21-8f94-5fa213302491\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"2e5d0df6-3cdd-4efd-9a30-0bd8333c8063\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "711b4d7c-96a9-4803-b49f-727a280f8657"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.330Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.330Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
2023-12-08T09:57:52.330Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [>o> requester??:=  :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [{:= :procurement_departments.id :procurement_organizations.parent_id] :rooms :exists false}[
:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 nil nil nil
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>o> apply-scope #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.331Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.331Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
pure-handler >> 2
2023-12-08T09:57:52.333Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.333Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.333Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.334Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
2023-12-08T09:57:52.333Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods []] [:main_categories [#ordered/map ([:id "5c8e7ad7-4c09-44e3-9008-b60e6da038e1"] [:name "Geisha"] [:categories [#ordered/map ([:id "711b4d7c-96a9-4803-b49f-727a280f8657"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations []])}
>oo> templates::get-templates2 _> HERE value contains :id??) #uuid "711b4d7c-96a9-4803-b49f-727a280f8657" {:id #uuid "711b4d7c-96a9-4803-b49f-727a280f8657", :name Ennarea, :main_category_id #uuid "5c8e7ad7-4c09-44e3-9008-b60e6da038e1", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>oo> templates::get-templates1a ?broken-base-query? {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [[[:concat ([:lower [:coalesce :procurement_templates.article_name ]] [:lower [:coalesce :models.product ]] [:lower [:coalesce :models.version ]])]]]}
>oo> templates::get-templates1b ?broken-base-query? [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC   ]
>oo> templates::get-templates1 [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC #uuid "711b4d7c-96a9-4803-b49f-727a280f8657"   ]
2023-12-08T09:57:52.349Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:main_categories [#ordered/map ([:id "5c8e7ad7-4c09-44e3-9008-b60e6da038e1"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "711b4d7c-96a9-4803-b49f-727a280f8657"] [:name "Ennarea"] [:templates []] [:__typename :Category])]] [:__typename :MainCategory])]])}
>o> >o> HERE :row-fn ()
>o>dashboard-cache-keyB2 {:id -15128758}
2023-12-08T09:57:52.363Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-08T09:57:52.364Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -15128758
2023-12-08T09:57:52.364Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()
2023-12-08T09:57:52.364Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-15128758"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44425 0x20470798 leihs.core.locale$wrap$fn__44425@20470798]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c5c00245-4728-4c21-8f94-5fa213302491}, leihs-user-session {:value 5ce1335f-bba4-4690-896c-dda7e4343d52}}, :remote-addr 127.0.0.1, :start-time 161425737229625, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x5cd9da89 HikariProxyConnection@1557781129 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c5c00245-4728-4c21-8f94-5fa213302491; leihs-user-session=5ce1335f-bba4-4690-896c-dda7e4343d52, content-length 325, referer http://localhost:3230/procure/templates/edit, connection keep-alive, x-csrf-token c5c00245-4728-4c21-8f94-5fa213302491, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1eb96f6c /127.0.0.1:3230<->/127.0.0.1:61751], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0xa0debc1 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x7ea3d73f HikariProxyConnection@2124666687 wrapping org.postgresql.jdbc.PgConnection@226c165e], :level 1, :rollback #object[clojure.lang.Atom 0x1055ddcb {:status :ready, :val false}]}, :content-length 325, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminUpdateTemplates, :variables {:templates [{:article_name Mate 20 Lite, :category_id 711b4d7c-96a9-4803-b49f-727a280f8657, :supplier_name nil}]}, :query mutation adminUpdateTemplates($templates: [TemplateInput]) {
  update_templates(input_data: $templates) {
    id
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x415d694b leihs.procurement.graphql$handler@415d694b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x5cd9da89 HikariProxyConnection@1557781129 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.979Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.980Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.980Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.981Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.981Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.981Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.981Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.982Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c5c00245-4728-4c21-8f94-5fa213302491

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 1
2023-12-08T09:57:52.983Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query mutation adminUpdateTemplates($templates: [TemplateInput]) {
  update_templates(input_data: $templates) {
    id
    __typename
  }
}
 with variables {:templates [{:article_name "Mate 20 Lite", :category_id "711b4d7c-96a9-4803-b49f-727a280f8657", :supplier_name nil}]}
>oo> vars from graphQL-Requst nil nil nil {:templates [{:article_name Mate 20 Lite, :category_id 711b4d7c-96a9-4803-b49f-727a280f8657, :supplier_name nil}]}
>>1x #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x5cd9da89 HikariProxyConnection@1557781129 wrapping org.postgresql.jdbc.PgConnection@4a4af54a], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x20feff3d next.jdbc.result_set$as_unqualified_lower_maps@20feff3d]}}
>>2x {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-08T09:57:51.294404Z", :id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :user_session_id #uuid "80162fc1-705f-4b24-85c9-12aaf5dbe914", :scope_system_admin_read false, :access-rights (), :user_id #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.984Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.984Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> inspector? {:result true}
2023-12-08T09:57:52.985Z NX-41294 DEBUG [leihs.procurement.resources.templates:116] - input-data => [{:article_name "Mate 20 Lite", :category_id "711b4d7c-96a9-4803-b49f-727a280f8657", :supplier_name nil}]
2023-12-08T09:57:52.985Z NX-41294 DEBUG [leihs.procurement.resources.templates:118] - tmpl => {:article_name "Mate 20 Lite", :category_id "711b4d7c-96a9-4803-b49f-727a280f8657", :supplier_name nil}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
2023-12-08T09:57:52.985Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = CAST(? AS UUID)) AND (procurement_category_inspectors.category_id = CAST(? AS UUID))) AS result #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063" 711b4d7c-96a9-4803-b49f-727a280f8657]
2023-12-08T09:57:52.985Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE (procurement_category_inspectors.user_id = CAST(? AS UUID)) AND (procurement_category_inspectors.category_id = CAST(? AS UUID))) AS result" #uuid "2e5d0df6-3cdd-4efd-9a30-0bd8333c8063" "711b4d7c-96a9-4803-b49f-727a280f8657"]
>o> inspector? {:result true}
>o> no / my-cast /debug  {:article_name Mate 20 Lite, :category_id 711b4d7c-96a9-4803-b49f-727a280f8657, :supplier_name nil}
>o> no before _> room_id= 711b4d7c-96a9-4803-b49f-727a280f8657
>o> no after _> room_id= {:article_name Mate 20 Lite, :category_id [[:cast 711b4d7c-96a9-4803-b49f-727a280f8657 :uuid]], :supplier_name nil}
2023-12-08T09:57:52.987Z NX-41294 DEBUG [leihs.procurement.resources.templates:125] - (template/insert-template! tx (dissoc tmpl :id)) => [{:next.jdbc/update-count 1}]
>e> #error {
 :cause ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
 :via
 [{:type org.postgresql.util.PSQLException
   :message ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
   :at [org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]}]
 :trace
 [[org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]
  [org.postgresql.core.v3.QueryExecutorImpl processResults QueryExecutorImpl.java 2268]
  [org.postgresql.core.v3.QueryExecutorImpl execute QueryExecutorImpl.java 313]
  [org.postgresql.jdbc.PgStatement executeInternal PgStatement.java 448]
  [org.postgresql.jdbc.PgStatement execute PgStatement.java 369]
  [org.postgresql.jdbc.PgPreparedStatement executeWithFlags PgPreparedStatement.java 159]
  [org.postgresql.jdbc.PgPreparedStatement execute PgPreparedStatement.java 148]
  [com.zaxxer.hikari.pool.ProxyPreparedStatement execute ProxyPreparedStatement.java 44]
  [com.zaxxer.hikari.pool.HikariProxyPreparedStatement execute HikariProxyPreparedStatement.java -1]
  [next.jdbc.result_set$stmt__GT_result_set invokeStatic result_set.clj 669]
  [next.jdbc.result_set$stmt__GT_result_set invoke result_set.clj 664]
  [next.jdbc.result_set$eval11828$fn__11836 invoke result_set.clj 897]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc.default_options$eval11019$fn__11024 invoke default_options.clj 31]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc$execute_BANG_ invokeStatic jdbc.clj 251]
  [next.jdbc$execute_BANG_ invoke jdbc.clj 238]
  [leihs.procurement.resources.template$get_template invokeStatic template.clj 95]
  [leihs.procurement.resources.template$get_template invoke template.clj 82]
  [leihs.procurement.resources.templates$get_template_id invokeStatic templates.clj 106]
  [leihs.procurement.resources.templates$get_template_id invoke templates.clj 103]
  [leihs.procurement.resources.templates$update_templates_BANG_ invokeStatic templates.clj 131]
  [leihs.procurement.resources.templates$update_templates_BANG_ invoke templates.clj 109]
  [leihs.procurement.authorization$wrap_ensure_one_of$fn__39307 invoke authorization.clj 39]
  [leihs.procurement.graphql.resolver$wrap_resolver_with_error$fn__44545 invoke resolver.clj 16]
  [com.walmartlabs.lacinia.schema$wrap_resolver_to_ensure_resolver_result$fn__14023 invoke schema.clj 986]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invokeStatic executor.clj 86]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invoke executor.clj 68]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync$fn__17487 invoke executor.clj 212]
  [com.walmartlabs.lacinia.resolve.ResolverResultImpl on_deliver_BANG_ resolve.clj 135]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invokeStatic executor.clj 208]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invoke executor.clj 203]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync$fn__17494 invoke executor.clj 230]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invokeStatic executor.clj 230]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invoke executor.clj 221]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17519 invoke executor.clj 400]
  [clojure.lang.AFn applyToHelper AFn.java 152]
  [clojure.lang.AFn applyTo AFn.java 144]
  [clojure.core$apply invokeStatic core.clj 667]
  [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1977]
  [clojure.core$with_bindings_STAR_ doInvoke core.clj 1977]
  [clojure.lang.RestFn invoke RestFn.java 425]
  [clojure.lang.AFn applyToHelper AFn.java 156]
  [clojure.lang.RestFn applyTo RestFn.java 132]
  [clojure.core$apply invokeStatic core.clj 671]
  [clojure.core$bound_fn_STAR_$fn__5767 doInvoke core.clj 2007]
  [clojure.lang.RestFn invoke RestFn.java 397]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17524 invoke executor.clj 421]
  [clojure.core$binding_conveyor_fn$fn__5772 invoke core.clj 2034]
  [clojure.lang.AFn call AFn.java 18]
  [java.util.concurrent.FutureTask run FutureTask.java 264]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1128]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 628]
  [java.lang.Thread run Thread.java 829]]}
2023-12-08T09:57:52.988Z NX-41294 WARN [leihs.procurement.graphql.resolver:326] - ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
2023-12-08T09:57:52.988Z NX-41294 DEBUG [leihs.procurement.graphql.resolver:326] - #error {
 :cause ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
 :via
 [{:type org.postgresql.util.PSQLException
   :message ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146
   :at [org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]}]
 :trace
 [[org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]
  [org.postgresql.core.v3.QueryExecutorImpl processResults QueryExecutorImpl.java 2268]
  [org.postgresql.core.v3.QueryExecutorImpl execute QueryExecutorImpl.java 313]
  [org.postgresql.jdbc.PgStatement executeInternal PgStatement.java 448]
  [org.postgresql.jdbc.PgStatement execute PgStatement.java 369]
  [org.postgresql.jdbc.PgPreparedStatement executeWithFlags PgPreparedStatement.java 159]
  [org.postgresql.jdbc.PgPreparedStatement execute PgPreparedStatement.java 148]
  [com.zaxxer.hikari.pool.ProxyPreparedStatement execute ProxyPreparedStatement.java 44]
  [com.zaxxer.hikari.pool.HikariProxyPreparedStatement execute HikariProxyPreparedStatement.java -1]
  [next.jdbc.result_set$stmt__GT_result_set invokeStatic result_set.clj 669]
  [next.jdbc.result_set$stmt__GT_result_set invoke result_set.clj 664]
  [next.jdbc.result_set$eval11828$fn__11836 invoke result_set.clj 897]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc.default_options$eval11019$fn__11024 invoke default_options.clj 31]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc$execute_BANG_ invokeStatic jdbc.clj 251]
  [next.jdbc$execute_BANG_ invoke jdbc.clj 238]
  [leihs.procurement.resources.template$get_template invokeStatic template.clj 95]
  [leihs.procurement.resources.template$get_template invoke template.clj 82]
  [leihs.procurement.resources.templates$get_template_id invokeStatic templates.clj 106]
  [leihs.procurement.resources.templates$get_template_id invoke templates.clj 103]
  [leihs.procurement.resources.templates$update_templates_BANG_ invokeStatic templates.clj 131]
  [leihs.procurement.resources.templates$update_templates_BANG_ invoke templates.clj 109]
  [leihs.procurement.authorization$wrap_ensure_one_of$fn__39307 invoke authorization.clj 39]
  [leihs.procurement.graphql.resolver$wrap_resolver_with_error$fn__44545 invoke resolver.clj 16]
  [com.walmartlabs.lacinia.schema$wrap_resolver_to_ensure_resolver_result$fn__14023 invoke schema.clj 986]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invokeStatic executor.clj 86]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invoke executor.clj 68]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync$fn__17487 invoke executor.clj 212]
  [com.walmartlabs.lacinia.resolve.ResolverResultImpl on_deliver_BANG_ resolve.clj 135]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invokeStatic executor.clj 208]
  [com.walmartlabs.lacinia.executor$combine_selection_results_sync invoke executor.clj 203]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync$fn__17494 invoke executor.clj 230]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invokeStatic executor.clj 230]
  [com.walmartlabs.lacinia.executor$execute_nested_selections_sync invoke executor.clj 221]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17519 invoke executor.clj 400]
  [clojure.lang.AFn applyToHelper AFn.java 152]
  [clojure.lang.AFn applyTo AFn.java 144]
  [clojure.core$apply invokeStatic core.clj 667]
  [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1977]
  [clojure.core$with_bindings_STAR_ doInvoke core.clj 1977]
  [clojure.lang.RestFn invoke RestFn.java 425]
  [clojure.lang.AFn applyToHelper AFn.java 156]
  [clojure.lang.RestFn applyTo RestFn.java 132]
  [clojure.core$apply invokeStatic core.clj 671]
  [clojure.core$bound_fn_STAR_$fn__5767 doInvoke core.clj 2007]
  [clojure.lang.RestFn invoke RestFn.java 397]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17524 invoke executor.clj 421]
  [clojure.core$binding_conveyor_fn$fn__5772 invoke core.clj 2034]
  [clojure.lang.AFn call AFn.java 18]
  [java.util.concurrent.FutureTask run FutureTask.java 264]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1128]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 628]
  [java.lang.Thread run Thread.java 829]]}
2023-12-08T09:57:52.989Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:update_templates nil]), :errors ({:message "ERROR: operator does not exist: uuid = character varying\n  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.\n  Position: 146", :locations [{:line 2, :column 3}], :path [:update_templates], :extensions {:exception "PSQLException", :arguments {:input_data $templates}}})}
2023-12-08T09:57:52.989Z NX-41294 DEBUG [leihs.procurement.graphql:87] - {:data #ordered/map ([:update_templates nil]), :errors ({:message "ERROR: operator does not exist: uuid = character varying\n  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.\n  Position: 146", :locations [{:line 2, :column 3}], :path [:update_templates], :extensions {:exception "PSQLException", :arguments {:input_data $templates}}})}

>o> ERROR 4pure-handler, result=> {:data #ordered/map ([:update_templates nil]), :errors ({:message ERROR: operator does not exist: uuid = character varying
  Hinweis: No operator matches the given name and argument types. You might need to add explicit type casts.
  Position: 146, :locations [{:line 2, :column 3}], :path [:update_templates], :extensions {:exception PSQLException, :arguments {:input_data $templates}}})}

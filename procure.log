# java_leihs-procure-server env check via asdf v0.13.1
# java_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_java_leihs-procure-server to force update
# clojure_leihs-procure-server env check via asdf v0.13.1
# clojure_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_clojure_leihs-procure-server to force update
Warning: environ value /Users/mradl/.asdf/installs/java/zulu-11.60.19 for key :java-home has been overwritten with /Users/mradl/.asdf/installs/java/zulu-11.60.19/zulu-11.jdk/Contents/Home
>o> conc concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))
>o> templates::templates-base-query ERROR?
2023-12-06T15:28:09.937Z NX-41294 WARN [leihs.core.release:13] - Failed to read releases.yml, returning bogus value 
2023-12-06T15:28:10.624Z NX-41294 INFO [leihs.core.logging:37] - initializing logging  {:min-level [[#{"leihs.procurement" "leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :log-level nil}
2023-12-06T15:28:10.632Z NX-41294 INFO [leihs.core.logging:39] - initialized logging  {:min-level [[#{"leihs.procurement" "leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :ns-filter #{"*"}, :middleware [], :timestamp-opts {:pattern :iso8601, :locale :jvm-default, :timezone :utc}, :output-fn #object[taoensso.timbre$default_output_fn 0x7bc49796 "taoensso.timbre$default_output_fn@7bc49796"], :appenders {:println {:enabled? true, :fn #object[taoensso.timbre.appenders.core$println_appender$fn__3459 0xd4c326f "taoensso.timbre.appenders.core$println_appender$fn__3459@d4c326f"]}}, :_init-config {:loaded-from-source :default, :compile-time-config {:min-level nil, :ns-pattern "*"}}, :log-level nil}
2023-12-06T15:28:10.634Z NX-41294 INFO [leihs.procurement.main:50] - main ("--dev-mode" "true" "--repl" "true" "run")
2023-12-06T15:28:10.647Z NX-41294 INFO [leihs.core.repl:62] - init {:dev-mode true, :repl true, :repl-bind "localhost", :repl-port 60000, :repl-port-file ".nrepl-port"}
2023-12-06T15:28:10.649Z NX-41294 INFO [leihs.core.repl:70] - starting nREPL server  60000 localhost
2023-12-06T15:28:10.681Z NX-41294 INFO [leihs.core.repl:75] - started nREPL server 
2023-12-06T15:28:10.684Z NX-41294 INFO [leihs.procurement.run:326] - Invoking run with options:  {:db-host localhost, :db-max-pool-size 16, :db-min-pool-size 2, :db-name leihs_test, :db-password leihs, :db-port 5415, :db-user leihs, :dev-mode true, :http-host localhost, :http-max-threads 8, :http-min-threads 1, :http-port 3230, :http-queue-capacity 640, :http-thread-keep-alive-seconds 10, :http-worker-prefix leihs-service-http-worker-, :pid-file nil, :repl true, :repl-bind localhost, :repl-port 60000, :repl-port-file .nrepl-port}
2023-12-06T15:28:10.685Z NX-41294 INFO [leihs.core.shutdown:20] - PID 54946
2023-12-06T15:28:10.717Z NX-41294 INFO [leihs.core.shutdown:29] - Registering SIGTERM handler for shutdown.
2023-12-06T15:28:10.783Z NX-41294 INFO [leihs.core.graphql:17] - Initialized graphQL schema.
2023-12-06T15:28:10.785Z NX-41294 INFO [leihs.core.db:220] - Initializing db  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-06T15:28:10.794Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:80] - db-pool - Starting...
2023-12-06T15:28:10.877Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - db-pool - Added connection org.postgresql.jdbc.PgConnection@746f749a
2023-12-06T15:28:10.883Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:82] - db-pool - Start completed.
2023-12-06T15:28:10.883Z NX-41294 INFO [leihs.core.db:222] - Initialized db  {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 "HikariDataSource (db-pool)"]}
2023-12-06T15:28:10.884Z NX-41294 INFO [leihs.core.db:223] - Initializing ds-next  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-06T15:28:10.898Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2023-12-06T15:28:10.907Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@218b9629
2023-12-06T15:28:10.908Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2023-12-06T15:28:10.914Z NX-41294 INFO [leihs.core.db:225] - Initialized ds-next  #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 "next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4"]}}
2023-12-06T15:28:10.921Z NX-41294 INFO [leihs.core.http-server:101] - starting http-server  {:port 3230, :ip "localhost", :pool {:queue #object[java.util.concurrent.ArrayBlockingQueue 0x5ca4c333 "[]"], :pool #object[java.util.concurrent.ThreadPoolExecutor 0x1326f0ab "java.util.concurrent.ThreadPoolExecutor@1326f0ab[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]"]}}
2023-12-06T15:28:10.932Z NX-41294 INFO [leihs.core.http-server:104] - started http-server 
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 99914143332208, :params {:return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {:return-to /}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x284abfab /127.0.0.1:3230<->/127.0.0.1:53027], :server-port 3230, :params-raw {:return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2F, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27946 0x482370d4 compojure.core$routes$fn__27946@482370d4], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:54.567Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:54.572Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:54.596Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:54.598Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}}, :remote-addr 127.0.0.1, :start-time 99914424820458, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0xea383dc /127.0.0.1:3230<->/127.0.0.1:53027], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27946 0x482370d4 compojure.core$routes$fn__27946@482370d4], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:54.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:54.839Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:54.840Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:54.840Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}}, :remote-addr 127.0.0.1, :start-time 99914559597125, :params {:user amelia@rosenbaum.name, :password nil, :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x30cd6165 HikariProxyConnection@818766181 wrapping org.postgresql.jdbc.PgConnection@218b9629], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, content-length 100, sec-fetch-user ?1, referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x15b1379b /127.0.0.1:3230<->/127.0.0.1:53027], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password , :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x3c67926a HikariProxyConnection@1013420650 wrapping org.postgresql.jdbc.PgConnection@746f749a], :level 1, :rollback #object[clojure.lang.Atom 0x49853a8f {:status :ready, :val false}]}, :content-length 100, :form-params {:user amelia@rosenbaum.name, :password nil, :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password , :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x1e7ffa40 BytesInputStream[len=100]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27946 0x482370d4 compojure.core$routes$fn__27946@482370d4], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x30cd6165 HikariProxyConnection@818766181 wrapping org.postgresql.jdbc.PgConnection@218b9629], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:54.985Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:54.987Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:54.987Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:54.988Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}}, :remote-addr 127.0.0.1, :start-time 99914666166541, :params {:user amelia@rosenbaum.name, :password password, :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0xbcd9c5c HikariProxyConnection@198024284 wrapping org.postgresql.jdbc.PgConnection@218b9629], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, content-length 108, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3dc65077 /127.0.0.1:3230<->/127.0.0.1:53027], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x4a128569 HikariProxyConnection@1242727785 wrapping org.postgresql.jdbc.PgConnection@746f749a], :level 1, :rollback #object[clojure.lang.Atom 0x2fc3f34e {:status :ready, :val false}]}, :content-length 108, :form-params {:user amelia@rosenbaum.name, :password password, :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x480ba596 BytesInputStream[len=108]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27946 0x482370d4 compojure.core$routes$fn__27946@482370d4], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0xbcd9c5c HikariProxyConnection@198024284 wrapping org.postgresql.jdbc.PgConnection@218b9629], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:55.080Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:55.081Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-06T15:28:55.081Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-06T15:28:55.082Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99914736467791, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x50d29d83 /127.0.0.1:3230<->/127.0.0.1:53027], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /, :server-name localhost, :handler-key :home, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x1abd4973 leihs.procurement.backend.html$not_found_handler@1abd4973], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :home
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.180Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.181Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.182Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.183Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.184Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.185Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.187Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.188Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99914850976583, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, referer http://localhost:3230/, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0xa22bf1e /127.0.0.1:3230<->/127.0.0.1:53033], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x1abd4973 leihs.procurement.backend.html$not_found_handler@1abd4973], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.271Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.272Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.273Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.273Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.274Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.274Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.275Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.276Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915164561875, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, referer http://localhost:3230/procure/, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1bdc9be0 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x1abd4973 leihs.procurement.backend.html$not_found_handler@1abd4973], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.587Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.589Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.590Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.591Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.592Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.593Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.594Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.597Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :procurement
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915170265875, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4f71313d /127.0.0.1:3230<->/127.0.0.1:53034], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure, :server-name localhost, :handler-key :procurement, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x1abd4973 leihs.procurement.backend.html$not_found_handler@1abd4973], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :procurement
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.626Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.627Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.627Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.628Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.629Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.629Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.630Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.630Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915404489791, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, referer http://localhost:3230/procure, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6fca87ab /127.0.0.1:3230<->/127.0.0.1:53034], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x1abd4973 leihs.procurement.backend.html$not_found_handler@1abd4973], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.823Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.824Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.824Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.825Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.826Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.828Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915413051833, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 502, referer http://localhost:3230/procure, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x355a868d /127.0.0.1:3230<->/127.0.0.1:53039], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.873Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.874Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.875Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.876Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.877Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.877Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.878Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.878Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-06T15:28:55.883Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
2023-12-06T15:28:55.893Z NX-41294 DEBUG [leihs.procurement.resources.user:75] - id => #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
>>>2 {:id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
2023-12-06T15:28:55.897Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>>>3 nil
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.923Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:55.924Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915413051833, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 502, referer http://localhost:3230/procure, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x355a868d /127.0.0.1:3230<->/127.0.0.1:53039], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-06T15:28:55.114964Z","id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","user_session_id":"636dcede-e3fa-41a2-a2b5-51423ec96ec6","scope_system_admin_read":false,"access-rights":[],"user_id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710"},"leihs-user-session":{"value":"8ab2a959-b37a-44b4-bfc1-005e6370eebf"}},"remote-addr":"127.0.0.1","start-time":99915413051833,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko\/20100101 Firefox\/115.0","content-type":"application\/json","cookie":"leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf","content-length":"502","referer":"http:\/\/localhost:3230\/procure","connection":"keep-alive","x-csrf-token":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","accept":"application\/json","accept-language":"de,en-US;q=0.7,en;q=0.3","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}


>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 844dd3af-2e7f-46fa-a417-dfaca502a01a] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id 2b862d46-bd7b-4c57-9901-0ae4d1e8b896] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-06T15:28:55.942Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"844dd3af-2e7f-46fa-a417-dfaca502a01a\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "844dd3af-2e7f-46fa-a417-dfaca502a01a"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "2b862d46-bd7b-4c57-9901-0ae4d1e8b896"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915615138375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 502, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0xce4724 /127.0.0.1:3230<->/127.0.0.1:53040], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.043Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.044Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915613882166, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 534, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x76e19221 /127.0.0.1:3230<->/127.0.0.1:53034], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[>o> inspector?leihs.procurement.graphql$handler  0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {{}, :result :scheme true}:http, :request-method 
:post, :accept >myprint>  inspector true
{:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
2023-12-06T15:28:56.046Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
2023-12-06T15:28:56.046Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.046Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.046Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? {:result false}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.047Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.047Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.049Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.049Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.050Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.051Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
pure-handler >> 2
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.051Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
2023-12-06T15:28:56.051Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>oo> vars from graphQL-Requst nil nil nil {}
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>>1 #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
2023-12-06T15:28:56.055Z NX-41294 DEBUG [leihs.procurement.resources.user:75] - id => #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
pure-handler >> 2
2023-12-06T15:28:56.056Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>2 {:id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
2023-12-06T15:28:56.056Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>>>3 nil
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915613707375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 3575, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7a1b024 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 3575, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.060Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.060Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x16e8a40a leihs.core.locale$wrap$fn__44346@16e8a40a]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915642614375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 615, referer http://localhost:3230/procure/templates/edit, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x15b50884 /127.0.0.1:3230<->/127.0.0.1:53041], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.064Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>myprint>  admin false
2023-12-06T15:28:56.066Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.066Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.066Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>myprint>  inspector true
2023-12-06T15:28:56.067Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.067Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.068Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
2023-12-06T15:28:56.068Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.068Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.069Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.070Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
2023-12-06T15:28:56.071Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.071Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.071Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-06T15:28:56.072Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.073Z NX-41294 DEBUG [leihs.procurement.permissions.user:163] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> requester?? {:exists false}

> 1 anti-csrf-token >  c2f6fbc2-6fff-4dbb-bda5-0ed87b104710

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915615138375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 502, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0xce4724 /127.0.0.1:3230<->/127.0.0.1:53040], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
pure-handler >> 2
2023-12-06T15:28:56.079Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-06T15:28:55.114964Z","id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","user_session_id":"636dcede-e3fa-41a2-a2b5-51423ec96ec6","scope_system_admin_read":false,"access-rights":[],"user_id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710"},"leihs-user-session":{"value":"8ab2a959-b37a-44b4-bfc1-005e6370eebf"}},"remote-addr":"127.0.0.1","start-time":99915615138375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko\/20100101 Firefox\/115.0","content-type":"application\/json","cookie":"leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf","content-length":"502","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","x-csrf-token":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","accept":"application\/json","accept-language":"de,en-US;q=0.7,en;q=0.3","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}


>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 844dd3af-2e7f-46fa-a417-dfaca502a01a] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id 2b862d46-bd7b-4c57-9901-0ae4d1e8b896] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915613882166, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 534, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x76e19221 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-06T15:28:56.083Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"844dd3af-2e7f-46fa-a417-dfaca502a01a\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "844dd3af-2e7f-46fa-a417-dfaca502a01a"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "2b862d46-bd7b-4c57-9901-0ae4d1e8b896"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-06T15:28:55.114964Z","id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","user_session_id":"636dcede-e3fa-41a2-a2b5-51423ec96ec6","scope_system_admin_read":false,"access-rights":[],"user_id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710"},"leihs-user-session":{"value":"8ab2a959-b37a-44b4-bfc1-005e6370eebf"}},"remote-addr":"127.0.0.1","start-time":99915613882166,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko\/20100101 Firefox\/115.0","content-type":"application\/json","cookie":"leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf","content-length":"534","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","x-csrf-token":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","accept":"application\/json","accept-language":"de,en-US;q=0.7,en;q=0.3","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}


>request-grapql _> result => {:data #ordered/map ([:budget_periods []] [:main_categories [#ordered/map ([:id 120ec62d-5afb-40c7-9c81-721813c352da] [:name Geisha] [:categories [#ordered/map ([:id 2b862d46-bd7b-4c57-9901-0ae4d1e8b896] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations []])}
2023-12-06T15:28:56.084Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods []] [:main_categories [#ordered/map ([:id "120ec62d-5afb-40c7-9c81-721813c352da"] [:name "Geisha"] [:categories [#ordered/map ([:id "2b862d46-bd7b-4c57-9901-0ae4d1e8b896"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations []])}
>oo> templates::get-templates2 _> HERE value contains :id??) #uuid "2b862d46-bd7b-4c57-9901-0ae4d1e8b896" {:id #uuid "2b862d46-bd7b-4c57-9901-0ae4d1e8b896", :name Ennarea, :main_category_id #uuid "120ec62d-5afb-40c7-9c81-721813c352da", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>oo> templates::get-templates1a ?broken-base-query? {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [nil]}
>oo> templates::get-templates1b ?broken-base-query? [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id ORDER BY NULL ASC]
>oo> templates::get-templates1 [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY NULL ASC #uuid "2b862d46-bd7b-4c57-9901-0ae4d1e8b896"]
pure-handler >> 2
2023-12-06T15:28:56.086Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>e> #error {
 :cause ERROR: non-integer constant in ORDER BY
  Position: 190
 :via
 [{:type org.postgresql.util.PSQLException
   :message ERROR: non-integer constant in ORDER BY
  Position: 190
   :at [org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]}]
 :trace
 [[org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]
  [org.postgresql.core.v3.QueryExecutorImpl processResults QueryExecutorImpl.java 2268]
  [org.postgresql.core.v3.QueryExecutorImpl execute QueryExecutorImpl.java 313]
  [org.postgresql.jdbc.PgStatement executeInternal PgStatement.java 448]
  [org.postgresql.jdbc.PgStatement execute PgStatement.java 369]
  [org.postgresql.jdbc.PgPreparedStatement executeWithFlags PgPreparedStatement.java 159]
  [org.postgresql.jdbc.PgPreparedStatement execute PgPreparedStatement.java 148]
  [com.zaxxer.hikari.pool.ProxyPreparedStatement execute ProxyPreparedStatement.java 44]
  [com.zaxxer.hikari.pool.HikariProxyPreparedStatement execute HikariProxyPreparedStatement.java -1]
  [next.jdbc.result_set$stmt__GT_result_set invokeStatic result_set.clj 669]
  [next.jdbc.result_set$stmt__GT_result_set invoke result_set.clj 664]
  [next.jdbc.result_set$eval11841$fn__11849 invoke result_set.clj 944]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc.default_options$eval11019$fn__11024 invoke default_options.clj 31]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc$execute_BANG_ invokeStatic jdbc.clj 251]
  [next.jdbc$execute_BANG_ invoke jdbc.clj 238]
  [leihs.procurement.resources.templates$get_templates invokeStatic templates.clj 47]
  [leihs.procurement.resources.templates$get_templates invoke templates.clj 34]
  [leihs.procurement.graphql.resolver$wrap_resolver_with_error$fn__44466 invoke resolver.clj 16]
  [com.walmartlabs.lacinia.schema$wrap_resolver_to_ensure_resolver_result$fn__14023 invoke schema.clj 986]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invokeStatic executor.clj 86]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invoke executor.clj 68]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$execute_nested_selections$fn__17481 invoke executor.clj 197]
  [com.walmartlabs.lacinia.internal_utils$keepv$fn__12187 invoke internal_utils.clj 46]
  [clojure.core.protocols$iter_reduce invokeStatic protocols.clj 49]
  [clojure.core.protocols$fn__8170 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8170 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.internal_utils$keepv invokeStatic internal_utils.clj 45]
  [com.walmartlabs.lacinia.internal_utils$keepv invoke internal_utils.clj 41]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invokeStatic executor.clj 197]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invoke executor.clj 190]
  [com.walmartlabs.lacinia.executor$resolve_and_select$selector_callback__17497 invoke executor.clj 262]
  [com.walmartlabs.lacinia.schema$floor_selector invokeStatic schema.clj 994]
  [com.walmartlabs.lacinia.schema$floor_selector invoke schema.clj 992]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_unwrap_tagged_type__14049 invoke schema.clj 1156]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_apply_static_type__14051 invoke schema.clj 1163]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_require_single_value__14053 invoke schema.clj 1171]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_bypass_if_nil__14055 invoke schema.clj 1178]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$unwrapper__14064 invoke schema.clj 1223]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$fn__14066 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed$fn__12209 invoke internal_utils.clj 122]
  [clojure.core$mapv$fn__8468 invoke core.clj 6914]
  [clojure.lang.PersistentVector reduce PersistentVector.java 343]
  [clojure.core$reduce invokeStatic core.clj 6829]
  [clojure.core$mapv invokeStatic core.clj 6905]
  [clojure.core$mapv invoke core.clj 6905]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invokeStatic internal_utils.clj 121]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invoke internal_utils.clj 118]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.executor$resolve_and_select$process_resolved_value__17502 invoke executor.clj 297]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 343]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$execute_nested_selections$fn__17481 invoke executor.clj 197]
  [com.walmartlabs.lacinia.internal_utils$keepv$fn__12187 invoke internal_utils.clj 46]
  [clojure.core.protocols$iter_reduce invokeStatic protocols.clj 49]
  [clojure.core.protocols$fn__8170 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8170 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.internal_utils$keepv invokeStatic internal_utils.clj 45]
  [com.walmartlabs.lacinia.internal_utils$keepv invoke internal_utils.clj 41]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invokeStatic executor.clj 197]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invoke executor.clj 190]
  [com.walmartlabs.lacinia.executor$resolve_and_select$selector_callback__17497 invoke executor.clj 262]
  [com.walmartlabs.lacinia.schema$floor_selector invokeStatic schema.clj 994]
  [com.walmartlabs.lacinia.schema$floor_selector invoke schema.clj 992]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_unwrap_tagged_type__14049 invoke schema.clj 1156]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_apply_static_type__14051 invoke schema.clj 1163]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_require_single_value__14053 invoke schema.clj 1171]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_bypass_if_nil__14055 invoke schema.clj 1178]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$unwrapper__14064 invoke schema.clj 1223]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$fn__14066 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed$fn__12209 invoke internal_utils.clj 122]
  [clojure.core$mapv$fn__8468 invoke core.clj 6914]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$mapv invokeStatic core.clj 6905]
  [clojure.core$mapv invoke core.clj 6905]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invokeStatic internal_utils.clj 121]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invoke internal_utils.clj 118]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.executor$resolve_and_select$process_resolved_value__17502 invoke executor.clj 297]
  [com.walmartlabs.lacinia.executor$resolve_and_select$unwrap_resolver_result__17505$receive_resolved_value_from_field__17506 invoke executor.clj 324]
  [com.walmartlabs.lacinia.resolve.ResolverResultImpl on_deliver_BANG_ resolve.clj 135]
  [com.walmartlabs.lacinia.executor$resolve_and_select$unwrap_resolver_result__17505 invoke executor.clj 322]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$execute_nested_selections$fn__17481 invoke executor.clj 197]
  [com.walmartlabs.lacinia.internal_utils$keepv$fn__12187 invoke internal_utils.clj 46]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.internal_utils$keepv invokeStatic internal_utils.clj 45]
  [com.walmartlabs.lacinia.internal_utils$keepv invoke internal_utils.clj 41]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invokeStatic executor.clj 197]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invoke executor.clj 190]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17519 invoke executor.clj 400]
  [clojure.lang.AFn applyToHelper AFn.java 152]
  [clojure.lang.AFn applyTo AFn.java 144]
  [clojure.core$apply invokeStatic core.clj 667]
  [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1977]
  [clojure.core$with_bindings_STAR_ doInvoke core.clj 1977]
  [clojure.lang.RestFn invoke RestFn.java 425]
  [clojure.lang.AFn applyToHelper AFn.java 156]
  [clojure.lang.RestFn applyTo RestFn.java 132]
  [clojure.core$apply invokeStatic core.clj 671]
  [clojure.core$bound_fn_STAR_$fn__5767 doInvoke core.clj 2007]
  [clojure.lang.RestFn invoke RestFn.java 397]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17524 invoke executor.clj 421]
  [clojure.core$binding_conveyor_fn$fn__5772 invoke core.clj 2034]
  [clojure.lang.AFn call AFn.java 18]
  [java.util.concurrent.FutureTask run FutureTask.java 264]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1128]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 628]
  [java.lang.Thread run Thread.java 829]]}
>>>get-dashboard
>>args {}
>>value nil
2023-12-06T15:28:56.099Z NX-41294 WARN [leihs.procurement.graphql.resolver:326] - ERROR: non-integer constant in ORDER BY
  Position: 190
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
2023-12-06T15:28:56.100Z NX-41294 DEBUG [leihs.procurement.graphql.resolver:326] - #error {
 :cause ERROR: non-integer constant in ORDER BY
  Position: 190
 :via
 [{:type org.postgresql.util.PSQLException
   :message ERROR: non-integer constant in ORDER BY
  Position: 190
   :at [org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]}]
 :trace
 [[org.postgresql.core.v3.QueryExecutorImpl receiveErrorResponse QueryExecutorImpl.java 2533]
  [org.postgresql.core.v3.QueryExecutorImpl processResults QueryExecutorImpl.java 2268]
  [org.postgresql.core.v3.QueryExecutorImpl execute QueryExecutorImpl.java 313]
  [org.postgresql.jdbc.PgStatement executeInternal PgStatement.java 448]
  [org.postgresql.jdbc.PgStatement execute PgStatement.java 369]
  [org.postgresql.jdbc.PgPreparedStatement executeWithFlags PgPreparedStatement.java 159]
  [org.postgresql.jdbc.PgPreparedStatement execute PgPreparedStatement.java 148]
  [com.zaxxer.hikari.pool.ProxyPreparedStatement execute ProxyPreparedStatement.java 44]
  [com.zaxxer.hikari.pool.HikariProxyPreparedStatement execute HikariProxyPreparedStatement.java -1]
  [next.jdbc.result_set$stmt__GT_result_set invokeStatic result_set.clj 669]
  [next.jdbc.result_set$stmt__GT_result_set invoke result_set.clj 664]
  [next.jdbc.result_set$eval11841$fn__11849 invoke result_set.clj 944]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc.default_options$eval11019$fn__11024 invoke default_options.clj 31]
  [next.jdbc.protocols$eval10723$fn__10754$G__10714__10763 invoke protocols.clj 34]
  [next.jdbc$execute_BANG_ invokeStatic jdbc.clj 251]
  [next.jdbc$execute_BANG_ invoke jdbc.clj 238]
  [leihs.procurement.resources.templates$get_templates invokeStatic templates.clj 47]
  [leihs.procurement.resources.templates$get_templates invoke templates.clj 34]
  [leihs.procurement.graphql.resolver$wrap_resolver_with_error$fn__44466 invoke resolver.clj 16]
  [com.walmartlabs.lacinia.schema$wrap_resolver_to_ensure_resolver_result$fn__14023 invoke schema.clj 986]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invokeStatic executor.clj 86]
  [com.walmartlabs.lacinia.executor$invoke_resolver_for_field invoke executor.clj 68]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$execute_nested_selections$fn__17481 invoke executor.clj 197]
  [com.walmartlabs.lacinia.internal_utils$keepv$fn__12187 invoke internal_utils.clj 46]
  [clojure.core.protocols$iter_reduce invokeStatic protocols.clj 49]
  [clojure.core.protocols$fn__8170 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8170 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.internal_utils$keepv invokeStatic internal_utils.clj 45]
  [com.walmartlabs.lacinia.internal_utils$keepv invoke internal_utils.clj 41]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invokeStatic executor.clj 197]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invoke executor.clj 190]
  [com.walmartlabs.lacinia.executor$resolve_and_select$selector_callback__17497 invoke executor.clj 262]
  [com.walmartlabs.lacinia.schema$floor_selector invokeStatic schema.clj 994]
  [com.walmartlabs.lacinia.schema$floor_selector invoke schema.clj 992]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_unwrap_tagged_type__14049 invoke schema.clj 1156]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_apply_static_type__14051 invoke schema.clj 1163]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_require_single_value__14053 invoke schema.clj 1171]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_bypass_if_nil__14055 invoke schema.clj 1178]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$unwrapper__14064 invoke schema.clj 1223]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$fn__14066 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed$fn__12209 invoke internal_utils.clj 122]
  [clojure.core$mapv$fn__8468 invoke core.clj 6914]
  [clojure.lang.PersistentVector reduce PersistentVector.java 343]
  [clojure.core$reduce invokeStatic core.clj 6829]
  [clojure.core$mapv invokeStatic core.clj 6905]
  [clojure.core$mapv invoke core.clj 6905]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invokeStatic internal_utils.clj 121]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invoke internal_utils.clj 118]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.executor$resolve_and_select$process_resolved_value__17502 invoke executor.clj 297]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 343]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$execute_nested_selections$fn__17481 invoke executor.clj 197]
  [com.walmartlabs.lacinia.internal_utils$keepv$fn__12187 invoke internal_utils.clj 46]
  [clojure.core.protocols$iter_reduce invokeStatic protocols.clj 49]
  [clojure.core.protocols$fn__8170 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8170 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.internal_utils$keepv invokeStatic internal_utils.clj 45]
  [com.walmartlabs.lacinia.internal_utils$keepv invoke internal_utils.clj 41]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invokeStatic executor.clj 197]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invoke executor.clj 190]
  [com.walmartlabs.lacinia.executor$resolve_and_select$selector_callback__17497 invoke executor.clj 262]
  [com.walmartlabs.lacinia.schema$floor_selector invokeStatic schema.clj 994]
  [com.walmartlabs.lacinia.schema$floor_selector invoke schema.clj 992]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_unwrap_tagged_type__14049 invoke schema.clj 1156]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_apply_static_type__14051 invoke schema.clj 1163]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_require_single_value__14053 invoke schema.clj 1171]
  [com.walmartlabs.lacinia.schema$create_root_selector$select_bypass_if_nil__14055 invoke schema.clj 1178]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$unwrapper__14064 invoke schema.clj 1223]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063$fn__14066 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed$fn__12209 invoke internal_utils.clj 122]
  [clojure.core$mapv$fn__8468 invoke core.clj 6914]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$mapv invokeStatic core.clj 6905]
  [clojure.core$mapv invoke core.clj 6905]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invokeStatic internal_utils.clj 121]
  [com.walmartlabs.lacinia.internal_utils$fast_map_indexed invoke internal_utils.clj 118]
  [com.walmartlabs.lacinia.schema$assemble_selector$select_list__14063 invoke schema.clj 1231]
  [com.walmartlabs.lacinia.executor$resolve_and_select$process_resolved_value__17502 invoke executor.clj 297]
  [com.walmartlabs.lacinia.executor$resolve_and_select$unwrap_resolver_result__17505$receive_resolved_value_from_field__17506 invoke executor.clj 324]
  [com.walmartlabs.lacinia.resolve.ResolverResultImpl on_deliver_BANG_ resolve.clj 135]
  [com.walmartlabs.lacinia.executor$resolve_and_select$unwrap_resolver_result__17505 invoke executor.clj 322]
  [com.walmartlabs.lacinia.executor$resolve_and_select invokeStatic executor.clj 353]
  [com.walmartlabs.lacinia.executor$resolve_and_select invoke executor.clj 234]
  [com.walmartlabs.lacinia.executor$apply_field_selection invokeStatic executor.clj 140]
  [com.walmartlabs.lacinia.executor$apply_field_selection invoke executor.clj 135]
  [com.walmartlabs.lacinia.executor$apply_selection invokeStatic executor.clj 173]
  [com.walmartlabs.lacinia.executor$apply_selection invoke executor.clj 165]
  [com.walmartlabs.lacinia.executor$execute_nested_selections$fn__17481 invoke executor.clj 197]
  [com.walmartlabs.lacinia.internal_utils$keepv$fn__12187 invoke internal_utils.clj 46]
  [clojure.lang.ArrayChunk reduce ArrayChunk.java 58]
  [clojure.core.protocols$fn__8176 invokeStatic protocols.clj 136]
  [clojure.core.protocols$fn__8176 invoke protocols.clj 124]
  [clojure.core.protocols$fn__8136$G__8131__8145 invoke protocols.clj 19]
  [clojure.core.protocols$seq_reduce invokeStatic protocols.clj 31]
  [clojure.core.protocols$fn__8168 invokeStatic protocols.clj 75]
  [clojure.core.protocols$fn__8168 invoke protocols.clj 75]
  [clojure.core.protocols$fn__8110$G__8105__8123 invoke protocols.clj 13]
  [clojure.core$reduce invokeStatic core.clj 6830]
  [clojure.core$reduce invoke core.clj 6812]
  [com.walmartlabs.lacinia.internal_utils$keepv invokeStatic internal_utils.clj 45]
  [com.walmartlabs.lacinia.internal_utils$keepv invoke internal_utils.clj 41]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invokeStatic executor.clj 197]
  [com.walmartlabs.lacinia.executor$execute_nested_selections invoke executor.clj 190]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17519 invoke executor.clj 400]
  [clojure.lang.AFn applyToHelper AFn.java 152]
  [clojure.lang.AFn applyTo AFn.java 144]
  [clojure.core$apply invokeStatic core.clj 667]
  [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1977]
  [clojure.core$with_bindings_STAR_ doInvoke core.clj 1977]
  [clojure.lang.RestFn invoke RestFn.java 425]
  [clojure.lang.AFn applyToHelper AFn.java 156]
  [clojure.lang.RestFn applyTo RestFn.java 132]
  [clojure.core$apply invokeStatic core.clj 671]
  [clojure.core$bound_fn_STAR_$fn__5767 doInvoke core.clj 2007]
  [clojure.lang.RestFn invoke RestFn.java 397]
  [com.walmartlabs.lacinia.executor$execute_query$fn__17524 invoke executor.clj 421]
  [clojure.core$binding_conveyor_fn$fn__5772 invoke core.clj 2034]
  [clojure.lang.AFn call AFn.java 18]
  [java.util.concurrent.FutureTask run FutureTask.java 264]
  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1128]
  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 628]
  [java.lang.Thread run Thread.java 829]]}
>>ToCheck mainCats [{:id #uuid "120ec62d-5afb-40c7-9c81-721813c352da", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods ORDER BY end_date DESC]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []

>request-grapql _> request {:leihs-user-language >>requestsB2-triggerError{ :name English (UK){, }:locale  en-GBnil, 
:default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915642614375, :params >o> helper1 id={ }nil, 
:settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable >o> helper2 nil nil#object[ nilcom.zaxxer.hikari.HikariDataSource
 >oo> helper3a priority nil
0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn >oo> helper3b priority#object[ next.jdbc.result_set$as_unqualified_lower_mapsnil 
0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4>oo> helper4a inspector-priority] }nil}
, :query-params-raw {}, >oo> helper4b inspector-priority :route-paramsnil 
nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 615, referer http://localhost:3230/procure/templates/edit, connection keep-alive, >o> helper5x-csrf-token
 c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, >oo> helper5a :order_statusaccept  nilapplication/json
, accept-language de,en-US;q=0.7,en;q=0.3>oo> helper5b :order_status,  sec-fetch-destnil 
empty, accept-encoding >oo> helper5c :order_statusgzip, deflate, br , nilsec-fetch-mode
 cors>oo> order-status} , nil
:async-channel >o> helper6
#object[org.httpkit.server.AsyncChannel 0x15b50884 /127.0.0.1:3230<->/127.0.0.1:53041], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-06T15:28:55.114964Z","id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","user_session_id":"636dcede-e3fa-41a2-a2b5-51423ec96ec6","scope_system_admin_read":false,"access-rights":[],"user_id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710"},"leihs-user-session":{"value":"8ab2a959-b37a-44b4-bfc1-005e6370eebf"}},"remote-addr":"127.0.0.1","start-time":99915642614375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko\/20100101 Firefox\/115.0","content-type":"application\/json","cookie":"leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf","content-length":"615","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","x-csrf-token":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","accept":"application\/json","accept-language":"de,en-US;q=0.7,en;q=0.3","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors"},"server-port":3230,"params-raw":{},"content-length":615,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"adminTemplates","variables":{},"query":"query adminTemplates {\n  main_categories {\n    id\n    name\n    image_url\n    categories {\n      id\n      name\n      templates {\n        id\n        article_name\n        article_number\n        model {\n          id\n          product\n          version\n          __typename\n        }\n        requests_count\n        is_archived\n        price_cents\n        price_currency\n        supplier_name\n        supplier {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}


>request-grapql _> result => {:data #ordered/map ([:main_categories [#ordered/map ([:id 120ec62d-5afb-40c7-9c81-721813c352da] [:name Geisha] [:image_url nil] [:categories [#ordered/map ([:id2023-12-06T15:28:56.103Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
 2b862d46-bd7b-4c57-9901-0ae4d1e8b896] [:name Ennarea] [:templates nil] [:__typename :Category])]] [:__typename :MainCategory])]]), :errors ({:message ERROR: non-integer constant in ORDER BY
  Position: 190, :locations [{:line 9, :column 7}], :path [:main_categories 0 :categories 0 :templates], :extensions {:exception PSQLException}})}
2023-12-06T15:28:56.103Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:main_categories [#ordered/map ([:id "120ec62d-5afb-40c7-9c81-721813c352da"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "2b862d46-bd7b-4c57-9901-0ae4d1e8b896"] [:name "Ennarea"] [:templates nil] [:__typename :Category])]] [:__typename :MainCategory])]]), :errors ({:message "ERROR: non-integer constant in ORDER BY\n  Position: 190", :locations [{:line 9, :column 7}], :path [:main_categories 0 :categories 0 :templates], :extensions {:exception "PSQLException"}})}
>o> viewer? {:result false}
2023-12-06T15:28:56.103Z NX-41294 DEBUG [leihs.procurement.graphql:87] - {:data #ordered/map ([:main_categories [#ordered/map ([:id "120ec62d-5afb-40c7-9c81-721813c352da"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "2b862d46-bd7b-4c57-9901-0ae4d1e8b896"] [:name "Ennarea"] [:templates nil] [:__typename :Category])]] [:__typename :MainCategory])]]), :errors ({:message "ERROR: non-integer constant in ORDER BY\n  Position: 190", :locations [{:line 9, :column 7}], :path [:main_categories 0 :categories 0 :templates], :extensions {:exception "PSQLException"}})}

>o> ERROR 4pure-handler, result=> {:data #ordered/map ([:main_categories [#ordered/map ([:id 120ec62d-5afb-40c7-9c81-721813c352da] [:name Geisha] [:image_url nil] [:categories [#ordered/map ([:id 2b862d46-bd7b-4c57-9901-0ae4d1e8b896] [:name Ennarea] [:templates nil] [:__typename :Category])]] [:__typename :MainCategory])]]), :errors ({:message ERROR: non-integer constant in ORDER BY
  Position: 190, :locations [{:line 9, :column 7}], :path [:main_categories 0 :categories 0 :templates], :extensions {:exception PSQLException}})}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.103Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.104Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
2023-12-06T15:28:56.105Z NX-41294 DEBUG [leihs.procurement.permissions.user:172] - (->> [viewer? inspector? admin?] (map (fn* [p1__39288#] (p1__39288# tx auth-entity))) (some true?)) => true
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-06T15:28:56.106Z NX-41294 DEBUG [leihs.procurement.resources.request:180] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 nil nil nil
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> apply-scope #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.108Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.120Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
2023-12-06T15:28:56.121Z NX-41294 DEBUG [leihs.procurement.permissions.requests:25] - sqlmap => {:select [[[:raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*"]] [[[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category"]] [[[:row_to_json :models]] :model] [[:raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization"]] [[[:row_to_json :procurement_templates]] :template] [[:raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room"]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [[[:raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.128Z NX-41294 DEBUG [leihs.procurement.permissions.user:56] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
2023-12-06T15:28:56.128Z NX-41294 DEBUG [leihs.procurement.permissions.user:32] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a"]
>o> admin? {:exists false}
2023-12-06T15:28:56.129Z NX-41294 DEBUG [leihs.procurement.permissions.user:172] - (->> [viewer? inspector? admin?] (map (fn* [p1__39288#] (p1__39288# tx auth-entity))) (some true?)) => true
>o> >o> HERE :row-fn ()
>o>dashboard-cache-keyB2 {:id -15128758}
2023-12-06T15:28:56.157Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-06T15:28:56.157Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -15128758

>request-http _>  dashboard::determine-budget-periods/result () 

2023-12-06T15:28:56.158Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-06T15:28:55.114964Z", :id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :user_session_id #uuid "636dcede-e3fa-41a2-a2b5-51423ec96ec6", :scope_system_admin_read false, :access-rights (), :user_id #uuid "844dd3af-2e7f-46fa-a417-dfaca502a01a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value c2f6fbc2-6fff-4dbb-bda5-0ed87b104710}, leihs-user-session {:value 8ab2a959-b37a-44b4-bfc1-005e6370eebf}}, :remote-addr 127.0.0.1, :start-time 99915613707375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x322534d4 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x5c03a1b4 next.jdbc.result_set$as_unqualified_lower_maps@5c03a1b4]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf, content-length 3575, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token c2f6fbc2-6fff-4dbb-bda5-0ed87b104710, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7a1b024 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x69dfba60 HikariDataSource (db-pool)]}, :content-length 3575, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x6b2311f5 leihs.procurement.graphql$handler@6b2311f5], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-06T15:28:55.114964Z","id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","user_session_id":"636dcede-e3fa-41a2-a2b5-51423ec96ec6","scope_system_admin_read":false,"access-rights":[],"user_id":"844dd3af-2e7f-46fa-a417-dfaca502a01a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710"},"leihs-user-session":{"value":"8ab2a959-b37a-44b4-bfc1-005e6370eebf"}},"remote-addr":"127.0.0.1","start-time":99915613707375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko\/20100101 Firefox\/115.0","content-type":"application\/json","cookie":"leihs-anti-csrf-token=c2f6fbc2-6fff-4dbb-bda5-0ed87b104710; leihs-user-session=8ab2a959-b37a-44b4-bfc1-005e6370eebf","content-length":"3575","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","x-csrf-token":"c2f6fbc2-6fff-4dbb-bda5-0ed87b104710","accept":"application\/json","accept-language":"de,en-US;q=0.7,en;q=0.3","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors"},"server-port":3230,"params-raw":{},"content-length":3575,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}


>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -15128758] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-06T15:28:56.160Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-15128758"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}

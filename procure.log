# java_leihs-procure-server env check via asdf v0.13.1
# java_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_java_leihs-procure-server to force update
# clojure_leihs-procure-server env check via asdf v0.13.1
# clojure_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_clojure_leihs-procure-server to force update
Warning: environ value /Users/mradl/.asdf/installs/java/zulu-11.60.19 for key :java-home has been overwritten with /Users/mradl/.asdf/installs/java/zulu-11.60.19/zulu-11.jdk/Contents/Home
>oo >tocheck users3
>oo >tocheck users3
>o> conc concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))
2023-12-11T12:11:46.224Z NX-41294 DEBUG [leihs.procurement.resources.request:209] - (-> (sql/select [[:raw (str "DISTINCT ON (procurement_requests.id, " conc ") procurement_requests.*")]]) (sql/from :procurement_requests) (sql/left-join :models [:= :models.id :procurement_requests.model_id]) (sql/order-by :procurement_requests.id [[:raw conc]])) => {:select [[[:raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*"]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"]]]}
>o> templates::templates-base-query ERROR?
2023-12-11T12:11:46.284Z NX-41294 DEBUG [leihs.procurement.resources.templates:27] - (-> (sql/select :procurement_templates.*) (sql/from :procurement_templates) (sql/left-join :models [:= :models.id :procurement_templates.model_id]) (sql/order-by [[:concat (->> [:procurement_templates.article_name :models.product :models.version] (map (fn* [p1__44555#] (->> [:lower [:coalesce p1__44555# ""]]))))]])) => {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [[[:concat ([:lower [:coalesce :procurement_templates.article_name ""]] [:lower [:coalesce :models.product ""]] [:lower [:coalesce :models.version ""]])]]]}
2023-12-11T12:11:46.531Z NX-41294 WARN [leihs.core.release:13] - Failed to read releases.yml, returning bogus value 
2023-12-11T12:11:47.070Z NX-41294 INFO [leihs.core.logging:37] - initializing logging  {:min-level [[#{"leihs.procurement" "leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :log-level nil}
2023-12-11T12:11:47.073Z NX-41294 INFO [leihs.core.logging:39] - initialized logging  {:min-level [[#{"leihs.procurement" "leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :ns-filter #{"*"}, :middleware [], :timestamp-opts {:pattern :iso8601, :locale :jvm-default, :timezone :utc}, :output-fn #object[taoensso.timbre$default_output_fn 0x51a31187 "taoensso.timbre$default_output_fn@51a31187"], :appenders {:println {:enabled? true, :fn #object[taoensso.timbre.appenders.core$println_appender$fn__3459 0x26064342 "taoensso.timbre.appenders.core$println_appender$fn__3459@26064342"]}}, :_init-config {:loaded-from-source :default, :compile-time-config {:min-level nil, :ns-pattern "*"}}, :log-level nil}
2023-12-11T12:11:47.074Z NX-41294 INFO [leihs.procurement.main:50] - main ("--dev-mode" "true" "--repl" "true" "run")
2023-12-11T12:11:47.086Z NX-41294 INFO [leihs.core.repl:62] - init {:dev-mode true, :repl true, :repl-bind "localhost", :repl-port 13748, :repl-port-file ".nrepl-port"}
2023-12-11T12:11:47.088Z NX-41294 INFO [leihs.core.repl:70] - starting nREPL server  13748 localhost
2023-12-11T12:11:47.106Z NX-41294 INFO [leihs.core.repl:75] - started nREPL server 
2023-12-11T12:11:47.109Z NX-41294 INFO [leihs.procurement.run:326] - Invoking run with options:  {:db-host localhost, :db-max-pool-size 16, :db-min-pool-size 2, :db-name leihs_test, :db-password leihs, :db-port 5415, :db-user leihs, :dev-mode true, :http-host localhost, :http-max-threads 8, :http-min-threads 1, :http-port 3230, :http-queue-capacity 640, :http-thread-keep-alive-seconds 10, :http-worker-prefix leihs-service-http-worker-, :pid-file nil, :repl true, :repl-bind localhost, :repl-port 13748, :repl-port-file .nrepl-port}
2023-12-11T12:11:47.110Z NX-41294 INFO [leihs.core.shutdown:20] - PID 15509
2023-12-11T12:11:47.121Z NX-41294 INFO [leihs.core.shutdown:29] - Registering SIGTERM handler for shutdown.
2023-12-11T12:11:47.179Z NX-41294 INFO [leihs.core.graphql:17] - Initialized graphQL schema.
2023-12-11T12:11:47.180Z NX-41294 INFO [leihs.core.db:220] - Initializing db  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-11T12:11:47.186Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:80] - db-pool - Starting...
2023-12-11T12:11:47.251Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - db-pool - Added connection org.postgresql.jdbc.PgConnection@7e114146
2023-12-11T12:11:47.256Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:82] - db-pool - Start completed.
2023-12-11T12:11:47.257Z NX-41294 INFO [leihs.core.db:222] - Initialized db  {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T12:11:47.258Z NX-41294 INFO [leihs.core.db:223] - Initializing ds-next  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-11T12:11:47.270Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2023-12-11T12:11:47.278Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@51355836
2023-12-11T12:11:47.279Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2023-12-11T12:11:47.284Z NX-41294 INFO [leihs.core.db:225] - Initialized ds-next  #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T12:11:47.291Z NX-41294 INFO [leihs.core.http-server:101] - starting http-server  {:port 3230, :ip "localhost", :pool {:queue #object[java.util.concurrent.ArrayBlockingQueue 0x2241737b "[]"], :pool #object[java.util.concurrent.ThreadPoolExecutor 0x7a151257 "java.util.concurrent.ThreadPoolExecutor@7a151257[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]"]}}
2023-12-11T12:11:47.302Z NX-41294 INFO [leihs.core.http-server:104] - started http-server 
2023-12-11T12:38:23.342Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - db-pool - Thread starvation or clock leap detected (housekeeper delta=16m35s887ms).
2023-12-11T12:38:23.383Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m35s882ms).
2023-12-11T12:45:03.899Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m40s515ms).
2023-12-11T12:45:03.898Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - db-pool - Thread starvation or clock leap detected (housekeeper delta=6m40s559ms).
2023-12-11T12:55:18.933Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - db-pool - Thread starvation or clock leap detected (housekeeper delta=8m14s998ms).
2023-12-11T12:55:18.941Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m14s997ms).
2023-12-11T12:58:59.434Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m10s458ms).
2023-12-11T12:58:59.433Z NX-41294 WARN [com.zaxxer.hikari.pool.HikariPool:804] - db-pool - Thread starvation or clock leap detected (housekeeper delta=2m10s456ms).
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at >>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", #time/instant "2023-12-11T09:40:32.291787Z", :id:id  #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70":user_session_id,  :user_session_id#uuid "52ab0127-d271-40fb-9aa6-e6327a59b362" , :scope_system_admin_read#uuid "52ab0127-d271-40fb-9aa6-e6327a59b362" , false, :scope_system_admin_read :access-rightsfalse , :access-rights ()(, ), :user_id :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", , :is_system_admin:is_system_admin  falsefalse, , :external_sign_out_url:external_sign_out_url  nilnil, , :language_locale:language_locale  nilnil, , :inventory_pool_roles_count:inventory_pool_roles_count  00, , :scope_admin_read:scope_admin_read  falsefalse}}


>> authorize >

>> authorize >

>> authorize::handler > 
>> authorize::handler > #object[#object[leihs.core.locale$wrap$fn__44858leihs.core.locale$wrap$fn__44858  0x1038c5e0 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0leihs.core.locale$wrap$fn__44858@1038c5e0]]


>> authorize::request > 
>> authorize::request >{ {:authenticated-entity :authenticated-entity{ :email amelia@rosenbaum.name, :contracts_count {0, :lastname :emailKemmer , amelia@rosenbaum.name:org_id,  :contracts_countnil , :scope_read 0true, , :lastname:is_admin  false, :authentication-method Kemmer:session, , :org_id:login  nilnil, , :scope_system_admin_write :scope_readfalse , true:scope_write,  :is_admintrue , false:firstname,  :authentication-methodDawna , :session:scope_admin_write,  :loginfalse , nil:user_session_created_at,  :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write#time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id  #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_readfalse , false, :user_session_created_at:access-rights  (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url #time/instant "2023-12-11T09:40:32.291787Z"nil, , :id:language_locale  nil, :inventory_pool_roles_count#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70" , 0:user_session_id,  :scope_admin_read#uuid "52ab0127-d271-40fb-9aa6-e6327a59b362" , false:scope_system_admin_read} , false, :cookies :access-rights {(leihs-anti-csrf-token) , :user_id {#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70":value,  :is_system_admindc7e186c-6046-4dce-9a37-5d14ea14e0e1 }false, , leihs-user-session:external_sign_out_url  nil, {:language_locale:value  nilec09a61e-81a5-4995-98ae-f9159a1a35e8, }}:inventory_pool_roles_count,  :remote-addr0 , 127.0.0.1:scope_admin_read,  false:start-time} , :cookies11214997558750 , :params {{leihs-anti-csrf-token} , :settings {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value {ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :email_sending_enabled :remote-addrfalse,  :sessions_max_lifetime_secs127.0.0.1 , :start-time 11215069776375, 432000:params,  :smtp_default_from_address{ }your.lending.desk@example.com, , :settings:public_image_caching_enabled  true, {:sessions_force_secure :email_sending_enabledfalse , false:deliver_received_order_notifications,  :sessions_max_lifetime_secsfalse , 432000:external_base_url,  :smtp_default_from_addressnil , your.lending.desk@example.com, :sessions_force_uniqueness :public_image_caching_enabledfalse , true:email_signature,  :sessions_force_secureCheers, }false, , :deliver_received_order_notifications:tx-next  false, :external_base_url #nilnext.jdbc.default_options.DefaultOptions, :sessions_force_uniqueness false, {:email_signature Cheers,}, :tx-next :connectable# next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource#object[ com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn0x4ee63b99  HikariDataSource (HikariPool-1)], #object[next.jdbc.result_set$as_unqualified_lower_maps:options  {:builder-fn0x35555daa  next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, #object[next.jdbc.result_set$as_unqualified_lower_maps:query-params-raw  {}, :route-params 0x35555daa nil, next.jdbc.result_set$as_unqualified_lower_maps@35555daa]:headers} }, {:query-params-raw origin {http://localhost:3230}, , sec-fetch-site :route-paramssame-origin , nil, sec-ch-ua-mobile :headers ?0, host localhost:3230, user-agent {Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, origincontent-type  http://localhost:3230application/json, , sec-fetch-sitecookie  same-originleihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, , sec-ch-ua-mobilecontent-length  ?04138, , hostsec-ch-ua  localhost:3230"Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", , user-agentsec-ch-ua-platform  Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"macOS", , content-typereferer  application/jsonhttp://localhost:3230/procure/requests, , cookieconnection  leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8keep-alive, , content-lengthpragma  4137no-cache, , sec-ch-uax-csrf-token  "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24"dc7e186c-6046-4dce-9a37-5d14ea14e0e1, , sec-ch-ua-platformaccept  "macOS"application/json, , refereraccept-language  http://localhost:3230/procure/requestsde-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, , connectionsec-fetch-dest  keep-aliveempty, , pragma no-cache, x-csrf-tokenaccept-encoding  dc7e186c-6046-4dce-9a37-5d14ea14e0e1gzip, deflate, br, , acceptsec-fetch-mode  application/jsoncors, , accept-languagecache-control  de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7no-cache, }, sec-fetch-dest :async-channelempty , accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1cbdf8fb /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, #object[:queryorg.httpkit.server.AsyncChannel  query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema 0x3c35be0e 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4137, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}#CompiledSchema<>, , :character-encoding :handlerutf8 , :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName>>> authenticate::skip=  RequestsIndexFiltered, nil:variables   handler-key= {:graphql:inspector_priority 
>>> authenticate::authenticated-entity [{LOW :emailMEDIUM  amelia@rosenbaum.nameHIGH,  :contracts_countMANDATORY ], 0:onlyOwnRequests,  :lastnamefalse , Kemmer:state, :org_id [ NEWnil , APPROVED:scope_read  PARTIALLY_APPROVEDtrue , DENIED], :is_admin:order_status  false, [:authentication-method NOT_PROCESSED:session , IN_PROGRESS:login  PROCUREDnil , ALTERNATIVE_PROCURED:scope_system_admin_write  NOT_PROCUREDfalse], , :scope_write :search trueab, :organizations , [:firstname9465c0d7-fda6-4a28-8482-f19047127964  Dawna, ade586cb-80d8-4c93-9a34-042eaa426bd5 :scope_admin_write 32d74dbf-9308-42fc-b66b-9889c2af2c73false , 6fa6a22f-c444-4083-af19-7bb720d050ae:user_session_created_at] , :categories [], :priority [NORMAL HIGH], :budgetPeriods #time/instant "2023-12-11T09:40:32.291787Z"[, aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e:id  186cccc7-7b33-489f-b76e-4e7c97db22e4]}, #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70":query,  :user_session_id query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
#uuid "52ab0127-d271-40fb-9aa6-e6327a59b362"}, , :scope_system_admin_read :graphql-schemafalse , :access-rights#CompiledSchema<> , :handler (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11214889089750, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 4136, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x499c9038 0.0.0.0/0.0.0.0:3230<->null], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4136, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search a, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler #object[leihs.procurement.graphql$handler 0x3f343f5e 0x3f343f5e leihs.procurement.graphql$handler@3f343f5eleihs.procurement.graphql$handler@3f343f5e]], , :multipart-params:multipart-params  {}, {:scheme} , :http:scheme,  :request-method:http , :post:request-method,  :accept:post , :accept {:mime{ :json, :mime :charset :json, nil:charset,  :encodingnil , nil, :encoding :languagenil , nil:language} }nil}
}

>> authorize::handler-key >> :graphql

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count >myprint> 0 , authEnt?:lastname  Kemmer, :org_id {nil, :email:scope_read  amelia@rosenbaum.nametrue, , :contracts_count:is_admin  false, 0:authentication-method,  :lastname:session , Kemmer:login,  :org_idnil , nil:scope_system_admin_write,  :scope_readfalse , true:scope_write,  :is_admin true, false, :firstname :authentication-method Dawna:session, , :scope_admin_write:login  falsenil#object[, leihs.procurement.graphql$handler:user_session_created_at  , :scope_system_admin_write false, :scope_write true, #time/instant "2023-12-11T09:40:32.291787Z":firstname,  0x3f343f5e :idDawnaleihs.procurement.graphql$handler@3f343f5e , ]:scope_admin_write#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", , :multipart-params :user_session_id{ }, #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362" :scheme,  false:scope_system_admin_read:http , :request-method :post, :accept false{, :mime, :access-rights  :user_session_created_at:json , ():charset,  :user_idnil , :encoding nil, #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70":language,  :is_system_adminnil }#time/instant "2023-12-11T09:40:32.291787Z"false}, 
:external_sign_out_url nil, :language_locale,  
>> authorize::handler-key >>:idnil  , :graphql
:inventory_pool_roles_count>myprint> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70" , authEnt? {:user_session_id :email #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362" amelia@rosenbaum.name, , 0:scope_system_admin_read:contracts_count,  :scope_admin_read false}
0, :lastname Kemmer, :org_id  >myprint> nil false, txn, :scope_read  :access-rightstrue# , next.jdbc.default_options.DefaultOptions:is_admin false({, ):authentication-method,  :connectable:user_id:session , #object[com.zaxxer.hikari.HikariDataSource :login nil, :scope_system_admin_write 0x4ee63b99 false , HikariDataSource (HikariPool-1):scope_write] , #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"true:options, ,  :is_system_admin:firstname  false{, Dawna:builder-fn:external_sign_out_url  nil, :language_locale nil, :inventory_pool_roles_count 0, , #object[:scope_admin_writenext.jdbc.result_set$as_unqualified_lower_maps:scope_admin_read  0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
false}
 >myprint>  falsetxn,  :user_session_created_at# next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id 0x4ee63b99 HikariDataSource (HikariPool-1)], #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362":options,  :scope_system_admin_read false, {:access-rights :builder-fn (#object[)next.jdbc.result_set$as_unqualified_lower_maps,  :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", 0x35555daa :is_system_admin next.jdbc.result_set$as_unqualified_lower_maps@35555daafalse], }:external_sign_out_url} 
nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.589Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.589Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.590Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? >o> admin? >o> admin?{ :exists {{false}
:exists:exists  false}
>myprint>  admin false
>myprint>  admin false
false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.606Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.606Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.606Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> inspector? {:result true}
>myprint>  inspector true
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? >o> viewer?[ SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result >o> viewer? #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]][

SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.627Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.627Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.627Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer?>o> viewer?  {{:result:result  falsefalse}}

>myprint>  viewer false
>myprint>  viewer false
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) >o> requester?? >o> requester?? [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))] 
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
]
2023-12-11T12:59:48.647Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.647Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.647Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? >o> requester??{ :exists {true:exists} 
true>myprint>  requester true
>o> requester?? {:exists true}
>myprint>  requester true
}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) >o> admin? #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"][
SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.662Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.662Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.662Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {>o> admin? :exists false{}
:exists false}
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.662Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.663Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.663Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]>o> inspector?
 {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.663Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.663Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.663Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? >o> viewer? {:result {false:result} false
}
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.664Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.664Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.664Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>o> requester?? {:exists true}
>o> requester?? {:exists true}

> 1 anti-csrf-token > 
> 1 anti-csrf-token >   dc7e186c-6046-4dce-9a37-5d14ea14e0e1dc7e186c-6046-4dce-9a37-5d14ea14e0e1
> 1 anti-csrf-token > 
 dc7e186c-6046-4dce-9a37-5d14ea14e0e1


> 1 anti-csrf-token class >  
> 1 anti-csrf-token class >  
> 1 anti-csrf-token class >  java.lang.Stringjava.lang.Stringjava.lang.String


> 2 anti-csrf-token-new >  nil
> 2 anti-csrf-token-new > 
 
nil
> 2 anti-csrf-token-new >  
nil
pure-handler >> 2
pure-handler >> 2
pure-handler >> 2
2023-12-11T12:59:48.709Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "a", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
2023-12-11T12:59:48.710Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "abc", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search a, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
2023-12-11T12:59:48.709Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "ab", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search ab, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
>>>get-dashboard>>>get-dashboard
>>>get-dashboard
>>args 
>>args>>args  {{{:inspector_priority:inspector_priority:inspector_priority   [[[:LOW:LOW  :MEDIUM :HIGH :MANDATORY], :MEDIUM :organization_id :HIGH [:MANDATORY]9465c0d7-fda6-4a28-8482-f19047127964,  :organization_idade586cb-80d8-4c93-9a34-042eaa426bd5  32d74dbf-9308-42fc-b66b-9889c2af2c73 [6fa6a22f-c444-4083-af19-7bb720d050ae]9465c0d7-fda6-4a28-8482-f19047127964:LOW,   :requested_by_auth_userade586cb-80d8-4c93-9a34-042eaa426bd5  32d74dbf-9308-42fc-b66b-9889c2af2c73:MEDIUM false6fa6a22f-c444-4083-af19-7bb720d050ae, :state [:NEW :APPROVED ]:PARTIALLY_APPROVED,   :requested_by_auth_user:DENIED ]:HIGH, false:order_status, :state [:NEW :APPROVED :PARTIALLY_APPROVED  :DENIED[],  :NOT_PROCESSED:order_status :MANDATORY ]:IN_PROGRESS[, :NOT_PROCESSED:organization_id  :IN_PROGRESS :PROCURED [:ALTERNATIVE_PROCURED 9465c0d7-fda6-4a28-8482-f19047127964:NOT_PROCURED ]ade586cb-80d8-4c93-9a34-042eaa426bd5,  :search 32d74dbf-9308-42fc-b66b-9889c2af2c73ab , 6fa6a22f-c444-4083-af19-7bb720d050ae:priority ] , :PROCURED[ :requested_by_auth_user:ALTERNATIVE_PROCURED:NORMAL   :HIGH:NOT_PROCUREDfalse]], , :search a, :priority [:NORMAL :HIGH], :budget_period_id :budget_period_id[ aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e, [ :stateaaff8b99-a0c0-4e41-88f4-75ed40f9bd3e186cccc7-7b33-489f-b76e-4e7c97db22e4  ], 186cccc7-7b33-489f-b76e-4e7c97db22e4]:category_id[,  :NEW:category_id [ :APPROVED][} 
]>>value :PARTIALLY_APPROVEDnil :DENIED]
, }
>>value nil
:order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats >>ToCheck mainCats[>>ToCheck mainCats [{{ :id:id  [#uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"#uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", , {:name:name:id  #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]Geisha
}] Geisha}]

>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search ab, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] >>ToCheck dashboard:::procurement_budget_periods.id[ aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4][ ]
[>>resultA1-2 9465c0d7-fda6-4a28-8482-f19047127964[ ]
ade586cb-80d8-4c93-9a34-042eaa426bd5>>requestsB2-triggerError  32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
{:inspector_priority>oo> helper3a priority  [[:LOW:NORMAL  :MEDIUM:HIGH ]:HIGH
 :MANDATORY>oo> helper3b priority] , :organization_id ([9465c0d7-fda6-4a28-8482-f19047127964 >debug> 1a
ade586cb-80d8-4c93-9a34-042eaa426bd5 >debug> 1a
32d74dbf-9308-42fc-b66b-9889c2af2c73normal high)
>oo> helper4a inspector-priority  nil
6fa6a22f-c444-4083-af19-7bb720d050ae>oo> helper4b inspector-priority (>debug> 1a
]>debug> 1a
>debug> 1a
, >debug> 1a
:requested_by_auth_userlow  falsemedium,  :statehigh  mandatory)[
>o> helper5
>oo> helper5a :order_status :NEW[ :NOT_PROCESSED:APPROVED  :IN_PROGRESS:PARTIALLY_APPROVED  :PROCURED:DENIED ]:ALTERNATIVE_PROCURED,  :order_status:NOT_PROCURED ]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
[:NOT_PROCESSED :IN_PROGRESS >debug> 1a:PROCURED
 not_processed in_progress procured :ALTERNATIVE_PROCUREDalternative_procured  :NOT_PROCUREDnot_procured]), 
>oo> helper5c :order_status :searchjava.lang.String 
>o> viewer? >oo> order-status [(SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result not_processed in_progress procured#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70" ]alternative_procured
 a, :priority [:NORMAL :HIGH], not_procured:budget_period_id) 
[>o> helper6
aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>o> viewer?>oo> helper4b inspector-priority  [(SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result >debug> 1a
>debug> 1a
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70">debug> 1a]

>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
2023-12-11T12:59:48.811Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.811Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.812Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> viewer? {:result false}
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.812Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.813Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.813Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {>o> inspector? {:result :result truetrue}
}
>o> inspector? {:result true}
>o> admin?>o> admin?  [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.814Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.814Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.814Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> admin? >o> helper7{ true:exists
 false}
>o> helper7 true
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b>debug> 9b

>debug> 9b
>o> requests-base-query-with-state
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 >o> s-map  {>o> s-map  {:NEW :NEW [[:=:=  :procurement_requests.approved_quantity:procurement_requests.approved_quantity  nilnil]], , :APPROVED:APPROVED  [[:>=:>=  :procurement_requests.approved_quantity:procurement_requests.approved_quantity  :procurement_requests.requested_quantity:procurement_requests.requested_quantity]], , :PARTIALLY_APPROVED:PARTIALLY_APPROVED  [[:and :and [[:< :< :procurement_requests.approved_quantity:procurement_requests.approved_quantity  :procurement_requests.requested_quantity:procurement_requests.requested_quantity]]  [[:> :>:procurement_requests.approved_quantity  :procurement_requests.approved_quantity 00]]]], , :DENIED:DENIED  [[:= := :procurement_requests.approved_quantity:procurement_requests.approved_quantity  00]]}}

>o>map-4 >o>map-4 (((>o> map NEW
>o> map NEW
>o> map [>o> map:=  NEW:procurement_requests.approved_quantity
 >o> map>o> map  [[:=:=  :procurement_requests.approved_quantity:procurement_requests.approved_quantity  nilnil]]
nil
:case :case ]>o> map NEW

:case >o> map NEW
[:= :procurement_requests.approved_quantity>o> map  nilNEW[
:= :procurement_requests.approved_quantity nil]][ :=  :procurement_requests.approved_quantity>o> map  >o> mapnil APPROVEDAPPROVED

>o> map >o> map[ :>= :procurement_requests.approved_quantity[ :procurement_requests.requested_quantity:>=] :procurement_requests.approved_quantity
 NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map []:and  [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map[ :> APPROVED:procurement_requests.approved_quantity 
:procurement_requests.requested_quantity]>o> map
 [NEW:>=  :procurement_requests.approved_quantity :procurement_requests.requested_quantity>o> map] 
APPROVEDNEW 0>o> map ]APPROVED]


APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity][:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity  0]]
>o> mapAPPROVED  PARTIALLY_APPROVED
>o> map>o> map [:and  PARTIALLY_APPROVED[
:<[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map>o> map  DENIEDPARTIALLY_APPROVED 

:procurement_requests.approved_quantity[:and [:< :procurement_requests.approved_quantity  :procurement_requests.requested_quantity:procurement_requests.requested_quantity] [:>]  :procurement_requests.approved_quantity 0>o> map] ] [:=[>o> map :>  :procurement_requests.approved_quantity:procurement_requests.approved_quantityDENIED 
0>o> map]  ][
0APPROVED ]>o> map PARTIALLY_APPROVED

PARTIALLY_APPROVED :=>o> map DENIED
 [:= :procurement_requests.approved_quantity[ :and :procurement_requests.approved_quantity0[]:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity]  [:> DENIED:procurement_requests.approved_quantity) 
 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
>o>map-5 [:= (:procurement_requests.approved_quantity :case 0] [DENIED:=) 
>o>map-5:procurement_requests.approved_quantity  (:casenil ] NEW>o>map-5  (:case [:>=[ :=:procurement_requests.approved_quantity  :procurement_requests.approved_quantity:procurement_requests.requested_quantity ][nil ]:=APPROVED  NEW [:>= :procurement_requests.approved_quantity [:procurement_requests.requested_quantity:and]   :procurement_requests.approved_quantity[APPROVED :<  nil:procurement_requests.approved_quantity[ :and [:procurement_requests.requested_quantity:<]  :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [][:> :>  NEW:procurement_requests.approved_quantity:procurement_requests.approved_quantity   0[0]:>=] ]:procurement_requests.approved_quantity  PARTIALLY_APPROVED :procurement_requests.requested_quantity[]:=  APPROVED:procurement_requests.approved_quantity  0[]:and  DENIED)[
:<] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED )
:procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T12:59:48.817Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
2023-12-11T12:59:48.817Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by>o> join-and-nest-associated-resources  [:procurement_requests.id {:select[ [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]][], :join[ :raw [DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*:procurement_budget_periods] ] [[:= :procurement_budget_periods.id :procurement_requests.budget_period_id[]]}
[2023-12-11T12:59:48.817Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [>o> join-and-nest-associated-resources:>  :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED {[:select := :procurement_requests.approved_quantity [0][ DENIED)[]:raw]  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*:state]]]] , :from [[[:procurement_requests], [:left-join ([:case :models [[:=:=  :procurement_requests.approved_quantity:models.id  nil:procurement_requests.model_id]] ]NEW,  :order-by [>o>:>=[  :procurement_requests.idjoin-and-nest-budget-periods 
[[:raw :procurement_requests.approved_quantityconcat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ]:procurement_requests.requested_quantity]]] , APPROVED:join  [[:and :procurement_budget_periods [[:< := :procurement_requests.approved_quantity :procurement_budget_periods.id :procurement_requests.requested_quantity:procurement_requests.budget_period_id]] ]}
[:> :procurement_requests.approved_quantity>o>  join-and-nest-budget-periods
0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id >o> sqlmap[ [:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], {:join :select [[:procurement_budget_periods [[[:= :raw:procurement_budget_periods.id  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*:procurement_requests.budget_period_id]]]] }[
[>o> join-and-nest-budget-periods
[>o> sqlmap ({:case :select [[:= [:procurement_requests.approved_quantity [nil:raw]  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]NEW]  [[:>= [:procurement_requests.approved_quantity [:procurement_requests.requested_quantity] (APPROVED :case [[:and:=  :procurement_requests.approved_quantity [nil]:<  NEW:procurement_requests.approved_quantity  :procurement_requests.requested_quantity] [:>=[ :>:procurement_requests.approved_quantity  :procurement_requests.approved_quantity:procurement_requests.requested_quantity ] 0APPROVED] ] [PARTIALLY_APPROVED :and [[:=:<  :procurement_requests.approved_quantity:procurement_requests.approved_quantity  0:procurement_requests.requested_quantity]]  DENIED[):>] ]:procurement_requests.approved_quantity  :state]0]], ] :from PARTIALLY_APPROVED [[:procurement_requests]:=,  :left-join:procurement_requests.approved_quantity  0][ :modelsDENIED )][]:=  :state:models.id] ]:procurement_requests.model_id, ]:from] , :order-by [[:procurement_requests:procurement_requests.id] , [:left-join [[:raw:models  concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))[]:=] ]:models.id,  :join:procurement_requests.model_id ]], [>o> sqlmap:order-by:procurement_budget_periods  {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[:= [:procurement_budget_periods.id :procurement_requests.budget_period_id(]]:case} 
[ >o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
:=[ :procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
:procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> join-and-nest-categories
>o> sqlmap {:select >o> [join-and-nest-categories
>o> sqlmap {:select [[[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>=[ >o> sqlmap:procurement_requests.approved_quantity  :raw{:procurement_requests.requested_quantity ]:select  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*[APPROVED[][] :raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]]  [[:and [[[:< :procurement_requests.approved_quantity ([:procurement_requests.requested_quantity:case][ [(:case [:= :procurement_requests.approved_quantity nil] [NEW:>  :procurement_requests.approved_quantity [:>= 0:procurement_requests.approved_quantity] ]:procurement_requests.requested_quantity ] PARTIALLY_APPROVED APPROVED [[:= :and:procurement_requests.approved_quantity  0[]:<  DENIED:procurement_requests.approved_quantity) ]] :state] [:procurement_requests.requested_quantity][  [[:row_to_json :> :procurement_budget_periods_2]:procurement_requests.approved_quantity]  :budget_period0]] ] [PARTIALLY_APPROVED[ [[:=:=:raw   :procurement_requests.approved_quantityrow_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category ]:procurement_requests.approved_quantity0 ] DENIED)]] :state] ]][, [:from [:row_to_json[ :procurement_requests:procurement_budget_periods_2]], ]:left-joinnil ] [:budget_period:models]   [[:= NEW:models.id  [:procurement_requests.model_id:raw] ], row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category:order-by] ]], :from [[[:procurement_requests.id:procurement_requests ], [:left-join:>=[ :raw [ :modelsconcat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ][]:=:procurement_requests.approved_quantity]  , :models.id :join:procurement_requests.model_id ]][, :procurement_budget_periods:order-by  [[:= :procurement_requests.id:procurement_budget_periods.id  [:procurement_requests.budget_period_id][ :raw [concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join{ :select [[:procurement_budget_periods :*[:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past] ], :from[ :procurement_requests.requested_quantity[]:>  :current_date :end_date] APPROVED:is_past ]], :from [[[:and:procurement_budget_periods:procurement_budget_periods ]]} }[:procurement_budget_periods_2 ]:<  [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories :procurement_requests.approved_quantity:procurement_budget_periods_2 ]:procurement_requests.requested_quantity ] [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories[ := :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [[[:= :>:procurement_categories.id  :procurement_requests.approved_quantity:procurement_requests.category_id 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models ][:= := :procurement_main_categories:models.id   :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_main_categories.id:procurement_requests.budget_period_id ] :procurement_categories.main_category_id[]]}
>o> tbl[ := :models:procurement_main_categories.id
 >o> nest-key :model
{:select [:* [[:> :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
:current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> join-and-nest-templates
>o> join-and-nest-templates
>o> sqlmap>o> sqlmap  {{:select:select  [[[[:raw [DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*][]:raw  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]][ [[[[([:case>o> sqlmap ([:case:=  :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [[:=:=  :procurement_requests.approved_quantity:procurement_requests.approved_quantity  0] DENIED)]]  :statenil]]  [NEW [[[:>= :row_to_json:procurement_requests.approved_quantity  :procurement_budget_periods_2:procurement_requests.requested_quantity]]]  APPROVED:budget_period ] [[{:and[ :raw[ :< row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category:procurement_requests.approved_quantity] ]:procurement_requests.requested_quantity ]:select[ [ [[:>:row_to_json  :procurement_requests.approved_quantity:models ]]0 ][]:model ] PARTIALLY_APPROVED [[:=[ :raw :procurement_requests.approved_quantityrow_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization[]]], :from  0[]:procurement_requests ], DENIED:left-join) ]][ :models:state ] [[:= :models.id :procurement_requests.model_id[[][], :order-by:row_to_json  :procurement_budget_periods_2[]:procurement_requests.id]  [:budget_period][ :raw [concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))][]], :raw:join  row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category[:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] []{]:select  [[[:* [:row_to_json[ :models[]:>]  :model] [[:raw :current_daterow_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization ]:end_date]]], :from [ :procurement_requests:is_past]], ]:left-join, :raw :from[  [:models :procurement_budget_periods]} [:procurement_budget_periods_2] := DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*[:models.id:=]  :procurement_requests.model_id:procurement_budget_periods_2.id] ]:procurement_requests.budget_period_id, ] :order-by:procurement_categories  [[:procurement_requests.id := [:procurement_categories.id]  :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id[ :procurement_categories.main_category_id:raw]  concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))):procurement_organizations][][][ , :join ([[:procurement_budget_periods:=  [:procurement_organizations.id:case  :procurement_requests.organization_id] [:= :procurement_organizations:procurement_budget_periods.id  :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date]:procurement_departments ]:is_past [[:=:=] ], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id:procurement_departments.id  :procurement_requests.category_id]:procurement_organizations.parent_id ]:procurement_main_categories []:=}  
:procurement_main_categories.id:procurement_requests.approved_quantity >o> tbl :procurement_templates
:procurement_categories.main_category_id>o> nest-key :template]
  nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED :procurement_organizations[ :and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity [0]] PARTIALLY_APPROVED :=[ := :procurement_organizations.id:procurement_requests.approved_quantity  :procurement_requests.organization_id0]]  DENIED)][]:procurement_organizations  :state:procurement_departments]]  [[:=[ [:procurement_departments.id:row_to_json  :procurement_organizations.parent_id:procurement_budget_periods_2]]]]} :budget_period]
 >o> tbl :procurement_templates
>o> nest-key :template
[[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [>o> sqlmap[ [(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED {[:select:and  [[:<[ [:procurement_requests.approved_quantity :raw:procurement_requests.requested_quantity ]>o> sqlmap  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*[]:>{ ]:select  [:procurement_requests.approved_quantity[ [0[]] [PARTIALLY_APPROVED[ :raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*[](]:=  :procurement_requests.approved_quantity [0:case][ [ DENIED)[](]:=:case  :procurement_requests.approved_quantity nil]  [NEW:state ] [:=[ :>=:procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity[ :procurement_requests.requested_quantity][  :row_to_jsonAPPROVED :procurement_requests.approved_quantity  :procurement_budget_periods_2[]:procurement_requests.requested_quantity:and] ]  :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [APPROVED[[ :<[ [:procurement_requests.approved_quantity:row_to_json  :and:procurement_requests.requested_quantity:models ]][ ]:< [ :>:model:procurement_requests.approved_quantity ]  :procurement_requests.approved_quantity:procurement_requests.requested_quantity[ ][ :raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[[:>:row_to_json  :procurement_requests.approved_quantity :procurement_templates0]]]] 0 ]PARTIALLY_APPROVED [:=]  :procurement_requests.approved_quantityPARTIALLY_APPROVED  0] [:templateDENIED]:= ) ][:procurement_requests.approved_quantity][ :raw:state ]row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room ][[[:row_to_json :procurement_budget_periods_2]] :budget_period]] ], [ :from[ 0:raw[]:procurement_requests ], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [DENIED:=) ]:procurement_templates.id]  :procurement_requests.template_id:state] ][), [:order-by [:row_to_json :procurement_budget_periods_2]] [:budget_period]  :procurement_requests.id [[row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category[:raw] [concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))):raw] row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] ][], [:join[]  [:procurement_budget_periods [:= :procurement_budget_periods.id :row_to_json:procurement_requests.budget_period_id ][ :procurement_templates]][[ :template] [[{:row_to_json:select[  :raw[ :modelsrow_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room:*]]]] ] , [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:=:from  :model:procurement_budget_periods_2.id]  [:procurement_requests.budget_period_id:procurement_requests][] [, :raw:procurement_categories :left-joinrow_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization ] ][ :=( [:procurement_categories.id :procurement_requests.category_id][ :models:procurement_main_categories[ :row_to_json  :procurement_templates[][]:= := :template:models.id]  :procurement_requests.model_id] :procurement_templates [[[:= :raw  :procurement_main_categories.id:procurement_templates.idrow_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room ]:procurement_categories.main_category_id]], :from [:procurement_requests], :left-join]  :procurement_organizations(  :models[ :procurement_requests.template_id:=[]:=  :procurement_organizations.id :procurement_requests.organization_id] [:models.id:procurement_organizations  :procurement_requests.model_id):procurement_departments],  ]:order-by :procurement_templates  [[[:= :procurement_requests.id:procurement_departments.id  [:procurement_organizations.parent_id] [:rooms :raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))][]]:=,  :join:rooms.id  :=:procurement_requests.room_id ][:procurement_templates.id :procurement_budget_periods :buildings :procurement_requests.template_id ][)[, :=:order-by  [:procurement_requests.id :procurement_budget_periods.id[:=  [:procurement_requests.budget_period_id:buildings.id]  :rooms.building_id]]}
>o> tbl:raw  concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]]:suppliers, 
[>o> nest-key :supplier
:join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id{] :select [[:*{ :select [[[:* :> :current_date [:end_date] :is_past[]]:>,  :from:current_date  :end_date][ :procurement_budget_periods:is_past>o>] ]join-and-nest-users
, :from ][}:procurement_budget_periods ]}:procurement_budget_periods_2 ] :procurement_budget_periods_2] [[:= := :procurement_budget_periods_2.id :procurement_budget_periods_2.id :procurement_requests.budget_period_id]:procurement_requests.budget_period_id ] :procurement_categories :procurement_categories [[:= := :procurement_categories.id :procurement_categories.id >o> sqlmap:procurement_requests.category_id:procurement_requests.category_id]] :procurement_main_categories [:= :procurement_main_categories.id  :procurement_categories.main_category_id]:procurement_main_categories  :procurement_organizations [ := [:procurement_organizations.id {:procurement_requests.organization_id:=]:select   [[:procurement_main_categories.id [:procurement_organizations:procurement_categories.main_category_id[]:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*] ] :procurement_organizations :procurement_departments [] [[[:=:= [ :procurement_organizations.id:procurement_departments.id(  :case:procurement_organizations.parent_id:procurement_requests.organization_id]]   :rooms[ [:=[ :procurement_organizations:=:procurement_requests.approved_quantity   :procurement_departmentsnil:rooms.id] ] :procurement_requests.room_idNEW]   :buildings [[[:=:>=:=  :procurement_requests.approved_quantity:buildings.id :rooms.building_id]]}
>o> tbl  :procurement_requests.requested_quantity]:suppliers 
>o> nest-key :supplier
 :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings APPROVED[ := :buildings.id :rooms.building_id]]>o>} [join-and-nest-users
:and
 >o> sqlmap[ {:select :<[ :procurement_requests.approved_quantity[ :procurement_requests.requested_quantity[]:raw  DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*[]:>]  :procurement_requests.approved_quantity [>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[0[]] PARTIALLY_APPROVED [(:= :case :procurement_requests.approved_quantity[[ 0:=[ (:case [:= :procurement_requests.approved_quantity nil] NEW :procurement_requests.approved_quantity[ :>= nil]:procurement_requests.approved_quantity  ]:procurement_requests.requested_quantityNEW ] DENIED )]]APPROVED  [:state[]:>=:and   [[:<:procurement_requests.approved_quantity[  :procurement_requests.approved_quantity[ :procurement_requests.requested_quantity:row_to_json:procurement_requests.requested_quantity ]:procurement_budget_periods_2 APPROVED ][]:and  ]:budget_period ][ [:<[:>  [:procurement_requests.approved_quantity:raw:procurement_requests.approved_quantity   0row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]:procurement_requests.requested_quantity]]]   PARTIALLY_APPROVED[ [[[:>:=[  :row_to_json:procurement_requests.approved_quantity :procurement_requests.approved_quantity :models 0]]]  DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [:model[][ :row_to_json [:procurement_templates][] 0:template:raw] ]row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]  ]PARTIALLY_APPROVED  [[[[:= [:raw:procurement_requests.approved_quantity  row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] 0[] DENIED)]] :state][ [:row_to_json[ [:suppliers[:row_to_json][ ]:procurement_templates:row_to_json]  ]:procurement_budget_periods_2 ]:supplier]:template ]:budget_period [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join ]( :models ][][, [:from:=:raw   row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category[]:models.id:procurement_requests]  ]:procurement_requests.model_id, []:left-join [ :procurement_templates [(:row_to_json[ := :procurement_templates.id :procurement_requests.template_id] :models:models:suppliers] ] :model] [[[:= :raw  row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization:suppliers.id] ][ :procurement_requests.supplier_id]:=[ ):models.id[ , [:procurement_requests.model_id]:order-by:row_to_json  [:procurement_templates:procurement_requests.id]  ]:procurement_templates  :template[][ := [[:procurement_templates.id :raw[:procurement_requests.template_id ]:rawconcat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))  ]row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room:suppliers] ]] []:=,  :join :suppliers.id[ :procurement_budget_periods :procurement_requests.supplier_id[]:= :procurement_budget_periods.id) [, :procurement_requests.budget_period_id]:order-by  [[[[:procurement_requests.id:row_to_json  :suppliers]] [:supplier]], {[:from :select:raw[  :procurement_requestsconcat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]], ][:left-join] :*,  :join( [:models[ :procurement_budget_periods [[[:>:=  :current_date :models.id:= :end_date:procurement_requests.model_id ]]:procurement_budget_periods.id   :procurement_templates:is_past :procurement_requests.budget_period_id]][ :=] [:procurement_templates.id,  :from:procurement_requests.template_id{]  :select :suppliers [[[:procurement_budget_periods:*:=  [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :suppliers.id:procurement_requests.budget_period_id ]] :procurement_requests.supplier_id:procurement_categories}  [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_budget_periods_2:procurement_categories.main_category_id]]  ]:procurement_organizations[ ):=[ :=,  :procurement_budget_periods_2.id:order-by :procurement_organizations.id:procurement_requests.budget_period_id  :procurement_requests.organization_id]]  [:procurement_categories :procurement_requests.id[[ :procurement_organizations :procurement_departments][ [[:raw :=:=concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))  ]:procurement_departments.id]:procurement_categories.id  :procurement_organizations.parent_id:procurement_requests.category_id]]]  :procurement_main_categories:rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl  :users
[, :=>o> nest-key:join   :user:procurement_main_categories.id
 [:procurement_budget_periods >o> helper8
[>oo> helper8 :procurement_categories.main_category_id] (:procurement_organizations :=not_processed  [in_progress:procurement_budget_periods.id  :=procured:procurement_requests.budget_period_id ]alternative_procured not_procured) (low medium high mandatory) (normal high)
 [>oo> helper9  {{:procurement_organizations.id:select:select  [:* [[:> :current_date :end_date] :is_past][], [:from[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*] ] [ [:procurement_budget_periods:procurement_requests.organization_id]][ [(:case [:= :procurement_requests.approved_quantity nil] }NEW  :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [[:>= := :procurement_requests.approved_quantity[:procurement_organizations.id :procurement_organizations :procurement_requests.requested_quantity :procurement_requests.organization_id]]  APPROVED :procurement_departments[] [:procurement_organizations :and[ := :procurement_departments.id :procurement_organizations.parent_id] :rooms :procurement_departments[[] :=:< [ :rooms.id:=  :procurement_requests.approved_quantity:procurement_departments.id:procurement_requests.room_id ]:procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [ :=:buildings  :buildings.id :rooms.building_id[]:= :buildings.id :rooms.building_id]]]}} 

:procurement_requests.requested_quantity]>o> tbl  :users
[:> :procurement_requests.approved_quantity >o> nest-key 0>o> tbl] ] PARTIALLY_APPROVED:users 
[:= :procurement_requests.approved_quantity :user>o> nest-key0 
] DENIED)]] :state] >o> helper8[
>oo> helper8 :user(not_processed
 [[:row_to_json :procurement_budget_periods_2]] :budget_period] [in_progress [:rawprocured  alternative_procuredrow_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category ]not_procured]) >o> helper8 
[>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [[:and[ :row_to_json :models][]:<  (:model:procurement_requests.approved_quantity]low   medium[ :procurement_requests.requested_quantityhigh[ ]mandatory:raw)  row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization(normal high)
 >oo> helper9 [{:> :select :procurement_requests.approved_quantity ][0]] [] [[PARTIALLY_APPROVED :raw[ DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*][[]:=  [[[(:case :procurement_requests.approved_quantity[ := :procurement_requests.approved_quantity nil] NEW0 ] [DENIED):>=]:row_to_json  :procurement_requests.approved_quantity:procurement_templates]] :template]  [:procurement_requests.requested_quantity][ :raw APPROVEDrow_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room ]] [[[:row_to_json :suppliers]] [:supplier]:and  ][ [[:state:<]  [:procurement_requests.approved_quantity [:procurement_requests.requested_quantity] [[:row_to_json [:row_to_json:>:users ]:procurement_requests.approved_quantity] :user]], :from [:procurement_requests], :left-join (:models [ := 0:models.id] ]:procurement_requests.model_id] :procurement_templates  [PARTIALLY_APPROVED:=  :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id[ :=:procurement_requests.supplier_id ]:procurement_requests.approved_quantity  :users0 ] [DENIED):=] ]  :users.id :procurement_budget_periods_2:procurement_requests.user_id]] :budget_period]] ):state, ] :order-by[ [[[[:raw:procurement_requests.id[ :row_to_json[[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [ {:procurement_budget_periods_2]:select  row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [:*[ [[[[:row_to_json :> :procurement_templates:current_date] ]:end_date ]:template ] [[:is_past]:raw] ]row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room :budget_period]] ],  :from [[[:procurement_budget_periods]}[[ :procurement_budget_periods_2[]:row_to_json  :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join [:= (:procurement_budget_periods_2.id :procurement_requests.budget_period_id:models] [:=  :models.id:procurement_categories  :procurement_requests.model_id[:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories ][ := :procurement_templates:procurement_main_categories.id  :procurement_categories.main_category_id][ :=:procurement_organizations  :procurement_templates.id :procurement_requests.template_id] :suppliers :raw[ := row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]:suppliers.id[ ]:procurement_requests.supplier_id:=]  :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] :users[ :=  :procurement_departments.id[ :=:procurement_organizations.parent_id ][:users.id  [:procurement_requests.user_id:rooms] )[, [:row_to_json:=:order-by   :rooms.id[ :models:procurement_requests.room_id]:procurement_requests.id] [[:raw  concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]:model]] ]],  [:join:buildings  [[[:raw:=:procurement_budget_periods  :buildings.id[:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date  :rooms.building_id:end_date]]] }:is_past]], :from [:procurement_budget_periods
] >o>> where [:in :procurement_requests.id [:cast id :uuid]])row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]  [nil[
} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>debug> 2
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query a
>oo> search-query ab
>oo> search-query abc
>o> requests::search-query %abc%
>o> requests::search-query %a%
>o> requests::search-query %ab%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector?>o> admin?  [{SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result :exists false}
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result 2023-12-11T12:59:48.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> inspector? {:result true}
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, >o> abc:user_session_created_at  [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a%]
>debug> 23d
>o> HERE query-requests, auth-entity >debug> 23d{
#time/instant "2023-12-11T09:40:32.291787Z", :id >o> HERE query-requests, auth-entity #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"{, :user_session_id :email amelia@rosenbaum.name, #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362":contracts_count,  :scope_system_admin_read 0, false, :lastname:access-rights  Kemmer, :org_id nil, :scope_read (true), , :is_admin :user_id false, :authentication-method :session, :login nil, #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70":scope_system_admin_write,  false, :is_system_admin :scope_write false, true, :external_sign_out_url :firstname nil, Dawna, :language_locale :scope_admin_writenil , false, :inventory_pool_roles_count :user_session_created_at 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 #time/instant "2023-12-11T09:40:32.291787Z"ade586cb-80d8-4c93-9a34-042eaa426bd5,  :id32d74dbf-9308-42fc-b66b-9889c2af2c73  6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"mandatory,  :user_session_id 0 0 not_processed#uuid "52ab0127-d271-40fb-9aa6-e6327a59b362" , in_progress :scope_system_admin_read procured false, alternative_procured :access-rights not_procured %abc% %abc% %abc% (%abc%) , %abc% :user_id %abc% %abc% %abc%#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70" , %abc% :is_system_admin%abc%  false, %abc% :external_sign_out_url %abc% %abc% %abc%]nil
, :email:language_locale  nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED amelia@rosenbaum.name, 0 PARTIALLY_APPROVED:contracts_count  0 0DENIED,  aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e:lastname  Kemmer, 186cccc7-7b33-489f-b76e-4e7c97db22e4 :org_id 9465c0d7-fda6-4a28-8482-f19047127964 nil, ade586cb-80d8-4c93-9a34-042eaa426bd5 :scope_read 32d74dbf-9308-42fc-b66b-9889c2af2c73 true6fa6a22f-c444-4083-af19-7bb720d050ae , normal :is_admin high false, low :authentication-method medium:session , high :login mandatorynil , 0:scope_system_admin_write  0false , not_processed:scope_write  true, in_progress :firstname procured Dawna, alternative_procured :scope_admin_write not_procured false, %ab% :user_session_created_at %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab% %ab%]
#time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a% %a%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.834Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.835Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.835Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer?>o> viewer?  {{:result :result falsefalse}}

>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.836Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.836Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) 2023-12-11T12:59:48.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T12:59:48.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> admin? {:exists false}
2023-12-11T12:59:48.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T12:59:48.839Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%" "%a%"]
2023-12-11T12:59:48.840Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%" "%ab%"]
2023-12-11T12:59:48.840Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%"]
>o> >o> HERE :row-fn>o> >o> HERE :row-fn  (())

>o> >o> HERE :row-fn ()
2023-12-11T12:59:48.956Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
2023-12-11T12:59:48.956Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
2023-12-11T12:59:48.956Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 >o>dashboard-cache-keyB2 {{>o>dashboard-cache-keyB2 :id :id {-1224398771473240347:id }}

-1220371560}
2023-12-11T12:59:48.957Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T12:59:48.957Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T12:59:48.957Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T12:59:48.957Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -122439877
2023-12-11T12:59:48.957Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => 1473240347
2023-12-11T12:59:48.957Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -1220371560
2023-12-11T12:59:48.958Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()
2023-12-11T12:59:48.958Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()
2023-12-11T12:59:48.958Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request
>request-grapql _> request  {{:leihs-user-language:leihs-user-language  {{:name :name English (UK)English (UK), , :locale:locale  en-GB, en-GB, :default:default  truetrue, , :active:active  truetrue}}, , :authenticated-entity :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id {nil, :email :scope_read true, amelia@rosenbaum.name, :is_admin :contracts_count 
>request-grapql _> requestfalse, 0, :authentication-method:lastname  :session,  :login Kemmer, nil, :org_id :scope_system_admin_write nil, false, :scope_read :scope_write true, true, :is_admin :firstname false, Dawna, :authentication-method :session, :scope_admin_write :loginfalse , nil, :scope_system_admin_write :user_session_created_at false, :scope_write true, :firstname Dawna, :scope_admin_write {false, :user_session_created_at :leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z"#time/instant "2023-12-11T09:40:32.291787Z", , :id:id  #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", , :user_session_id#time/instant "2023-12-11T09:40:32.291787Z",  :user_session_id:id  #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", false, :scope_system_admin_read :access-rights false, :access-rights #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", (():user_session_id) , #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :user_id:access-rights  #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", ():is_system_admin,  :user_idfalse , :external_sign_out_url nil, #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70":language_locale,  :is_system_adminnil , false, :inventory_pool_roles_count :external_sign_out_url 0nil, , :scope_admin_read:language_locale  false}nil, , , :cookies :user_id:inventory_pool_roles_count  0, {:scope_admin_read false}, leihs-anti-csrf-token#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70" , :cookies :is_system_admin {false, :value :external_sign_out_url dc7e186c-6046-4dce-9a37-5d14ea14e0e1nil, }, :language_locale nil, leihs-user-session :inventory_pool_roles_count {0, :scope_admin_read false}, {leihs-anti-csrf-token :cookies :value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time {11214889089750, {:params :value leihs-anti-csrf-tokendc7e186c-6046-4dce-9a37-5d14ea14e0e1} {}, , leihs-user-session :settings{ :value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {{:value{:email_sending_enabled :value  ec09a61e-81a5-4995-98ae-f9159a1a35e8}false, }ec09a61e-81a5-4995-98ae-f9159a1a35e8}, :sessions_max_lifetime_secs:remote-addr  127.0.0.1}, 432000, :start-time :smtp_default_from_address 11215069776375your.lending.desk@example.com, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, , :public_image_caching_enabled :public_image_caching_enabled true, true, :sessions_force_secure :sessions_force_secure false, false, :deliver_received_order_notifications :deliver_received_order_notifications false, false, :external_base_url :external_base_url nil, nil, :sessions_force_uniqueness :sessions_force_uniqueness false, false, :email_signature :email_signature Cheers,}Cheers,, }, :tx-next :tx-next ##next.jdbc.default_options.DefaultOptionsnext.jdbc.default_options.DefaultOptions{{:connectable:connectable  , :remote-addr 127.0.0.1, :start-time 11214997558750, :params #object[#object[com.zaxxer.hikari.HikariDataSource com.zaxxer.hikari.HikariDataSource {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 0x4ee63b99 0x4ee63b99 HikariDataSource (HikariPool-1)]HikariDataSource (HikariPool-1), ]HikariDataSource (HikariPool-1)], , :options :options :options {:builder-fn {{:builder-fn:builder-fn  #object[#object[next.jdbc.result_set$as_unqualified_lower_maps #object[next.jdbc.result_set$as_unqualified_lower_mapsnext.jdbc.result_set$as_unqualified_lower_maps  0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw 0x35555daa 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]next.jdbc.result_set$as_unqualified_lower_maps@35555daa}]}}, }{}, , :route-params :query-params-raw nil, :headers {}, :route-params {nil, :headers origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile {?0, hostorigin  localhost:3230, http://localhost:3230, user-agent sec-fetch-site Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, same-origin, content-typesec-ch-ua-mobile  application/json, ?0, cookie host leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, localhost:3230, content-length user-agent 4137, Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua content-type "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", application/json, sec-ch-ua-platform cookie"macOS",  referer leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, http://localhost:3230/procure/requests, content-length connection 4136, keep-alive, sec-ch-ua pragma "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", no-cache, sec-ch-ua-platform x-csrf-token "macOS", dc7e186c-6046-4dce-9a37-5d14ea14e0e1, referer accept http://localhost:3230/procure/requests, application/json, connection accept-language keep-alive, de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, pragma sec-fetch-dest no-cache, empty, x-csrf-token accept-encoding dc7e186c-6046-4dce-9a37-5d14ea14e0e1, gzip, deflate, br, accept sec-fetch-mode application/json, cors, :query-params-raw accept-languagecache-control  no-cache}de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, , sec-fetch-dest :async-channel empty, {}, accept-encoding :route-params gzip, deflate, br, nil, sec-fetch-mode :headerscors,  cache-control no-cache}, :async-channel {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[#object[org.httpkit.server.AsyncChannel org.httpkit.server.AsyncChannel 0x3c35be0e 0.0.0.0/0.0.0.0:3230<->null], 0x499c9038 :server-port 0.0.0.0/0.0.0.0:3230<->null]3230, , :server-port #object[:params-raw org.httpkit.server.AsyncChannel 3230, :params-raw {}, :tx {}, :tx {0x1cbdf8fb /127.0.0.1:3230<->/127.0.0.1:58840], {:datasource :server-port :datasource 3230, :params-raw #object[com.zaxxer.hikari.HikariDataSource #object[com.zaxxer.hikari.HikariDataSource {}, :tx 0x7e82c47d HikariDataSource (db-pool)]0x7e82c47d }, :content-length 4137, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSEDHikariDataSource (db-pool) ]}, IN_PROGRESS PROCURED ALTERNATIVE_PROCURED:content-length  NOT_PROCURED]4136, , :search:form-params  ab, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 {ade586cb-80d8-4c93-9a34-042eaa426bd5} , 32d74dbf-9308-42fc-b66b-9889c2af2c73 :websocket?6fa6a22f-c444-4083-af19-7bb720d050ae ], false, :categories :query-params [], :priority{ }, [:content-type NORMAL application/json, HIGH]:form-params-raw,  :budgetPeriods {[}, aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e :character-encoding 186cccc7-7b33-489f-b76e-4e7c97db22e4]utf8}, , :uri :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema /procure/graphql, :server-name localhost, :handler-key :graphql, #CompiledSchema<>:query-string,  nil:handler,  {:body #object[leihs.procurement.graphql$handler :datasource{ :operationName RequestsIndexFiltered, :variables 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], {:inspector_priority:multipart-params  [LOW {}MEDIUM,  :scheme HIGH :http, MANDATORY]:request-method , :post, :onlyOwnRequests :accept false, :state {:mime[ :jsonNEW,  :charset APPROVEDnil,  :encoding #object[PARTIALLY_APPROVED nil, DENIED]com.zaxxer.hikari.HikariDataSource:language ,  nil:order_status }}[NOT_PROCESSED 
IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search a, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], {:multipart-params},  :websocket? false, :query-params {}, {}:scheme , :http, :content-type :request-method application/json:post, , :form-params-raw :accept {}, {:character-encoding :mime utf8, :json, :uri :charset nil, /procure/graphql, :encoding :server-namenil,  :languagelocalhost , nil}}:handler-key
 :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11214889089750,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"4136","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4136,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"a","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map 
>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11215069776375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"4138","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4138,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"abc","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map 
>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11214997558750,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"4137","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4137,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"ab","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ((([[[:dashboard :dashboard #ordered/map :dashboard #ordered/map ([:cacheKey -122439877] [:total_count 0] [:budget_periods []] #ordered/map [:__typename :Dashboard])])}(
[:cacheKey ([:cacheKey -1220371560] [:total_count 1473240347] 0] [:total_count[ :budget_periods 0] []] [:budget_periods [[]] [:__typename :Dashboard])])}
:__typename :Dashboard])])}
2023-12-11T12:59:48.984Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-1220371560"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T12:59:48.984Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1473240347"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T12:59:48.984Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-122439877"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11239068119250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6cf09322 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11239066377791, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 615, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x54df4c8d /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.285Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.283Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.288Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.288Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> inspector? >o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result {:result true}
>myprint>  inspector#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"] 
true
2023-12-11T13:00:12.289Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.290Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.290Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
2023-12-11T13:00:12.290Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? {:exists false}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
2023-12-11T13:00:12.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? 2023-12-11T13:00:12.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
{:result true}
>o> viewer? {:result false}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:00:12.298Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
pure-handler >> 2
2023-12-11T13:00:12.299Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
2023-12-11T13:00:12.301Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
>debug 2
>debug 3
2023-12-11T13:00:12.303Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.303Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:00:12.306Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
2023-12-11T13:00:12.306Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 5b nil
2023-12-11T13:00:12.319Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>>>3 nil
>oo> templates::get-templates2 _> HERE value contains :id??) #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0" {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>oo> templates::get-templates1a ?broken-base-query? {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [[[:concat ([:lower [:coalesce :procurement_templates.article_name ]] [:lower [:coalesce :models.product ]] [:lower [:coalesce :models.version ]])]]]}
>oo> templates::get-templates1b ?broken-base-query? [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC   ]
>oo> templates::get-templates1c [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"   ]
2023-12-11T13:00:12.327Z NX-41294 DEBUG [leihs.procurement.resources.templates:?] - (sql-format query) => ["SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC" #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0" "" "" ""]
2023-12-11T13:00:12.330Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:00:12.331Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:00:12.332Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:00:12.333Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.334Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639"
2023-12-11T13:00:12.338Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:00:12.339Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:00:12.339Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:00:12.339Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Mate 9", :price_cents 8, :article_name "Galaxy S1", :is_archived false, :supplier_name "Sony", :model_id nil, :supplier_id nil, :id #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639", :price_currency "USD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.340Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:00:12.340Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Mate 9", :price_cents 8, :article_name "Galaxy S1", :is_archived false, :supplier_name "Sony", :model_id nil, :supplier_id nil, :id #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639", :price_currency "USD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.340Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:00:12.341Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:00:12.341Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.342Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:00:12.342Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:00:12.342Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:00:12.343Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:00:12.343Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.343Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67"
2023-12-11T13:00:12.344Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:00:12.344Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:00:12.344Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:00:12.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "OnePlus 5T", :price_cents 83, :article_name "Galaxy S9", :is_archived false, :supplier_name "Panasonic", :model_id nil, :supplier_id nil, :id #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67", :price_currency "PLN", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:00:12.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "OnePlus 5T", :price_cents 83, :article_name "Galaxy S9", :is_archived false, :supplier_name "Panasonic", :model_id nil, :supplier_id nil, :id #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67", :price_currency "PLN", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:00:12.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:00:12.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.346Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:00:12.346Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:00:12.346Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:00:12.346Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:00:12.346Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.347Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f"
2023-12-11T13:00:12.347Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "iPhone 5S", :price_cents 53, :article_name "Mi 8", :is_archived false, :supplier_name "Polaroid", :model_id nil, :supplier_id nil, :id #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f", :price_currency "CAD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "iPhone 5S", :price_cents 53, :article_name "Mi 8", :is_archived false, :supplier_name "Polaroid", :model_id nil, :supplier_id nil, :id #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f", :price_currency "CAD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:00:12.348Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:00:12.349Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.349Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:00:12.349Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:00:12.349Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:00:12.349Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:00:12.350Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.350Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c"
2023-12-11T13:00:12.351Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:00:12.351Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:00:12.351Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:00:12.351Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Galaxy S7", :price_cents 80, :article_name "Pocophone F1", :is_archived false, :supplier_name "Benq", :model_id nil, :supplier_id nil, :id #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c", :price_currency "INR", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.351Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:00:12.351Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Galaxy S7", :price_cents 80, :article_name "Pocophone F1", :is_archived false, :supplier_name "Benq", :model_id nil, :supplier_id nil, :id #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c", :price_currency "INR", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:00:12.352Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:00:12.353Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.353Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8"
2023-12-11T13:00:12.354Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:00:12.354Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:00:12.354Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:00:12.354Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Galaxy S7 Edge", :price_cents 9, :article_name "Redmi Note 6 Pro", :is_archived false, :supplier_name "Leica", :model_id nil, :supplier_id nil, :id #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8", :price_currency "TJS", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.354Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:00:12.354Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Galaxy S7 Edge", :price_cents 9, :article_name "Redmi Note 6 Pro", :is_archived false, :supplier_name "Leica", :model_id nil, :supplier_id nil, :id #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8", :price_currency "TJS", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:00:12.355Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:00:12.355Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:00:12.355Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:00:12.355Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11239066377791, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 615, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x54df4c8d /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.356Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:12.356Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11239066377791,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"615","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":615,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"adminTemplates","variables":{},"query":"query adminTemplates {\n  main_categories {\n    id\n    name\n    image_url\n    categories {\n      id\n      name\n      templates {\n        id\n        article_name\n        article_number\n        model {\n          id\n          product\n          version\n          __typename\n        }\n        requests_count\n        is_archived\n        price_cents\n        price_currency\n        supplier_name\n        supplier {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:image_url nil] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:templates [#ordered/map ([:id e2cea79b-efb8-4817-bc63-5e6dd0686639] [:article_name Galaxy S1] [:article_number Mate 9] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 8] [:price_currency USD] [:supplier_name Sony] [:supplier nil] [:__typename :Template]) #ordered/map ([:id b0b3e487-2dab-4f8e-8daa-df6aa787cf67] [:article_name Galaxy S9] [:article_number OnePlus 5T] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 83] [:price_currency PLN] [:supplier_name Panasonic] [:supplier nil] [:__typename :Template]) #ordered/map ([:id 72d32fd7-11dc-4f52-b039-94290fc9b36f] [:article_name Mi 8] [:article_number iPhone 5S] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 53] [:price_currency CAD] [:supplier_name Polaroid] [:supplier nil] [:__typename :Template]) #ordered/map ([:id f07aaf9f-bf06-460b-b752-df19bcc6bc7c] [:article_name Pocophone F1] [:article_number Galaxy S7] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 80] [:price_currency INR] [:supplier_name Benq] [:supplier nil] [:__typename :Template]) #ordered/map ([:id 08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8] [:article_name Redmi Note 6 Pro] [:article_number Galaxy S7 Edge] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 9] [:price_currency TJS] [:supplier_name Leica] [:supplier nil] [:__typename :Template])]] [:__typename :Category])]] [:__typename :MainCategory])]])}
2023-12-11T13:00:12.362Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:templates [#ordered/map ([:id "e2cea79b-efb8-4817-bc63-5e6dd0686639"] [:article_name "Galaxy S1"] [:article_number "Mate 9"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 8] [:price_currency "USD"] [:supplier_name "Sony"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "b0b3e487-2dab-4f8e-8daa-df6aa787cf67"] [:article_name "Galaxy S9"] [:article_number "OnePlus 5T"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 83] [:price_currency "PLN"] [:supplier_name "Panasonic"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "72d32fd7-11dc-4f52-b039-94290fc9b36f"] [:article_name "Mi 8"] [:article_number "iPhone 5S"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 53] [:price_currency "CAD"] [:supplier_name "Polaroid"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "f07aaf9f-bf06-460b-b752-df19bcc6bc7c"] [:article_name "Pocophone F1"] [:article_number "Galaxy S7"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 80] [:price_currency "INR"] [:supplier_name "Benq"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8"] [:article_name "Redmi Note 6 Pro"] [:article_number "Galaxy S7 Edge"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 9] [:price_currency "TJS"] [:supplier_name "Leica"] [:supplier nil] [:__typename :Template])]] [:__typename :Category])]] [:__typename :MainCategory])]])}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11239068119250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6cf09322 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11239068119250,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:00:12.372Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11240421194666, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2a998dc2 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights 2023-12-11T13:00:13.634Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
(), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11240420865916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7c127872 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler >o> admin?#object[ leihs.procurement.graphql$handler {0x3f343f5e leihs.procurement.graphql$handler@3f343f5e:exists] , false:multipart-params} 
{>myprint> } , admin:scheme  false:http
, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[>o> inspector?next.jdbc.result_set$as_unqualified_lower_maps  [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result0x35555daa  next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) 2023-12-11T13:00:13.635Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.635Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? 2023-12-11T13:00:13.635Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
{:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
2023-12-11T13:00:13.635Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.636Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
2023-12-11T13:00:13.636Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.636Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.637Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.637Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.638Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id 2023-12-11T13:00:13.638Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11240420617083, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps>o> admin?  0x35555daa {next.jdbc.result_set$as_unqualified_lower_maps@35555daa:exists] }false}}, 
:query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, >o> viewer?cookie  leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length {4138, :resultsec-ch-ua  false"Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24"}, 
sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel >o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#object[org.httpkit.server.AsyncChannel 0x68bb7fe3 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, >o> requester??:query-params  [{SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))} , :content-type application/json#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", ]:form-params-raw
 {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key2023-12-11T13:00:13.638Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
 :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-11T13:00:13.638Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.639Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
2023-12-11T13:00:13.639Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> admin? {:exists false}
>myprint>  admin false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.640Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.640Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:00:13.641Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.641Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> requester?? {:exists true}
>myprint>  requester true
pure-handler >> 2
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.642Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
2023-12-11T13:00:13.642Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.642Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
pure-handler >> 2
2023-12-11T13:00:13.642Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>o> inspector? {:result true}
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
2023-12-11T13:00:13.643Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result>o> >tocheck> 
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.643Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.643Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
2023-12-11T13:00:13.644Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
2023-12-11T13:00:13.644Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil
>debug 2
>debug 3

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:00:13.645Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:00:13.646Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>debug 5b nil
2023-12-11T13:00:13.647Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
pure-handler >> 2
2023-12-11T13:00:13.652Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "abc", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11240420865916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7c127872 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {>o> admin?:datasource  #object[com.zaxxer.hikari.HikariDataSource [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) 0x7e82c47d HikariDataSource (db-pool)]#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"}], 
:content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-11T13:00:13.657Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11240420865916,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"534","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id 549c5a79-74f9-4e6f-8f34-29c7269c28cf] [:name Books & Baby] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65] [:name Sports, Electronics & Health] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c9fe18fe-94c4-4ae0-a78b-c66334d2a98e] [:name Garden, Industrial & Clothing] [:shortname nil] >o> requester??[ :__typename :Organization] [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)):organizations  [#ordered/map #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
([:id 63b0355e-1deb-45af-9fec-de6eac5da9a5] [:name Movies] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id b3d43d27-5592-489c-b51c-fbf31becdc3f] [:name Health, Grocery & Beauty] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 08a3e1f6-09fd-4646-9ba9-f90bb7571661] [:name Kids, Electronics & Music] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c042c5c8-b98c-444d-8914-a517241e2333] [:name Jewelry] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id cd9484a8-22b8-46a7-a330-eaa03766c293] [:name Music & Automotive] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 79e0d424-38a5-4c02-87e1-e819360d16cc] [:name Outdoors & Home] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 6d367b7a-233f-4317-a9b5-64a35109be6c] [:name Electronics & Home] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 29cb5361-738e-449c-b3f3-9b825bab299a] [:name Tools, Baby & Kids] [:shortname2023-12-11T13:00:13.658Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
 nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 13a7000d-7301-444c-8c68-04f0c2799784] [:name Grocery, Electronics & Industrial] [:shortname nil] [:__typename :Organization])]])]])}
>o> requester?? {:exists true}
2023-12-11T13:00:13.658Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "549c5a79-74f9-4e6f-8f34-29c7269c28cf"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c9fe18fe-94c4-4ae0-a78b-c66334d2a98e"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "63b0355e-1deb-45af-9fec-de6eac5da9a5"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "b3d43d27-5592-489c-b51c-fbf31becdc3f"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "08a3e1f6-09fd-4646-9ba9-f90bb7571661"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c042c5c8-b98c-444d-8914-a517241e2333"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "cd9484a8-22b8-46a7-a330-eaa03766c293"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "79e0d424-38a5-4c02-87e1-e819360d16cc"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "6d367b7a-233f-4317-a9b5-64a35109be6c"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "29cb5361-738e-449c-b3f3-9b825bab299a"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "13a7000d-7301-444c-8c68-04f0c2799784"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11240421194666, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2a998dc2 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11240421194666,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:00:13.664Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.665Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.666Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.667Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:00:13.668Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query abc
>o> requests::search-query %abc%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.670Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.672Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.675Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.676Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:13.677Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:00:13.677Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:00:13.714Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id -122439877}
2023-12-11T13:00:13.714Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:00:13.714Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -122439877
2023-12-11T13:00:13.714Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11240420617083, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x68bb7fe3 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T09:40:32.291787Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"52ab0127-d271-40fb-9aa6-e6327a59b362","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"ec09a61e-81a5-4995-98ae-f9159a1a35e8"}},"remote-addr":"127.0.0.1","start-time":11240420617083,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8","content-length":"4138","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4138,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"abc","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -122439877] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T13:00:13.716Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-122439877"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :sign-out
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11243594047791, :params {:csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x6487f58a HikariProxyConnection@1686631818 wrapping org.postgresql.jdbc.PgConnection@1da94e76], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 47, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x78e58c58 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {:csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x24b5c1a0 HikariProxyConnection@615891360 wrapping org.postgresql.jdbc.PgConnection@7e114146], :level 1, :rollback #object[clojure.lang.Atom 0x6675391 {:status :ready, :val false}]}, :content-length 47, :form-params {:csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, :character-encoding utf8, :uri /sign-out, :server-name localhost, :handler-key :sign-out, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x57cddebc BytesInputStream[len=47]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x387f9220 compojure.core$routes$fn__27950@387f9220], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-out
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T09:40:32.291787Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "52ab0127-d271-40fb-9aa6-e6327a59b362", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x6487f58a HikariProxyConnection@1686631818 wrapping org.postgresql.jdbc.PgConnection@1da94e76], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.824Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.826Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.828Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.830Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.830Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.831Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:00:16.831Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11243838889000, :params {:return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1d54a2cb /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {:return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2F, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:00:17.041Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:00:17.043Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:00:17.043Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:00:17.044Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11243983036458, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, pragma no-cache, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4fb2b267 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:00:17.174Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:00:17.175Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:00:17.176Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:00:17.176Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 11244013158916, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site cross-site, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x56a3cbaa /127.0.0.1:3230<->/127.0.0.1:58971], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:00:17.200Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:00:17.202Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:00:17.203Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:00:17.204Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  bc61b47f-2978-46fc-92e7-8255d666e22c
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value ec09a61e-81a5-4995-98ae-f9159a1a35e8}}, :remote-addr 127.0.0.1, :start-time 11333930396416, :params {:user amelia@rosenbaum.name, :password password, :csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, :return-to /}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x36415cb6 HikariProxyConnection@910253238 wrapping org.postgresql.jdbc.PgConnection@1da94e76], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=ec09a61e-81a5-4995-98ae-f9159a1a35e8, content-length 108, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4bce23c8 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, :return-to /}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x3fe1d0ee HikariProxyConnection@1071763694 wrapping org.postgresql.jdbc.PgConnection@7e114146], :level 1, :rollback #object[clojure.lang.Atom 0x5a14fc0d {:status :ready, :val false}]}, :content-length 108, :form-params {:user amelia@rosenbaum.name, :password password, :csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, :return-to /}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, :return-to /}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x660cbf15 BytesInputStream[len=108]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x36415cb6 HikariProxyConnection@910253238 wrapping org.postgresql.jdbc.PgConnection@1da94e76], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:47.154Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:47.161Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:47.162Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:47.163Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334073660291, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/sign-in?return-to=%2F, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1d287852 /127.0.0.1:3230<->/127.0.0.1:58951], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /, :server-name localhost, :handler-key :home, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x557381cc leihs.procurement.backend.html$not_found_handler@557381cc], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :home
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.268Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.268Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.269Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.269Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.270Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.271Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.272Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.274Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 11334137349291, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site cross-site, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1004fa49 /127.0.0.1:3230<->/127.0.0.1:59371], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:47.324Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:47.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:47.326Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:47.327Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  ec09417e-5d09-458e-8958-85d443811d34
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334138692625, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x25cf9e9c /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x557381cc leihs.procurement.backend.html$not_found_handler@557381cc], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.349Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.351Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.352Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.353Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.354Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.355Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.357Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.358Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 11334213333291, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site cross-site, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x362897b5 /127.0.0.1:3230<->/127.0.0.1:59375], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:47.400Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:47.400Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:47.401Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:47.402Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  37d1d52a-8416-4bf9-930e-a11e742c6829
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334484533000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5ed49a30 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.693Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.695Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.695Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.696Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.696Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.697Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:01:47.698Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
2023-12-11T13:01:47.700Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
2023-12-11T13:01:47.700Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
2023-12-11T13:01:47.700Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.712Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.713Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334484533000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5ed49a30 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11334484533000,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:47.715Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334556720958, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x62b082b9 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.757Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.758Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 >o> inspector? 0x1038c5e0 {leihs.core.locale$wrap$fn__44858@1038c5e0]
:result true}
>> authorize::request > 
{:authenticated-entity >myprint> { :email amelia@rosenbaum.name, :contracts_count inspector0,  :lastname true
Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334556775708, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {>o> viewer? :builder-fn [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel 2023-12-11T13:01:47.760Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#object[org.httpkit.server.AsyncChannel 0xb1deac4 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource >o> viewer? 0x4ee63b99 {HikariDataSource (HikariPool-1)], :result false}
:options>myprint>  viewer false
 {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.760Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.760Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [>o> admin?SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))  #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
{:exists false}
>myprint>  admin false
2023-12-11T13:01:47.761Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result 2023-12-11T13:01:47.761Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.761Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
2023-12-11T13:01:47.762Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.762Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>o> viewer? >>> authenticate::authenticated-entity {:result {false}
2023-12-11T13:01:47.762Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at >o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write2023-12-11T13:01:47.762Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
 true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334556576041, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource >o> requester?? 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {{:exists :builder-fn true}
>myprint>  requester #object[truenext.jdbc.result_set$as_unqualified_lower_maps 
0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6a652a7 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, >o> admin?>o> requester??:org_id  nil,  :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, {:scope_admin_write false, [:exists :user_session_created_attrue} 
SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]:scope_system_admin_read false, 
:access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
2023-12-11T13:01:47.762Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.763Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.763Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.763Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.764Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.764Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
2023-12-11T13:01:47.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
pure-handler >> 2
>o> requester?? {:exists true}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.767Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
2023-12-11T13:01:47.767Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.768Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.769Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
pure-handler >> 2
>o> requester?? {:exists true}
2023-12-11T13:01:47.769Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>debug 2
>debug 3
2023-12-11T13:01:47.770Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:01:47.770Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:01:47.770Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
2023-12-11T13:01:47.771Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 5b nil
2023-12-11T13:01:47.771Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
2023-12-11T13:01:47.771Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil
pure-handler >> 2
2023-12-11T13:01:47.777Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "abc", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError 
>request-grapql _> request {{:inspector_priority :leihs-user-language [:LOW :MEDIUM :HIGH {:MANDATORY], :organization_id :name English (UK), [:locale en-GB, 9465c0d7-fda6-4a28-8482-f19047127964 :default ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], true, :requested_by_auth_user :active true}, false, :authenticated-entity :state [{:NEW :email :APPROVED amelia@rosenbaum.name, :PARTIALLY_APPROVED :contracts_count :DENIED], :order_status 0, [:lastname Kemmer:NOT_PROCESSED,  :org_id :IN_PROGRESS :PROCURED nil, :ALTERNATIVE_PROCURED :scope_read :NOT_PROCURED], true, :search :is_admin abc, false, :priority :authentication-method :session, [:login nil:NORMAL , :HIGH], :scope_system_admin_write false:budget_period_id , [:scope_write true, :firstname Dawna, aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e :scope_admin_write false186cccc7-7b33-489f-b76e-4e7c97db22e4], , :category_id :user_session_created_at []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
#time/instant "2023-12-11T13:01:47.151279Z", >oo> helper3a priority :id [:NORMAL :HIGH]
>oo> helper3b priority #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"(, :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", >debug> 1a
:scope_system_admin_read >debug> 1a
normal high)
false, >oo> helper4a inspector-priority :access-rights nil
(), :user_id >oo> helper4b inspector-priority #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, (:external_sign_out_url >debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)nil, 
:language_locale nil, >o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured):inventory_pool_roles_count 
0, :scope_admin_read false>o> helper6
}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334556720958, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x62b082b9 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource >o> viewer? #object[com.zaxxer.hikari.HikariDataSource [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]0x7e82c47d HikariDataSource (db-pool)]
}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-11T13:01:47.784Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11334556720958,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"534","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id 549c5a79-74f9-4e6f-8f34-29c7269c28cf] [:name Books & Baby] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65] [:name Sports, Electronics & Health] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c9fe18fe-94c4-4ae0-a78b-c66334d2a98e] [:name Garden, Industrial & Clothing] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 63b0355e-1deb-45af-9fec-de6eac5da9a5] [:name Movies] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id b3d43d27-5592-489c-b51c-fbf31becdc3f] [:name Health, Grocery & Beauty] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 08a3e1f6-09fd-4646-9ba9-f90bb7571661] [:name Kids, Electronics & Music] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c042c5c8-b98c-444d-8914-a517241e2333] [:name Jewelry] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id cd9484a8-22b8-46a7-a330-eaa03766c293] [:name Music & Automotive] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 79e0d424-38a5-4c02-87e1-e819360d16cc] [:name Outdoors & Home] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 6d367b7a-233f-4317-a9b5-64a35109be6c] [:name Electronics & Home] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 29cb5361-738e-449c-b3f3-9b825bab299a] [:name Tools, Baby & Kids] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 13a7000d-7301-444c-8c68-04f0c2799784] [:name Grocery, Electronics & Industrial] [:shortname nil] [:__typename :Organization])]])]])}
>o> viewer? {:result false}
2023-12-11T13:01:47.785Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "549c5a79-74f9-4e6f-8f34-29c7269c28cf"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c9fe18fe-94c4-4ae0-a78b-c66334d2a98e"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "63b0355e-1deb-45af-9fec-de6eac5da9a5"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "b3d43d27-5592-489c-b51c-fbf31becdc3f"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "08a3e1f6-09fd-4646-9ba9-f90bb7571661"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c042c5c8-b98c-444d-8914-a517241e2333"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "cd9484a8-22b8-46a7-a330-eaa03766c293"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "79e0d424-38a5-4c02-87e1-e819360d16cc"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "6d367b7a-233f-4317-a9b5-64a35109be6c"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "29cb5361-738e-449c-b3f3-9b825bab299a"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "13a7000d-7301-444c-8c68-04f0c2799784"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? {:result true}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.790Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.790Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:01:47.791Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query abc
>o> requests::search-query %abc%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.792Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.794Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334556775708, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0xb1deac4 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, >o> inspector?:tx  {:datasource #object[com.zaxxer.hikari.HikariDataSource {:result true}
0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11334556775708,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:47.795Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.797Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.798Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:47.799Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:01:47.800Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:01:47.826Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id -122439877}
2023-12-11T13:01:47.826Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:01:47.826Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -122439877
2023-12-11T13:01:47.826Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11334556576041, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6a652a7 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11334556576041,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4138","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4138,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"abc","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -122439877] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T13:01:47.829Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-122439877"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11338447843583, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x72685966 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.657Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.657Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.658Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.659Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at >o> requester?? {:exists true}
>myprint>  requester true
#time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11338447696750, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6c47846a /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema 2023-12-11T13:01:51.660Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.660Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.666Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
2023-12-11T13:01:51.672Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.673Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? >o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) [#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.673Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.673Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? >o> viewer? {{:exists :result true}false}

>myprint>  requester true
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.677Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.677Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? >o> admin? {{:exists :exists truefalse}}

>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.678Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:01:51.681Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
pure-handler >> 2
2023-12-11T13:01:51.682Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
2023-12-11T13:01:51.683Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
>o> viewer? {:result false}
2023-12-11T13:01:51.684Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.684Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> requester?? {:exists true}
2023-12-11T13:01:51.685Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:01:51.689Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "abc", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11338449788916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5c43ff5e /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.691Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>get-dashboard
>o> admin? >>args {{:inspector_priority:exists  false}
>myprint>  admin false
[:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []}
>>value nil
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.695Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.695Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
2023-12-11T13:01:51.697Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
2023-12-11T13:01:51.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> admin? {:exists false}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
>o> inspector? [:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED {[:= :procurement_requests.approved_quantity 0] DENIED)
:result true}
2023-12-11T13:01:51.700Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from >o> viewer?[ :procurement_requests], :left-join [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result :models [#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]:= 
:models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] 2023-12-11T13:01:51.700Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
[{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id >o> viewer? :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers {[:result false}:= :suppliers.id :procurement_requests.supplier_id
] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query abc
>o> requests::search-query %abc%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
2023-12-11T13:01:51.700Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
2023-12-11T13:01:51.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.703Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:51.704Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

>request-grapql _> request >o> inspector? {{:result:leihs-user-language  true}{:name 
English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session pure-handler >> 2{
:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11338447843583, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource >o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x72685966 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, 2023-12-11T13:01:51.704Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
:graphql-schema 2023-12-11T13:01:51.704Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#CompiledSchema<>, >oo> vars from graphQL-Requst nil nil nil {}
:handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
>o> admin? {:exists false}
2023-12-11T13:01:51.704Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%"]

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11338447843583,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:51.705Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>debug 2
>debug 3
2023-12-11T13:01:51.708Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:01:51.711Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>debug 5b nil
2023-12-11T13:01:51.714Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>o> >o> HERE :row-fn ()
2023-12-11T13:01:51.723Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id -122439877}
2023-12-11T13:01:51.723Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:01:51.723Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -122439877
2023-12-11T13:01:51.723Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11338447696750, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6c47846a /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11338449788916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5c43ff5e /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, 
>request-c-grapql _> request (json) :charset nil, {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11338447696750,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4138","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4138,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"abc","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data :encoding #ordered/map nil, :language nil}}(
[:dashboard #ordered/map ([:cacheKey -122439877] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T13:01:51.724Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-122439877"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11338449788916,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"534","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id 549c5a79-74f9-4e6f-8f34-29c7269c28cf] [:name Books & Baby] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65] [:name Sports, Electronics & Health] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c9fe18fe-94c4-4ae0-a78b-c66334d2a98e] [:name Garden, Industrial & Clothing] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 63b0355e-1deb-45af-9fec-de6eac5da9a5] [:name Movies] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id b3d43d27-5592-489c-b51c-fbf31becdc3f] [:name Health, Grocery & Beauty] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 08a3e1f6-09fd-4646-9ba9-f90bb7571661] [:name Kids, Electronics & Music] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c042c5c8-b98c-444d-8914-a517241e2333] [:name Jewelry] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id cd9484a8-22b8-46a7-a330-eaa03766c293] [:name Music & Automotive] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 79e0d424-38a5-4c02-87e1-e819360d16cc] [:name Outdoors & Home] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 6d367b7a-233f-4317-a9b5-64a35109be6c] [:name Electronics & Home] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 29cb5361-738e-449c-b3f3-9b825bab299a] [:name Tools, Baby & Kids] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 13a7000d-7301-444c-8c68-04f0c2799784] [:name Grocery, Electronics & Industrial] [:shortname nil] [:__typename :Organization])]])]])}
2023-12-11T13:01:51.724Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "549c5a79-74f9-4e6f-8f34-29c7269c28cf"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c9fe18fe-94c4-4ae0-a78b-c66334d2a98e"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "63b0355e-1deb-45af-9fec-de6eac5da9a5"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "b3d43d27-5592-489c-b51c-fbf31becdc3f"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "08a3e1f6-09fd-4646-9ba9-f90bb7571661"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c042c5c8-b98c-444d-8914-a517241e2333"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "cd9484a8-22b8-46a7-a330-eaa03766c293"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "79e0d424-38a5-4c02-87e1-e819360d16cc"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "6d367b7a-233f-4317-a9b5-64a35109be6c"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "29cb5361-738e-449c-b3f3-9b825bab299a"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "13a7000d-7301-444c-8c68-04f0c2799784"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11339087846125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 615, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7ac4e46f /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11339091132125, :params >o> viewer? {}, :settings [{SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result :email_sending_enabled false, :sessions_max_lifetime_secs #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4dc936a6 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
2023-12-11T13:01:52.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.297Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.297Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.298Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> admin? {:exists false}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.298Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.298Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
2023-12-11T13:01:52.298Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
2023-12-11T13:01:52.299Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
2023-12-11T13:01:52.299Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:01:52.299Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.299Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.299Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.300Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
pure-handler >> 2
2023-12-11T13:01:52.302Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {}
2023-12-11T13:01:52.302Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil >oo> vars from graphQL-Requst {}nil
 nil nil {}
>debug 2
>debug 3
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
2023-12-11T13:01:52.303Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
2023-12-11T13:01:52.303Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
2023-12-11T13:01:52.303Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:01:52.305Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.305Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>>>3 nil
>debug 5b nil
2023-12-11T13:01:52.305Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>oo> templates::get-templates2 _> HERE value contains :id??) #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0" {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>oo> templates::get-templates1a ?broken-base-query? {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [[[:concat ([:lower [:coalesce :procurement_templates.article_name ]] [:lower [:coalesce :models.product ]] [:lower [:coalesce :models.version ]])]]]}
>oo> templates::get-templates1b ?broken-base-query? [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC   ]
>oo> templates::get-templates1c [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"   ]
2023-12-11T13:01:52.310Z NX-41294 DEBUG [leihs.procurement.resources.templates:?] - (sql-format query) => ["SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC" #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0" "" "" ""]
2023-12-11T13:01:52.318Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:01:52.319Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:01:52.319Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:01:52.321Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.323Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639"
2023-12-11T13:01:52.328Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:01:52.328Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Mate 9", :price_cents 8, :article_name "Galaxy S1", :is_archived false, :supplier_name "Sony", :model_id nil, :supplier_id nil, :id #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639", :price_currency "USD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Mate 9", :price_cents 8, :article_name "Galaxy S1", :is_archived false, :supplier_name "Sony", :model_id nil, :supplier_id nil, :id #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639", :price_currency "USD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:01:52.329Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.331Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:01:52.331Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:01:52.331Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:01:52.331Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:01:52.331Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.332Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.333Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67"
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.333Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:52.333Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
>o> requester?? {:exists true}
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "OnePlus 5T", :price_cents 83, :article_name "Galaxy S9", :is_archived false, :supplier_name "Panasonic", :model_id nil, :supplier_id nil, :id #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67", :price_currency "PLN", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "OnePlus 5T", :price_cents 83, :article_name "Galaxy S9", :is_archived false, :supplier_name "Panasonic", :model_id nil, :supplier_id nil, :id #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67", :price_currency "PLN", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:01:52.334Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.335Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:01:52.335Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:01:52.335Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:01:52.335Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:01:52.335Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.336Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f"

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11339091132125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4dc936a6 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-11T13:01:52.336Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11339091132125,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "iPhone 5S", :price_cents 53, :article_name "Mi 8", :is_archived false, :supplier_name "Polaroid", :model_id nil, :supplier_id nil, :id #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f", :price_currency "CAD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "iPhone 5S", :price_cents 53, :article_name "Mi 8", :is_archived false, :supplier_name "Polaroid", :model_id nil, :supplier_id nil, :id #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f", :price_currency "CAD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:01:52.337Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.338Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:01:52.338Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:01:52.339Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:01:52.339Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:01:52.339Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.341Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c"
2023-12-11T13:01:52.342Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:01:52.342Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:01:52.342Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:01:52.342Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Galaxy S7", :price_cents 80, :article_name "Pocophone F1", :is_archived false, :supplier_name "Benq", :model_id nil, :supplier_id nil, :id #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c", :price_currency "INR", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.343Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:01:52.343Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Galaxy S7", :price_cents 80, :article_name "Pocophone F1", :is_archived false, :supplier_name "Benq", :model_id nil, :supplier_id nil, :id #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c", :price_currency "INR", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.343Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:01:52.343Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:01:52.343Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.343Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:01:52.344Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:01:52.344Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:01:52.344Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:01:52.344Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.344Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8"
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Galaxy S7 Edge", :price_cents 9, :article_name "Redmi Note 6 Pro", :is_archived false, :supplier_name "Leica", :model_id nil, :supplier_id nil, :id #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8", :price_currency "TJS", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Galaxy S7 Edge", :price_cents 9, :article_name "Redmi Note 6 Pro", :is_archived false, :supplier_name "Leica", :model_id nil, :supplier_id nil, :id #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8", :price_currency "TJS", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:01:52.345Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:01:52.346Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:01:52.346Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11339087846125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 615, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7ac4e46f /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11339087846125,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"615","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":615,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"adminTemplates","variables":{},"query":"query adminTemplates {\n  main_categories {\n    id\n    name\n    image_url\n    categories {\n      id\n      name\n      templates {\n        id\n        article_name\n        article_number\n        model {\n          id\n          product\n          version\n          __typename\n        }\n        requests_count\n        is_archived\n        price_cents\n        price_currency\n        supplier_name\n        supplier {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:image_url nil] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:templates [#ordered/map ([:id e2cea79b-efb8-4817-bc63-5e6dd0686639] [:article_name Galaxy S1] [:article_number Mate 9] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 8] [:price_currency USD] [:supplier_name Sony] [:supplier nil] [:__typename :Template]) #ordered/map ([:id b0b3e487-2dab-4f8e-8daa-df6aa787cf67] [:article_name Galaxy S9] [:article_number OnePlus 5T] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 83] [:price_currency PLN] [:supplier_name Panasonic] [:supplier nil] [:__typename :Template]) #ordered/map ([:id 72d32fd7-11dc-4f52-b039-94290fc9b36f] [:article_name Mi 8] [:article_number iPhone 5S] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 53] [:price_currency CAD] [:supplier_name Polaroid] [:supplier nil] [:__typename :Template]) #ordered/map ([:id f07aaf9f-bf06-460b-b752-df19bcc6bc7c] [:article_name Pocophone F1] [:article_number Galaxy S7] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 80] [:price_currency INR] [:supplier_name Benq] [:supplier nil] [:__typename :Template]) #ordered/map ([:id 08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8] [:article_name Redmi Note 6 Pro] [:article_number Galaxy S7 Edge] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 9] [:price_currency TJS] [:supplier_name Leica] [:supplier nil] [:__typename :Template])]] [:__typename :Category])]] [:__typename :MainCategory])]])}
2023-12-11T13:01:52.348Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:templates [#ordered/map ([:id "e2cea79b-efb8-4817-bc63-5e6dd0686639"] [:article_name "Galaxy S1"] [:article_number "Mate 9"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 8] [:price_currency "USD"] [:supplier_name "Sony"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "b0b3e487-2dab-4f8e-8daa-df6aa787cf67"] [:article_name "Galaxy S9"] [:article_number "OnePlus 5T"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 83] [:price_currency "PLN"] [:supplier_name "Panasonic"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "72d32fd7-11dc-4f52-b039-94290fc9b36f"] [:article_name "Mi 8"] [:article_number "iPhone 5S"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 53] [:price_currency "CAD"] [:supplier_name "Polaroid"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "f07aaf9f-bf06-460b-b752-df19bcc6bc7c"] [:article_name "Pocophone F1"] [:article_number "Galaxy S7"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 80] [:price_currency "INR"] [:supplier_name "Benq"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8"] [:article_name "Redmi Note 6 Pro"] [:article_number "Galaxy S7 Edge"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 9] [:price_currency "TJS"] [:supplier_name "Leica"] [:supplier nil] [:__typename :Template])]] [:__typename :Category])]] [:__typename :MainCategory])]])}
>>> authenticate::skip= nil  handler-key= :home
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341223069500, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2a484131 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /, :server-name localhost, :handler-key :home, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x557381cc leihs.procurement.backend.html$not_found_handler@557381cc], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :home
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.429Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.430Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.431Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.432Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.432Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.434Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.435Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.435Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 11341304101833, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site cross-site, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x9477b44 /127.0.0.1:3230<->/127.0.0.1:59410], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:54.491Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token >o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
{:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341290724916, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x680fd9fe /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x557381cc leihs.procurement.backend.html$not_found_handler@557381cc], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.508Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.507Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.509Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:54.510Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.510Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester??>o> requester??  [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.512Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
2023-12-11T13:01:54.512Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> requester?? {:exists false}
>myprint>  requester false
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.514Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  44b52974-b9bd-4f89-9a7c-16efd159ee0b
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.518Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.520Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.521Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 11341388552750, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site cross-site, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3d555a46 /127.0.0.1:3230<->/127.0.0.1:59417], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x451b831b compojure.core$routes$fn__27950@451b831b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:54.574Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(NULL AS UUID))"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:54.576Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(NULL AS UUID)) AS result"]
>o> inspector? {:result false}
>myprint>  inspector false
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result]
2023-12-11T13:01:54.577Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(NULL AS UUID)) AS result"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))]
2023-12-11T13:01:54.577Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(NULL AS UUID))"]
>o> requester?? {:exists false}
>myprint>  requester false

> 1 anti-csrf-token >  nil

> 1 anti-csrf-token class >  nil

> 2 anti-csrf-token-new >  f9bdf3c1-bda3-4edb-98c7-b69b294a4ca7
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341500113375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x39e9a2fe /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.700Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.703Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.703Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.704Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:01:54.710Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
2023-12-11T13:01:54.712Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
2023-12-11T13:01:54.713Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
2023-12-11T13:01:54.716Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.730Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.731Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341500113375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x39e9a2fe /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11341500113375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:54.736Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>> authenticate::skip= nil >>> authenticate::skip=  handler-key= nil  handler-key= :graphql:graphql

>>> authenticate::authenticated-entity {>>> authenticate::authenticated-entity :email amelia@rosenbaum.name, :contracts_count {:email amelia@rosenbaum.name, :contracts_count 0, 0, :lastname :lastname Kemmer, Kemmer, :org_id nil:org_id , nil, :scope_read :scope_read true, true, :is_admin :is_admin false, false, :authentication-method :authentication-method :session, :session, :login nil, :login :scope_system_admin_write nil, false, :scope_system_admin_write :scope_write false, true, :scope_write :firstname true, Dawna, :firstname :scope_admin_write false, Dawna, :scope_admin_write :user_session_created_atfalse,  :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z"#time/instant "2023-12-11T13:01:47.151279Z", , :id :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, false:access-rights , :access-rights (()), , :user_id :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70" , false, :is_system_admin :external_sign_out_url false, nil, :external_sign_out_url :language_locale nil, nil, :language_locale :inventory_pool_roles_count nil, :inventory_pool_roles_count 0, :scope_admin_read 0, :scope_admin_read false}false}


>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 
>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {{:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read :authenticated-entity true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341580574458, #time/instant "2023-12-11T13:01:47.151279Z", :params :id {}, :settings #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights {:email_sending_enabled false, (:sessions_max_lifetime_secs ), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin 432000, false, :smtp_default_from_address your.lending.desk@example.com:external_sign_out_url , nil, :public_image_caching_enabled :language_locale nil, true, :inventory_pool_roles_count :sessions_force_secure false0, , :scope_admin_read :deliver_received_order_notifications false}, false, :cookies :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}{, :tx-next leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}#, next.jdbc.default_options.DefaultOptions:remote-addr 127.0.0.1, :start-time 11341580156291, :params {{}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :connectable :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn 0x4ee63b99 HikariDataSource (HikariPool-1)], #object[:options next.jdbc.result_set$as_unqualified_lower_maps {:builder-fn #object[0x35555daa next.jdbc.result_set$as_unqualified_lower_maps next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, #object[content-type org.httpkit.server.AsyncChannel application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache0x5f6cda81 /127.0.0.1:3230<->/127.0.0.1:58957], x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept,  application/json:server-port , 3230, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest:params-raw  empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, {:async-channel }, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding #object[utf8, org.httpkit.server.AsyncChannel :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema 0x11b3a000 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port #CompiledSchema<>3230, , :params-raw :handler #object[leihs.procurement.graphql$handler {}, :tx {:datasource 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params #object[com.zaxxer.hikari.HikariDataSource {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}0x7e82c47d HikariDataSource (db-pool)]}
, 
>> authorize::handler-key >> :graphql
:content-length 502, :form-params >myprint>  authEnt? {}, :websocket? {false, :email amelia@rosenbaum.name:query-params , :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method {}:session, :login , nil, :content-type application/json:scope_system_admin_write , :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, false, :scope_write :server-name true, localhost, :firstname Dawna:handler-key :graphql, :scope_admin_write , false, :query-string nil:user_session_created_at , :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #time/instant "2023-12-11T13:01:47.151279Z", #CompiledSchema<>, :id :handler #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights #object[leihs.procurement.graphql$handler (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> admin? {:exists >o> inspector? false}[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result 
>myprint>  admin false
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.778Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.778Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector >o> inspector?true 
{:result true}
>myprint>  inspector true
>o> viewer? >o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.779Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.779Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.780Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.780Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
2023-12-11T13:01:54.781Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:01:54.781Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.781Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? {:result true}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? 2023-12-11T13:01:54.781Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.781Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? {:result false}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.782Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.782Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
2023-12-11T13:01:54.782Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 
> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1
0x1038c5e0 
> 1 anti-csrf-token class >  leihs.core.locale$wrap$fn__44858@1038c5e0]
java.lang.String

>> authorize::request > 
> 2 anti-csrf-token-new >  {nil
:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341579041625, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x299aa1f1 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:01:54.783Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
pure-handler >> 2
>o> admin? {:exists false}
>myprint>  admin false
2023-12-11T13:01:54.783Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.783Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
pure-handler >> 2
2023-12-11T13:01:54.784Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
>o> inspector? >oo> vars from graphQL-Requst nil nil nil {{}
:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.784Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.784Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
2023-12-11T13:01:54.784Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.784Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.784Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? {:exists false}
2023-12-11T13:01:54.785Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil
2023-12-11T13:01:54.785Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 2
>debug 3
>o> inspector? {:result true}
2023-12-11T13:01:54.785Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.785Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
>o> viewer? {:result false}
2023-12-11T13:01:54.786Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.786Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 5b nil
>o> requester?? {:exists true}
2023-12-11T13:01:54.786Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:01:54.790Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "abc", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.793Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>get-dashboard
>>args {:inspector_priority 2023-12-11T13:01:54.793Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
[:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341580156291, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, >o> requester??accept application/json , accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel {:exists true}
#object[org.httpkit.server.AsyncChannel 0x5f6cda81 /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11341580156291,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"534","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id 549c5a79-74f9-4e6f-8f34-29c7269c28cf] [:name Books & Baby] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65] [:name Sports, Electronics & Health] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c9fe18fe-94c4-4ae0-a78b-c66334d2a98e] [:name Garden, Industrial & Clothing] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 63b0355e-1deb-45af-9fec-de6eac5da9a5] [:name Movies] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id b3d43d27-5592-489c-b51c-fbf31becdc3f] [:name Health, Grocery & Beauty] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 08a3e1f6-09fd-4646-9ba9-f90bb7571661] [:name Kids, Electronics & Music] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c042c5c8-b98c-444d-8914-a517241e2333] [:name Jewelry] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id cd9484a8-22b8-46a7-a330-eaa03766c293] [:name Music & Automotive] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 79e0d424-38a5-4c02-87e1-e819360d16cc] [:name Outdoors & Home] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 6d367b7a-233f-4317-a9b5-64a35109be6c] [:name Electronics & Home] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 29cb5361-738e-449c-b3f3-9b825bab299a] [:name Tools, Baby & Kids] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 13a7000d-7301-444c-8c68-04f0c2799784] [:name Grocery, Electronics & Industrial] [:shortname nil] [:__typename :Organization])]])]])}
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search abc, :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
2023-12-11T13:01:54.794Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "549c5a79-74f9-4e6f-8f34-29c7269c28cf"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c9fe18fe-94c4-4ae0-a78b-c66334d2a98e"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "63b0355e-1deb-45af-9fec-de6eac5da9a5"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "b3d43d27-5592-489c-b51c-fbf31becdc3f"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "08a3e1f6-09fd-4646-9ba9-f90bb7571661"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c042c5c8-b98c-444d-8914-a517241e2333"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "cd9484a8-22b8-46a7-a330-eaa03766c293"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "79e0d424-38a5-4c02-87e1-e819360d16cc"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "6d367b7a-233f-4317-a9b5-64a35109be6c"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "29cb5361-738e-449c-b3f3-9b825bab299a"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "13a7000d-7301-444c-8c68-04f0c2799784"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.795Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.795Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.796Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:01:54.797Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query abc
>o> requests::search-query %abc%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.798Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

>request-grapql _> request {>o> admin? :leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, {:contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :exists :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawnafalse}, 
:scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341580574458, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x11b3a000 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11341580574458,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}
>o> inspector?
>request-grapql _> result => {:data #ordered/map  ([:current_user [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:01:54.799Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.799Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc% %abc%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.808Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:54.808Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:01:54.809Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%" "%abc%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:01:54.847Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id -122439877}
2023-12-11T13:01:54.848Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:01:54.848Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -122439877
2023-12-11T13:01:54.848Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11341579041625, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4138, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x299aa1f1 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4138, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search abc, :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11341579041625,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4138","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4138,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"abc","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -122439877] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T13:01:54.850Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-122439877"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11344929193375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4135, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x274066e9 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4135, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.157Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.158Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.159Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.159Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.159Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.160Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.160Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:01:58.166Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?, ?) ORDER BY end_date DESC #uuid "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" #uuid "186cccc7-7b33-489f-b76e-4e7c97db22e4"]
>>ToCheck dashboard:::procurement_budget_periods.id []
>>resultA1-2 []
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.173Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.173Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.174Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:01:58.174Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query 
>o> requests::search-query %%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.176Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.176Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.178Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.179Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:01:58.179Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:01:58.180Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e" "186cccc7-7b33-489f-b76e-4e7c97db22e4" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:01:58.211Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id 1022635603}
2023-12-11T13:01:58.212Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:01:58.213Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => 1022635603
2023-12-11T13:01:58.213Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ()

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11344929193375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4135, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x274066e9 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4135, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e 186cccc7-7b33-489f-b76e-4e7c97db22e4]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11344929193375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4135","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4135,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["aaff8b99-a0c0-4e41-88f4-75ed40f9bd3e","186cccc7-7b33-489f-b76e-4e7c97db22e4"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey 1022635603] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-11T13:01:58.214Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1022635603"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11367670006375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4096, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6c1ed96a /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4096, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.891Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.892Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.893Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.893Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.894Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.894Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.895Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.895Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:02:20.901Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?) ORDER BY end_date DESC #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]
>>ToCheck dashboard:::procurement_budget_periods.id [{:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}]
>>resultA1-2 [{:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}]
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.909Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.910Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.910Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:02:20.911Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query 
>o> requests::search-query %%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.911Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.913Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:20.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:02:20.915Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:02:20.949Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id -1450285489}
2023-12-11T13:02:20.949Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:02:20.950Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -1450285489
>o> bp {:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}
>oo> 1sum-total-price :total_price_cents (>o> mc {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>o> filter-and-assoc-cats ()
2023-12-11T13:02:20.951Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => [SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>oo> 1sum-total-price :total_price_cents (>o> c {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>o> c {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>o> 2 requests* ()
>oo> 1sum-total-price :total_price_cents ()
>oo> 2sum-total-price :total_price_cents ()
>>1 0

>o> result 1a {:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil} 

{:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil})
>oo> 2sum-total-price :total_price_cents (0)
>>1 0
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:02:20.956Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => [SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID) #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>debug 5b nil

>>ToCheck dashboard::determine-budget-periods {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035} 

{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035})
>oo> 2sum-total-price :total_price_cents (0)
>>1 0
2023-12-11T13:02:20.950Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ({:main_categories ({:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name "Geisha", :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name "Ennarea", :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0", :cost_center nil}), :total_price_cents 0, :cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035"}), :name "BP-in-inspection-phase", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00", :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :total_price_cents 0, :cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :created_at #inst "2023-12-11T09:15:08.890706000-00:00"})

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11367670006375, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4096, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6c1ed96a /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4096, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11367670006375,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4096","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4096,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -1450285489] [:total_count 0] [:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:total_price_cents 0] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:image_url nil] [:total_price_cents 0] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:total_price_cents 0] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
2023-12-11T13:02:20.959Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-1450285489"] [:total_count 0] [:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:total_price_cents "0"] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
>>> authenticate::skip= >>> authenticate::skip= nil nil handler-key=   handler-key= :graphql:graphql

>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, >>> authenticate::authenticated-entity:lastname Kemmer,  :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, {:user_session_created_at :email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", #time/instant "2023-12-11T13:01:47.151279Z":id , :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read :scope_system_admin_read false, :access-rights false, :access-rights (()), , :user_id :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", false, :is_system_admin :external_sign_out_url false, nil, :external_sign_out_url :language_locale nil, :language_locale nil, :inventory_pool_roles_count nil, 0, :scope_admin_read :inventory_pool_roles_count false}0, :scope_admin_read false}


>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 
>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, 0x1038c5e0 :lastname leihs.core.locale$wrap$fn__44858@1038c5e0]Kemmer, :org_id nil, 
:scope_read 
>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count true, 0, :lastname Kemmer, :is_admin :org_id nil, :scope_read false, true, :authentication-method :session, :is_admin :login false, :authentication-method nil, :session, :scope_system_admin_write :login nil, false, :scope_write :scope_system_admin_write false, true, :scope_write true:firstname , Dawna, :firstname :scope_admin_writeDawna,  :scope_admin_write false, false, :user_session_created_at :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", #time/instant "2023-12-11T13:01:47.151279Z", :id:id  #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read :scope_system_admin_read false, false, :access-rights :access-rights (), ():user_id , :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :external_sign_out_url nil, :is_system_admin :language_locale nil, false, :inventory_pool_roles_count :external_sign_out_url nil, 0, :language_locale nil, :scope_admin_read false:inventory_pool_roles_count }, 0, :scope_admin_read :cookies false}, :cookies {leihs-anti-csrf-token {{leihs-anti-csrf-token :value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1{}, :value leihs-user-session 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time :start-time 11372550101125, 11372549508458, :params:params  {}, {}, :settings :settings {{:email_sending_enabled :email_sending_enabled false, false, :sessions_max_lifetime_secs :sessions_max_lifetime_secs 432000, 432000, :smtp_default_from_address :smtp_default_from_address your.lending.desk@example.comyour.lending.desk@example.com, , :public_image_caching_enabled :public_image_caching_enabledtrue,  :sessions_force_secure true, false, :sessions_force_secure :deliver_received_order_notifications false, false, :deliver_received_order_notifications false, :external_base_url nil, :external_base_url :sessions_force_uniqueness nil, false, :sessions_force_uniqueness :email_signature Cheers,false, :email_signature},  :tx-next Cheers,}, :tx-next ##next.jdbc.default_options.DefaultOptionsnext.jdbc.default_options.DefaultOptions{:connectable {#object[:connectable com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[#object[com.zaxxer.hikari.HikariDataSource next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, 0x4ee63b99 HikariDataSource (HikariPool-1)], :query-params-raw :options {}, :route-params nil, :headers {:builder-fn {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, #object[host localhost:3230next.jdbc.result_set$as_unqualified_lower_maps , user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 615, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors0x35555daa , cache-control no-cache}, next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}:async-channel , :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3290bddf /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[org.httpkit.server.AsyncChannel #object[com.zaxxer.hikari.HikariDataSource 0x19cca142 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 0x7e82c47d HikariDataSource (db-pool)]}, 3230, :content-length :params-raw 615, :form-params {}, :tx {}, :websocket? false, :query-params {:datasource {}, :content-type application/json, #object[:form-params-raw com.zaxxer.hikari.HikariDataSource {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body 0x7e82c47d HikariDataSource (db-pool){]}, :operationName adminTemplates, :content-length :variables 502, :form-params {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, {}, :graphql-schema :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, #CompiledSchema<>, :character-encoding utf8, :handler :uri /procure/graphql, :server-name localhost, :handler-key :graphql, #object[:query-string leihs.procurement.graphql$handler nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params #CompiledSchema<>, :handler {}, :scheme :http, :request-method #object[:post, leihs.procurement.graphql$handler :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], >myprint>  authEnt? :multipart-params {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, {:org_id nil, }, :scope_read :scheme :http, true, :request-method :is_admin false:post, :accept , :authentication-method :session, :login {nil, :mime :scope_system_admin_write false, :json, :scope_write true, :charset:firstname Dawna,  :scope_admin_write false, nil, :user_session_created_at :encoding nil, :language nil}}
#time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id 
>> authorize::handler-key >> #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method (:session, ):login nil, , :scope_system_admin_write false, :scope_write true, :user_id :firstname Dawna, :scope_admin_write false, :user_session_created_at #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn ##time/instant "2023-12-11T13:01:47.151279Z", next.jdbc.default_options.DefaultOptions:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", {:user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :connectable :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}#object[
>myprint>  txn com.zaxxer.hikari.HikariDataSource #next.jdbc.default_options.DefaultOptions{:connectable 0x4ee63b99 HikariDataSource (HikariPool-1)], :options #object[com.zaxxer.hikari.HikariDataSource {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin?>o> admin?  [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.764Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.764Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.765Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.765Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
2023-12-11T13:02:25.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.766Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? {:exists false}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.767Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.767Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}2023-12-11T13:02:25.767Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.767Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? 2023-12-11T13:02:25.768Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
{:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
2023-12-11T13:02:25.768Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
2023-12-11T13:02:25.768Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:02:25.771Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
pure-handler >> 2
2023-12-11T13:02:25.771Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
>debug 2
>debug 3
2023-12-11T13:02:25.772Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> >tocheck>
2023-12-11T13:02:25.772Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
2023-12-11T13:02:25.772Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:02:25.775Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.775Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>>>3 nil
>debug 5b nil
2023-12-11T13:02:25.776Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>oo> templates::get-templates2 _> HERE value contains :id??) #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0" {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>oo> templates::get-templates1a ?broken-base-query? {:select [:procurement_templates.*], :from [:procurement_templates], :left-join [:models [:= :models.id :procurement_templates.model_id]], :order-by [[[:concat ([:lower [:coalesce :procurement_templates.article_name ]] [:lower [:coalesce :models.product ]] [:lower [:coalesce :models.version ]])]]]}
>oo> templates::get-templates1b ?broken-base-query? [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC   ]
>oo> templates::get-templates1c [SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"   ]
2023-12-11T13:02:25.777Z NX-41294 DEBUG [leihs.procurement.resources.templates:?] - (sql-format query) => ["SELECT procurement_templates.* FROM procurement_templates LEFT JOIN models ON models.id = procurement_templates.model_id WHERE procurement_templates.category_id = CAST(? AS UUID) ORDER BY CONCAT((LOWER(COALESCE(procurement_templates.article_name, ?)), LOWER(COALESCE(models.product, ?)), LOWER(COALESCE(models.version, ?)))) ASC" #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0" "" "" ""]
2023-12-11T13:02:25.778Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:02:25.778Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:02:25.778Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:02:25.779Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.779Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639"
2023-12-11T13:02:25.780Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:02:25.780Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:02:25.780Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Mate 9", :price_cents 8, :article_name "Galaxy S1", :is_archived false, :supplier_name "Sony", :model_id nil, :supplier_id nil, :id #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639", :price_currency "USD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Mate 9", :price_cents 8, :article_name "Galaxy S1", :is_archived false, :supplier_name "Sony", :model_id nil, :supplier_id nil, :id #uuid "e2cea79b-efb8-4817-bc63-5e6dd0686639", :price_currency "USD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:02:25.781Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:02:25.782Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.782Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67"
2023-12-11T13:02:25.782Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "OnePlus 5T", :price_cents 83, :article_name "Galaxy S9", :is_archived false, :supplier_name "Panasonic", :model_id nil, :supplier_id nil, :id #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67", :price_currency "PLN", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "OnePlus 5T", :price_cents 83, :article_name "Galaxy S9", :is_archived false, :supplier_name "Panasonic", :model_id nil, :supplier_id nil, :id #uuid "b0b3e487-2dab-4f8e-8daa-df6aa787cf67", :price_currency "PLN", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.783Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:02:25.784Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:02:25.784Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:02:25.784Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:02:25.784Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.784Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f"
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "iPhone 5S", :price_cents 53, :article_name "Mi 8", :is_archived false, :supplier_name "Polaroid", :model_id nil, :supplier_id nil, :id #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f", :price_currency "CAD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "iPhone 5S", :price_cents 53, :article_name "Mi 8", :is_archived false, :supplier_name "Polaroid", :model_id nil, :supplier_id nil, :id #uuid "72d32fd7-11dc-4f52-b039-94290fc9b36f", :price_currency "CAD", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:02:25.785Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.786Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:02:25.786Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:02:25.786Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:02:25.786Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:02:25.786Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.786Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.787Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Galaxy S7", :price_cents 80, :article_name "Pocophone F1", :is_archived false, :supplier_name "Benq", :model_id nil, :supplier_id nil, :id #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c", :price_currency "INR", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Galaxy S7", :price_cents 80, :article_name "Pocophone F1", :is_archived false, :supplier_name "Benq", :model_id nil, :supplier_id nil, :id #uuid "f07aaf9f-bf06-460b-b752-df19bcc6bc7c", :price_currency "INR", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
>o> requester?? {:exists true}
2023-12-11T13:02:25.788Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil
2023-12-11T13:02:25.789Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.790Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil
2023-12-11T13:02:25.790Z NX-41294 DEBUG [leihs.procurement.resources.model:36] - (:value value) => nil
2023-12-11T13:02:25.790Z NX-41294 DEBUG [leihs.procurement.resources.model:37] - (:model_id value) => nil

>o> NPE?? model::get-model-by-id id nil
2023-12-11T13:02:25.790Z NX-41294 DEBUG [leihs.procurement.resources.model:26] - id => nil
2023-12-11T13:02:25.790Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (model-query id) => ["SELECT models.* FROM models WHERE models.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.792Z NX-41294 DEBUG [leihs.procurement.resources.model:29] - (jdbc/execute-one! tx (spy (model-query id))) => nil
>o> requests-count tocheck count!!!!! _> id= #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8"
2023-12-11T13:02:25.793Z NX-41294 DEBUG [leihs.procurement.resources.template:195] - (-> (sql/select :%count.*) (sql/from :procurement_requests) (sql/where [:= :template_id [:cast id :uuid]]) sql-format (->> (jdbc/execute-one! tx)) :count) => 1

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11372549508458, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:36] - (-> context :request :tx) => {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d "HikariDataSource (db-pool)"]}
0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x19cca142 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept 2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (-> context :request :tx-next) => #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa "next.jdbc.result_set$as_unqualified_lower_maps@35555daa"]}}
{:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - value => {:article_number "Galaxy S7 Edge", :price_cents 9, :article_name "Redmi Note 6 Pro", :is_archived false, :supplier_name "Leica", :model_id nil, :supplier_id nil, :id #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8", :price_currency "TJS", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:43] - (:value (spy value)) => nil
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - value => {:article_number "Galaxy S7 Edge", :price_cents 9, :article_name "Redmi Note 6 Pro", :is_archived false, :supplier_name "Leica", :model_id nil, :supplier_id nil, :id #uuid "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8", :price_currency "TJS", :category_id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0"}
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:44] - (:supplier_id (spy value)) => nil
>o> tocheck suppliers.id= nil
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:23] - id => nil

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11372549508458,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:?] - (sql-format (sql/where (sql/from (sql/select :suppliers.*) :suppliers) [:= :suppliers.id [:cast (spy id) :uuid]])) => ["SELECT suppliers.* FROM suppliers WHERE suppliers.id = CAST(NULL AS UUID)"]
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-11T13:02:25.794Z NX-41294 DEBUG [leihs.procurement.resources.supplier:40] - (get-supplier-by-id (spy (-> context :request :tx-next)) (or (spy (:value (spy value))) (spy (:supplier_id (spy value))))) => nil

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11372550101125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 615, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/templates/edit, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x3290bddf /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 615, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName adminTemplates, :variables {}, :query query adminTemplates {
  main_categories {
    id
    name
    image_url
    categories {
      id
      name
      templates {
        id
        article_name
        article_number
        model {
          id
          product
          version
          __typename
        }
        requests_count
        is_archived
        price_cents
        price_currency
        supplier_name
        supplier {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11372550101125,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"615","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/templates\/edit","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":615,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"adminTemplates","variables":{},"query":"query adminTemplates {\n  main_categories {\n    id\n    name\n    image_url\n    categories {\n      id\n      name\n      templates {\n        id\n        article_name\n        article_number\n        model {\n          id\n          product\n          version\n          __typename\n        }\n        requests_count\n        is_archived\n        price_cents\n        price_currency\n        supplier_name\n        supplier {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:image_url nil] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:templates [#ordered/map ([:id e2cea79b-efb8-4817-bc63-5e6dd0686639] [:article_name Galaxy S1] [:article_number Mate 9] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 8] [:price_currency USD] [:supplier_name Sony] [:supplier nil] [:__typename :Template]) #ordered/map ([:id b0b3e487-2dab-4f8e-8daa-df6aa787cf67] [:article_name Galaxy S9] [:article_number OnePlus 5T] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 83] [:price_currency PLN] [:supplier_name Panasonic] [:supplier nil] [:__typename :Template]) #ordered/map ([:id 72d32fd7-11dc-4f52-b039-94290fc9b36f] [:article_name Mi 8] [:article_number iPhone 5S] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 53] [:price_currency CAD] [:supplier_name Polaroid] [:supplier nil] [:__typename :Template]) #ordered/map ([:id f07aaf9f-bf06-460b-b752-df19bcc6bc7c] [:article_name Pocophone F1] [:article_number Galaxy S7] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 80] [:price_currency INR] [:supplier_name Benq] [:supplier nil] [:__typename :Template]) #ordered/map ([:id 08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8] [:article_name Redmi Note 6 Pro] [:article_number Galaxy S7 Edge] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 9] [:price_currency TJS] [:supplier_name Leica] [:supplier nil] [:__typename :Template])]] [:__typename :Category])]] [:__typename :MainCategory])]])}
2023-12-11T13:02:25.796Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:image_url nil] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:templates [#ordered/map ([:id "e2cea79b-efb8-4817-bc63-5e6dd0686639"] [:article_name "Galaxy S1"] [:article_number "Mate 9"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 8] [:price_currency "USD"] [:supplier_name "Sony"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "b0b3e487-2dab-4f8e-8daa-df6aa787cf67"] [:article_name "Galaxy S9"] [:article_number "OnePlus 5T"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 83] [:price_currency "PLN"] [:supplier_name "Panasonic"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "72d32fd7-11dc-4f52-b039-94290fc9b36f"] [:article_name "Mi 8"] [:article_number "iPhone 5S"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 53] [:price_currency "CAD"] [:supplier_name "Polaroid"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "f07aaf9f-bf06-460b-b752-df19bcc6bc7c"] [:article_name "Pocophone F1"] [:article_number "Galaxy S7"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 80] [:price_currency "INR"] [:supplier_name "Benq"] [:supplier nil] [:__typename :Template]) #ordered/map ([:id "08f4c5f8-3a2e-4d9b-91b1-c89dbbcb89c8"] [:article_name "Redmi Note 6 Pro"] [:article_number "Galaxy S7 Edge"] [:model nil] [:requests_count 1] [:is_archived false] [:price_cents 9] [:price_currency "TJS"] [:supplier_name "Leica"] [:supplier nil] [:__typename :Template])]] [:__typename :Category])]] [:__typename :MainCategory])]])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", >>> authenticate::skip= :is_system_admin falsenil  handler-key= , :external_sign_out_url :graphqlnil, :language_locale nil, 
:inventory_pool_roles_count 0, >>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}:scope_admin_read 

>> authorize >

>> authorize::handler > false}, :cookies #object[leihs.core.locale$wrap$fn__44858 {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11373829671416, :params {}, 0x1038c5e0 :settings leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {{:authenticated-entity {:email amelia@rosenbaum.name, :email_sending_enabled :contracts_count false, 0, :sessions_max_lifetime_secs :lastname Kemmer, :org_id nil, :scope_read 432000, true, :is_admin :smtp_default_from_address false, your.lending.desk@example.com, :authentication-method :public_image_caching_enabled :session, :login nil, true, :scope_system_admin_write false, :scope_write true:sessions_force_secure false, , :firstname :deliver_received_order_notifications false, Dawna, :external_base_url :scope_admin_write nil, false, :sessions_force_uniqueness :user_session_created_at false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{#time/instant "2023-12-11T13:01:47.151279Z", :id :connectable #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11373829742333, :params {}, #object[:settings com.zaxxer.hikari.HikariDataSource {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable 0x4ee63b99 HikariDataSource (HikariPool-1)], :options #object[com.zaxxer.hikari.HikariDataSource {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw #object[next.jdbc.result_set$as_unqualified_lower_maps {}, :route-params nil, :headers {origin http://localhost:3230, 0x35555daa sec-fetch-site next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}same-origin, , sec-ch-ua-mobile ?0, :query-params-raw host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie {}, leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length:route-params  502, nil, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", :headers sec-ch-ua-platform {"macOS", origin referer http://localhost:3230/procure/requests, http://localhost:3230, sec-fetch-siteconnection keep-alive,  same-originpragma no-cache, , x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, sec-ch-ua-mobile ?0, accept host application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, localhost:3230, accept-encoding gzip, deflate, br, user-agent sec-fetch-mode cors, Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cache-control no-cache}, content-type :async-channel application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel #object[org.httpkit.server.AsyncChannel 0x20cf8f9d /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, 0x54819ae7 :tx /127.0.0.1:3230<->/127.0.0.1:58840], {:server-port :datasource 3230, :params-raw #object[com.zaxxer.hikari.HikariDataSource {}, :tx {:datasource #object[0x7e82c47d HikariDataSource (db-pool)]}com.zaxxer.hikari.HikariDataSource , :content-length 502, :form-params {}, :websocket? false, 0x7e82c47d HikariDataSource (db-pool):query-params ]}, {}, :content-length :content-type 534, application/json, :form-params :form-params-raw {}, :websocket? {}, false, :query-params :character-encoding utf8, :uri /procure/graphql, :server-name localhost, {}, :handler-key :content-type application/json, :graphql, :form-params-raw :query-string {}, nil, :character-encoding utf8, :body :uri /procure/graphql, :server-name localhost, :handler-key :graphql, {:query-string :operationName me, nil, :variables :body {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema {:operationName RequestFilters, :variables {}, :query #CompiledSchema<>, query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :handler :graphql-schema #object[leihs.procurement.graphql$handler #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, 0x3f343f5e :scheme :http, leihs.procurement.graphql$handler@3f343f5e], :request-method :multipart-params :post, :accept {}, :scheme :http, :request-method :post, {:accept :mime :json, :charset nil, :encoding nil, {:language nil}:mime :json, }:charset 
nil, :encoding nil
>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at , :language nil}}
#time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id 
>> authorize::handler-key >> #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read :graphql
false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}>myprint>  
authEnt? {>myprint>  :email txn amelia@rosenbaum.name, :contracts_count #next.jdbc.default_options.DefaultOptions0, :lastname Kemmer, :org_id nil, :scope_read {true, :is_admin false, :authentication-method :session, :login nil, :connectable :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}#time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights 
(), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? >o> admin? [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.033Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.033Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector?>o> inspector?  [[SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]#uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

2023-12-11T13:02:27.034Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.034Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}>o> inspector?
 {>myprint>  inspector :result true
true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.035Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.035Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
2023-12-11T13:02:27.035Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.035Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.036Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:02:27.036Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.036Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
2023-12-11T13:02:27.036Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.036Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? {:result false}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin 2023-12-11T13:02:27.037Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.037Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11373829505041, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, >o> viewer? :email_signature Cheers,}, :tx-next {:result #false}
next.jdbc.default_options.DefaultOptions{>o> requester?? :connectable {:exists true}
#object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4096, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel >o> requester?? #object[[org.httpkit.server.AsyncChannel SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
0x449b8da5 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4096, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint> 2023-12-11T13:02:27.037Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
 authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> requester?? {:exists true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.037Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
2023-12-11T13:02:27.039Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
pure-handler >> 2
2023-12-11T13:02:27.039Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
>oo> vars from graphQL-Requst nil nil nil {}
>o> inspector? {:result true}
>myprint>  inspector true
pure-handler >> 2
>>>1 #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo >tocheck user2
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.039Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
2023-12-11T13:02:27.039Z NX-41294 DEBUG [leihs.procurement.resources.user:86] - id => #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>oo> vars from graphQL-Requst nil nil nil>o> >tocheck> 
{}
2023-12-11T13:02:27.039Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.040Z NX-41294 DEBUG [leihs.procurement.resources.user:?] - (sql-format (sql/where user-base-query [:= :id [:cast id :uuid]])) => ["SELECT id, firstname, lastname FROM users WHERE id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.040Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>2 {:id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :firstname Dawna, :lastname Kemmer}
>>oida>> #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.041Z NX-41294 DEBUG [leihs.procurement.resources.saved-filters:19] - (-> (sql/select :*) (sql/from :procurement_users_filters) (sql/where [:= :user_id [:cast user-id :uuid]]) sql-format) => ["SELECT * FROM procurement_users_filters WHERE user_id = CAST(? AS UUID)" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.041Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>>>3 nil
>debug 2
>debug 3
2023-12-11T13:02:27.042Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.043Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 4
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
>o> inspector? {:result true}
2023-12-11T13:02:27.044Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID)" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>debug 5b nil
2023-12-11T13:02:27.045Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.045Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11373829742333, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x54819ae7 /127.0.0.1:3230<->/127.0.0.1:58840], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
pure-handler >> 2
2023-12-11T13:02:27.051Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [NORMAL HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11373829742333,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"534","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id 549c5a79-74f9-4e6f-8f34-29c7269c28cf] [:name Books & Baby] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65] [:name Sports, Electronics & Health] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c9fe18fe-94c4-4ae0-a78b-c66334d2a98e] [:name Garden, Industrial & Clothing] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 63b0355e-1deb-45af-9fec-de6eac5da9a5] [:name Movies] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id b3d43d27-5592-489c-b51c-fbf31becdc3f] [:name Health, Grocery & Beauty] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 08a3e1f6-09fd-4646-9ba9-f90bb7571661] [:name Kids, Electronics & Music] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id c042c5c8-b98c-444d-8914-a517241e2333] [:name Jewelry] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id cd9484a8-22b8-46a7-a330-eaa03766c293] [:name Music & Automotive] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 79e0d424-38a5-4c02-87e1-e819360d16cc] [:name Outdoors & Home] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 6d367b7a-233f-4317-a9b5-64a35109be6c] [:name Electronics & Home] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 29cb5361-738e-449c-b3f3-9b825bab299a] [:name Tools, Baby & Kids] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 13a7000d-7301-444c-8c68-04f0c2799784] [:name Grocery, Electronics & Industrial] [:shortname nil] [:__typename :Organization])]])]])}
2023-12-11T13:02:27.052Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "549c5a79-74f9-4e6f-8f34-29c7269c28cf"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "5e4c5b1e-2c4e-43ba-aad2-5d10e856ae65"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c9fe18fe-94c4-4ae0-a78b-c66334d2a98e"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "63b0355e-1deb-45af-9fec-de6eac5da9a5"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "b3d43d27-5592-489c-b51c-fbf31becdc3f"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "08a3e1f6-09fd-4646-9ba9-f90bb7571661"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "c042c5c8-b98c-444d-8914-a517241e2333"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "cd9484a8-22b8-46a7-a330-eaa03766c293"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "79e0d424-38a5-4c02-87e1-e819360d16cc"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "6d367b7a-233f-4317-a9b5-64a35109be6c"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "29cb5361-738e-449c-b3f3-9b825bab299a"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "13a7000d-7301-444c-8c68-04f0c2799784"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.052Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.053Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11373829671416, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x20cf8f9d /127.0.0.1:3230<->/127.0.0.1:58957], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state 
>request-c-grapql _> request (json) [:NEW :APPROVED {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11373829671416,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}:PARTIALLY_APPROVED :DENIED], 
:order_status [
>request-grapql _> result => {:data #ordered/map :NOT_PROCESSED( [:current_user #ordered/map :IN_PROGRESS ([:PROCURED :navbarProps :ALTERNATIVE_PROCURED {"csrfToken":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"33019487-6bff-402c-8c03-3bf6cbc28a70","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] :NOT_PROCURED][, :user #ordered/map ([:id 33019487-6bff-402c-8c03-3bf6cbc28a70] :search [:firstname Dawna] [, :lastname Kemmer] :priority [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [[#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
:NORMAL :HIGH], :budget_period_id [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3], :category_id []}
>>value nil
2023-12-11T13:02:27.061Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"dc7e186c-6046-4dce-9a37-5d14ea14e0e1\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"33019487-6bff-402c-8c03-3bf6cbc28a70\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "33019487-6bff-402c-8c03-3bf6cbc28a70"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?) ORDER BY end_date DESC #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]
>>ToCheck dashboard:::procurement_budget_periods.id [{:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}]
>>resultA1-2 [{:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}]
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:NORMAL :HIGH]
>oo> helper3b priority (>debug> 1a
>debug> 1a
normal high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.064Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.064Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.065Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:02:27.065Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (normal high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query 
>o> requests::search-query %%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.066Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.067Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae normal high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.068Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.069Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:27.069Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:02:27.070Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?, ?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "normal" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:02:27.098Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id -1450285489}
2023-12-11T13:02:27.098Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:02:27.098Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => -1450285489
>o> bp {:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}
>oo> 1sum-total-price :total_price_cents (>o> mc {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>o> filter-and-assoc-cats ()
2023-12-11T13:02:27.098Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => [SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>oo> 1sum-total-price :total_price_cents (>o> c {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>o> c {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>o> 2 requests* ()
>oo> 1sum-total-price :total_price_cents ()
>oo> 2sum-total-price :total_price_cents ()
>>1 0

>o> result 1a {:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil} 

{:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil})
>oo> 2sum-total-price :total_price_cents (0)
>>1 0
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:02:27.099Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => [SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID) #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>debug 5b nil

>>ToCheck dashboard::determine-budget-periods {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035} 

{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035})
>oo> 2sum-total-price :total_price_cents (0)
>>1 0
2023-12-11T13:02:27.098Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ({:main_categories ({:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name "Geisha", :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name "Ennarea", :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0", :cost_center nil}), :total_price_cents 0, :cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035"}), :name "BP-in-inspection-phase", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00", :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :total_price_cents 0, :cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :created_at #inst "2023-12-11T09:15:08.890706000-00:00"})

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11373829505041, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4096, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x449b8da5 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4096, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [NORMAL HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11373829505041,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4096","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4096,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -1450285489] [:total_count 0] [:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:total_price_cents 0] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:image_url nil] [:total_price_cents 0] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:cacheKey -1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:total_price_cents 0] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
2023-12-11T13:02:27.101Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-1450285489"] [:total_count 0] [:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:cacheKey "-1450285489_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:total_price_cents "0"] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44858 0x1038c5e0 leihs.core.locale$wrap$fn__44858@1038c5e0]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11381731019416, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4087, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7c3558c4 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4087, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.946Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>myprint>  admin false
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.946Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>myprint>  inspector true
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.947Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>myprint>  viewer false
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.950Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}
>myprint>  requester true
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.950Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.951Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.951Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> requester?? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.951Z NX-41294 DEBUG [leihs.procurement.permissions.user:164] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> requester?? {:exists true}

> 1 anti-csrf-token >  dc7e186c-6046-4dce-9a37-5d14ea14e0e1

> 1 anti-csrf-token class >  java.lang.String

> 2 anti-csrf-token-new >  nil
pure-handler >> 2
2023-12-11T13:02:34.957Z NX-41294 DEBUG [leihs.procurement.graphql:46] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "", :organizations ["9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae"], :categories [], :priority ["HIGH"], :budgetPeriods ["ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]}
>oo> vars from graphQL-Requst [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED] [HIGH] [LOW MEDIUM HIGH MANDATORY] {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:HIGH], :budget_period_id [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats [{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}]
>>queryA1 [SELECT * FROM procurement_budget_periods WHERE procurement_budget_periods.id IN (?) ORDER BY end_date DESC #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]
>>ToCheck dashboard:::procurement_budget_periods.id [{:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}]
>>resultA1-2 [{:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}]
>>requestsB2-triggerError {:inspector_priority [:LOW :MEDIUM :HIGH :MANDATORY], :organization_id [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:HIGH], :budget_period_id [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3], :category_id []} nil
>debug> 50
>oo> get-requests nil
>oo> requests-query-map nil
>o> helper1 id= nil
>o> helper2 [] [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae]
>oo> helper3a priority [:HIGH]
>oo> helper3b priority (>debug> 1a
high)
>oo> helper4a inspector-priority nil
>oo> helper4b inspector-priority (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
low medium high mandatory)
>o> helper5
>oo> helper5a :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED]
>oo> helper5b :order_status (>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
>debug> 1a
not_processed in_progress procured alternative_procured not_procured)
>oo> helper5c :order_status java.lang.String
>oo> order-status (not_processed in_progress procured alternative_procured not_procured)
>o> helper6
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.965Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.967Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.968Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> helper7 true
>debug> 9b
>o> requests-base-query-with-state
>debug> 8c
>o> state-sql true
>o> s-map  {:NEW [:= :procurement_requests.approved_quantity nil], :APPROVED [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity], :PARTIALLY_APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]], :DENIED [:= :procurement_requests.approved_quantity 0]}
>o>map-4 (>o> map NEW
>o> map [:= :procurement_requests.approved_quantity nil]
:case >o> map NEW
[:= :procurement_requests.approved_quantity nil] >o> map APPROVED
>o> map [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity]
NEW >o> map APPROVED
[:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] >o> map PARTIALLY_APPROVED
>o> map [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]]
APPROVED >o> map PARTIALLY_APPROVED
[:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] >o> map DENIED
>o> map [:= :procurement_requests.approved_quantity 0]
PARTIALLY_APPROVED >o> map DENIED
[:= :procurement_requests.approved_quantity 0] DENIED)
>o>map-5 (:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)
2023-12-11T13:02:34.969Z NX-41294 DEBUG [leihs.procurement.resources.request:184] - result => [[(:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED")]]
>o> join-and-nest-associated-resources {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> join-and-nest-budget-periods
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
>o> join-and-nest-categories
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]]}
>o> tbl :models
>o> nest-key :model
>o> join-and-nest-templates
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]]], :from [:procurement_requests], :left-join [:models [:= :models.id :procurement_requests.model_id]], :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]]}
>o> tbl :procurement_templates
>o> nest-key :template
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :suppliers
>o> nest-key :supplier
>o> join-and-nest-users
>o> sqlmap {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o> tbl :users
>o> nest-key :user
>o> helper8
>oo> helper8 (not_processed in_progress procured alternative_procured not_procured) (low medium high mandatory) (high)
>oo> helper9 {:select [[[:raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*]] [[[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED)]] :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] [[:raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category]] [[[:row_to_json :models]] :model] [[:raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization]] [[[:row_to_json :procurement_templates]] :template] [[:raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room]] [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))]]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [[:> :current_date :end_date] :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]]}
>o>> where [:in :procurement_requests.id [:cast id :uuid]]) nil
>debug> 2
>oo> >here> to-name-and-lower-case-enums (not_processed in_progress procured alternative_procured not_procured)
>oo> search-query 
>o> requests::search-query %%
>o> apply-scope #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.970Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.970Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> abc [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>debug> 23d
>o> HERE query-requests, auth-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>o> query-requests, query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3 9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae high low medium high mandatory 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
>o> viewer? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.971Z NX-41294 DEBUG [leihs.procurement.permissions.user:80] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> viewer? {:result false}
>o> inspector? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.972Z NX-41294 DEBUG [leihs.procurement.permissions.user:57] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = CAST(? AS UUID)) AS result" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> inspector? {:result true}
>o> admin? [SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID)) #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
2023-12-11T13:02:34.972Z NX-41294 DEBUG [leihs.procurement.permissions.user:33] - query => ["SELECT EXISTS (SELECT TRUE AS exists FROM procurement_admins WHERE procurement_admins.user_id = CAST(? AS UUID))" #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70"]
>o> admin? {:exists false}
2023-12-11T13:02:34.972Z NX-41294 DEBUG [leihs.procurement.resources.request:546] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, ((CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END)) AS state, (ROW_TO_JSON(procurement_budget_periods_2)) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, (ROW_TO_JSON(models)) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, (ROW_TO_JSON(procurement_templates)) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, (ROW_TO_JSON(suppliers)) AS supplier, (ROW_TO_JSON(users)) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) AS procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations AS procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE) AND (procurement_requests.budget_period_id IN (CAST(? AS UUID))) AND (procurement_requests.organization_id IN (CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID), CAST(? AS UUID))) AND (procurement_requests.priority IN (?)) AND (procurement_requests.inspector_priority IN (?, ?, ?, ?)) AND ((procurement_requests.approved_quantity IS NULL) OR (procurement_requests.approved_quantity >= procurement_requests.requested_quantity) OR ((procurement_requests.approved_quantity < procurement_requests.requested_quantity) AND (procurement_requests.approved_quantity > ?)) OR (procurement_requests.approved_quantity = ?)) AND (procurement_requests.order_status IN (CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM), CAST(? AS ORDER_STATUS_ENUM))) AND ((buildings.name ILIKE ?) OR (procurement_requests.short_id ILIKE ?) OR (procurement_requests.article_name ILIKE ?) OR (procurement_requests.article_number ILIKE ?) OR (procurement_requests.inspection_comment ILIKE ?) OR (procurement_requests.order_comment ILIKE ?) OR (procurement_requests.motivation ILIKE ?) OR (procurement_requests.receiver ILIKE ?) OR (procurement_requests.supplier_name ILIKE ?) OR (rooms.name ILIKE ?) OR (models.product ILIKE ?) OR (models.version ILIKE ?) OR (users.firstname ILIKE ?) OR (users.lastname ILIKE ?)) ORDER BY procurement_requests.id ASC, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) ASC" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3" "9465c0d7-fda6-4a28-8482-f19047127964" "ade586cb-80d8-4c93-9a34-042eaa426bd5" "32d74dbf-9308-42fc-b66b-9889c2af2c73" "6fa6a22f-c444-4083-af19-7bb720d050ae" "high" "low" "medium" "high" "mandatory" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%"]
>o> >o> HERE :row-fn ()
2023-12-11T13:02:35.005Z NX-41294 DEBUG [leihs.procurement.resources.request:551] - result => ()
>o>dashboard-cache-keyB2 {:id 1418295230}
2023-12-11T13:02:35.005Z NX-41294 DEBUG [leihs.procurement.dashboard:228] - (count requests) => 0
2023-12-11T13:02:35.005Z NX-41294 DEBUG [leihs.procurement.dashboard:229] - (cache-key dashboard-cache-key) => 1418295230
>o> bp {:id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :name BP-in-inspection-phase, :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :created_at #inst "2023-12-11T09:15:08.890706000-00:00", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00"}
>oo> 1sum-total-price :total_price_cents (>o> mc {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha}
>o> filter-and-assoc-cats ()
2023-12-11T13:02:35.005Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql-format (sql/where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => [SELECT procurement_categories.* FROM procurement_categories WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>oo> 1sum-total-price :total_price_cents (>o> c {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>o> c {:id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :name Ennarea, :main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :general_ledger_account nil, :cost_center nil, :procurement_account nil}
>o> 2 requests* ()
>oo> 1sum-total-price :total_price_cents ()
>oo> 2sum-total-price :total_price_cents ()
>>1 0

>o> result 1a {:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil} 

{:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil})
>oo> 2sum-total-price :total_price_cents (0)
>>1 0
>debug 5 {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035}
>debug 5a id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"
2023-12-11T13:02:35.006Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql-format (image/image-query-for-main-category (:id mc))) => [SELECT procurement_images.* FROM procurement_images WHERE procurement_images.main_category_id = CAST(? AS UUID) #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"]
>debug 5b nil

>>ToCheck dashboard::determine-budget-periods {:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035} 

{:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Geisha, :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name Ennarea, :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0, :cost_center nil}), :total_price_cents 0, :cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035})
>oo> 2sum-total-price :total_price_cents (0)
>>1 0
2023-12-11T13:02:35.005Z NX-41294 DEBUG [leihs.procurement.dashboard:230] - (determine-budget-periods requests tx dashboard-cache-key main-cats bps) => ({:main_categories ({:id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name "Geisha", :categories ({:main_category_id #uuid "a40bf28f-6eea-46b5-8a2d-63cb1afb5035", :name "Ennarea", :requests (), :general_ledger_account nil, :id #uuid "282c1f70-201c-489e-88a3-39b0c3f059a0", :total_price_cents 0, :procurement_account nil, :cacheKey "1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0", :cost_center nil}), :total_price_cents 0, :cacheKey "1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035"}), :name "BP-in-inspection-phase", :updated_at #inst "2023-12-11T09:15:08.890706000-00:00", :inspection_start_date #inst "2023-12-09T23:00:00.000000000-00:00", :end_date #inst "2024-01-10T23:00:00.000000000-00:00", :id #uuid "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :total_price_cents 0, :cacheKey "1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3", :created_at #inst "2023-12-11T09:15:08.890706000-00:00"})

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-11T13:01:47.151279Z", :id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :user_session_id #uuid "98424825-a05c-437c-b09c-9a874c40be46", :scope_system_admin_read false, :access-rights (), :user_id #uuid "33019487-6bff-402c-8c03-3bf6cbc28a70", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value dc7e186c-6046-4dce-9a37-5d14ea14e0e1}, leihs-user-session {:value 2645d507-d404-4db0-852e-0ec73c87f7e1}}, :remote-addr 127.0.0.1, :start-time 11381731019416, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x4ee63b99 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x35555daa next.jdbc.result_set$as_unqualified_lower_maps@35555daa]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1, content-length 4087, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token dc7e186c-6046-4dce-9a37-5d14ea14e0e1, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7c3558c4 /127.0.0.1:3230<->/127.0.0.1:59381], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e82c47d HikariDataSource (db-pool)]}, :content-length 4087, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [9465c0d7-fda6-4a28-8482-f19047127964 ade586cb-80d8-4c93-9a34-042eaa426bd5 32d74dbf-9308-42fc-b66b-9889c2af2c73 6fa6a22f-c444-4083-af19-7bb720d050ae], :categories [], :priority [HIGH], :budgetPeriods [ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x3f343f5e leihs.procurement.graphql$handler@3f343f5e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-11T13:01:47.151279Z","id":"33019487-6bff-402c-8c03-3bf6cbc28a70","user_session_id":"98424825-a05c-437c-b09c-9a874c40be46","scope_system_admin_read":false,"access-rights":[],"user_id":"33019487-6bff-402c-8c03-3bf6cbc28a70","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1"},"leihs-user-session":{"value":"2645d507-d404-4db0-852e-0ec73c87f7e1"}},"remote-addr":"127.0.0.1","start-time":11381731019416,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=dc7e186c-6046-4dce-9a37-5d14ea14e0e1; leihs-user-session=2645d507-d404-4db0-852e-0ec73c87f7e1","content-length":"4087","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"dc7e186c-6046-4dce-9a37-5d14ea14e0e1","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":4087,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MEDIUM","HIGH","MANDATORY"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"","organizations":["9465c0d7-fda6-4a28-8482-f19047127964","ade586cb-80d8-4c93-9a34-042eaa426bd5","32d74dbf-9308-42fc-b66b-9889c2af2c73","6fa6a22f-c444-4083-af19-7bb720d050ae"],"categories":[],"priority":["HIGH"],"budgetPeriods":["ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey 1418295230] [:total_count 0] [:budget_periods [#ordered/map ([:id ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-10 00:00:00.0] [:end_date 2024-01-11 00:00:00.0] [:total_price_cents 0] [:main_categories [#ordered/map ([:id a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035] [:name Geisha] [:image_url nil] [:total_price_cents 0] [:categories [#ordered/map ([:id 282c1f70-201c-489e-88a3-39b0c3f059a0] [:cacheKey 1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0] [:name Ennarea] [:total_price_cents 0] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}
2023-12-11T13:02:35.007Z NX-41294 DEBUG [leihs.procurement.graphql:86] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1418295230"] [:total_count 0] [:budget_periods [#ordered/map ([:id "ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:cacheKey "1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-10 00:00:00.0"] [:end_date "2024-01-11 00:00:00.0"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:cacheKey "1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035"] [:name "Geisha"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "282c1f70-201c-489e-88a3-39b0c3f059a0"] [:cacheKey "1418295230_ebc0f610-ac1f-40cb-bc7a-f7eb9cf73ad3_a40bf28f-6eea-46b5-8a2d-63cb1afb5035_282c1f70-201c-489e-88a3-39b0c3f059a0"] [:name "Ennarea"] [:total_price_cents "0"] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}

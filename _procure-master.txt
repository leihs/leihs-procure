>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 96159061460416, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site none, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, sec-fetch-user ?1, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2f679ceb /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x21b89d0d compojure.core$routes$fn__27950@21b89d0d], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:25.502Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.503Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:25.508Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.509Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  inspector false
2023-12-24T21:28:25.515Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.516Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:25.523Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.523Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:25.523Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-24T21:28:25.564Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 200, :headers {"Content-Type" "text/html; charset=utf-8"}, :body "<!DOCTYPE html>\n<html><head><style>body { font-family: sans-serif; width: 400px; margin: 2rem auto; text-align: center; }\n             * { margin: 0.5rem; }\n             input { width: 15rem; }\n             .message { background-color: pink; padding: 1rem; }</style></head><body><h1>Leihs Simple Login</h1><p>For testing only</p><form action=\"/sign-in\" class=\"ui-form-signin\" method=\"POST\"><div><label>Username<input name=\"user\" type=\"text\"></label></div><div><label>Password<input name=\"password\" type=\"password\" value=\"\"></label></div><input name=\"csrf-token\" type=\"hidden\" value=\"d4057d44-aa94-4f50-a37e-a396dab45ea2\"><div><button type=\"submit\">Continue</button></div></form></body></html>", :cookies {"leihs-anti-csrf-token" {:value "d4057d44-aa94-4f50-a37e-a396dab45ea2", :http-only false, :path "/", :secure false}}}
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}}, :remote-addr 127.0.0.1, :start-time 96159237235125, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2, referer http://localhost:3230/sign-in, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6dc23bc2 /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x21b89d0d compojure.core$routes$fn__27950@21b89d0d], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:25.631Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.631Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:25.631Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.631Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  inspector false
2023-12-24T21:28:25.632Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.632Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:25.632Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.632Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:25.632Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-24T21:28:25.638Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 200, :headers {"Content-Type" "text/html; charset=utf-8"}, :body "<!DOCTYPE html>\n<html><head><style>body { font-family: sans-serif; width: 400px; margin: 2rem auto; text-align: center; }\n             * { margin: 0.5rem; }\n             input { width: 15rem; }\n             .message { background-color: pink; padding: 1rem; }</style></head><body><h1>Leihs Simple Login</h1><p>For testing only</p><form action=\"/sign-in\" class=\"ui-form-signin\" method=\"POST\"><div><label>Username<input name=\"user\" type=\"text\"></label></div><div><label>Password<input name=\"password\" type=\"password\" value=\"\"></label></div><input name=\"csrf-token\" type=\"hidden\" value=\"d4057d44-aa94-4f50-a37e-a396dab45ea2\"><input name=\"return-to\" type=\"hidden\" value=\"/favicon.ico\"><div><button type=\"submit\">Continue</button></div></form></body></html>"}
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}}, :remote-addr 127.0.0.1, :start-time 96159350657458, :params {:user krysta@kihn.io, :password nil, :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x70f1864f HikariProxyConnection@1894876751 wrapping org.postgresql.jdbc.PgConnection@783e5621], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2, content-length 79, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5447bbf9 /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {:user krysta@kihn.io, :password , :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0xdc1b14d HikariProxyConnection@230797645 wrapping org.postgresql.jdbc.PgConnection@55102fca], :level 1, :rollback #object[clojure.lang.Atom 0x292f08d9 {:status :ready, :val false}]}, :content-length 79, :form-params {:user krysta@kihn.io, :password nil, :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user krysta@kihn.io, :password , :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x40dee676 BytesInputStream[len=79]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x21b89d0d compojure.core$routes$fn__27950@21b89d0d], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0xdc1b14d HikariProxyConnection@230797645 wrapping org.postgresql.jdbc.PgConnection@55102fca], :level 1, :rollback #object[clojure.lang.Atom 0x292f08d9 {:status :ready, :val false}]}
2023-12-24T21:28:25.749Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.749Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:25.751Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.751Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  inspector false
2023-12-24T21:28:25.753Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.753Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:25.754Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.754Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:25.754Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-24T21:28:25.777Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 200, :headers {"Content-Type" "text/html; charset=utf-8"}, :body "<!DOCTYPE html>\n<html><head><style>body { font-family: sans-serif; width: 400px; margin: 2rem auto; text-align: center; }\n             * { margin: 0.5rem; }\n             input { width: 15rem; }\n             .message { background-color: pink; padding: 1rem; }</style></head><body><h1>Leihs Simple Login</h1><p>For testing only</p><form action=\"/sign-in\" class=\"ui-form-signin\" method=\"POST\"><div><label>Username<input name=\"user\" type=\"text\" value=\"krysta@kihn.io\"></label></div><div><label>Password<input name=\"password\" type=\"password\" value=\"\"></label></div><input name=\"csrf-token\" type=\"hidden\" value=\"d4057d44-aa94-4f50-a37e-a396dab45ea2\"><div><button type=\"submit\">Continue</button></div></form></body></html>"}
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}}, :remote-addr 127.0.0.1, :start-time 96159448827125, :params {:user krysta@kihn.io, :password password, :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x1b1d18d7 HikariProxyConnection@454891735 wrapping org.postgresql.jdbc.PgConnection@3577a010], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2, content-length 87, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6d8506c4 /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {:user krysta@kihn.io, :password password, :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x1bdb534e HikariProxyConnection@467358542 wrapping org.postgresql.jdbc.PgConnection@66a17058], :level 1, :rollback #object[clojure.lang.Atom 0x381870ea {:status :ready, :val false}]}, :content-length 87, :form-params {:user krysta@kihn.io, :password password, :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user krysta@kihn.io, :password password, :csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x4bb00c9e BytesInputStream[len=87]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x21b89d0d compojure.core$routes$fn__27950@21b89d0d], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
>myprint>  authEnt? nil
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x1bdb534e HikariProxyConnection@467358542 wrapping org.postgresql.jdbc.PgConnection@66a17058], :level 1, :rollback #object[clojure.lang.Atom 0x381870ea {:status :ready, :val false}]}
2023-12-24T21:28:25.844Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.844Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:25.844Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.844Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  inspector false
2023-12-24T21:28:25.845Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.845Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:25.847Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.847Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:25.847Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-24T21:28:25.887Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 302, :headers {"Location" "/procure"}, :body "", :cookies {"leihs-user-session" {:value "10109c54-a43c-470e-9659-22d36eb4b97f", :http-only true, :max-age 307584000, :path "/", :secure false}, "leihs-user-locale" {:value nil, :path "/", :max-age 0}}}
>>> authenticate::skip= nil  handler-key= :procurement
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96159500894708, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, sec-fetch-user ?1, referer http://localhost:3230/sign-in, connection keep-alive, upgrade-insecure-requests 1, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate}, :async-channel #object[org.httpkit.server.AsyncChannel 0x50668d8d /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure, :server-name localhost, :handler-key :procurement, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x100f59f4 leihs.procurement.backend.html$not_found_handler@100f59f4], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :procurement
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:25.910Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.910Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:25.911Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:25.911Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:25.911Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.911Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:25.912Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.912Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:25.912Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:25.913Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.913Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:25.913Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:25.913Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:25.914Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.914Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:25.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:25.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:25.915Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:25.916Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 404, :headers {"Content-Length" "2299", "Last-Modified" "Fri, 15 Dec 2023 18:18:57 GMT", "Content-Type" "text/html"}, :body #object[java.io.File 0x606280c6 "/Users/mradl/repos/leihs/procure/server/resources/public/procure/client/index.html"]}
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96159721081750, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, referer http://localhost:3230/procure, connection keep-alive, accept image/avif,image/webp,*/*, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5a62a6ad /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure/favicon.ico, :server-name localhost, :handler-key :not-found, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x100f59f4 leihs.procurement.backend.html$not_found_handler@100f59f4], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :not-found
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.124Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.124Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:26.124Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.124Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:26.125Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.125Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:26.125Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.125Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:26.125Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96159725554458, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 502, referer http://localhost:3230/procure, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x108968ce /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:26.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.126Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.127Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:26.128Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.128Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:26.128Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:26.128Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.128Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 404, :headers {"Content-Length" "2299", "Last-Modified" "Fri, 15 Dec 2023 18:18:57 GMT", "Content-Type" "text/html"}, :body #object[java.io.File 0x41c62f06 "/Users/mradl/repos/leihs/procure/server/resources/public/procure/client/index.html"]}
2023-12-24T21:28:26.128Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.129Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.129Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.129Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.129Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.130Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.130Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.130Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:26.131Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
2023-12-24T21:28:26.144Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.144Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.144Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.144Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.187Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"d4057d44-aa94-4f50-a37e-a396dab45ea2\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e7ad4a46-cf62-4c7d-84c7-38dacdd078b0\",\"firstname\":\"Jimmie\",\"lastname\":\"Koss\",\"login\":null,\"email\":\"krysta@kihn.io\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0"] [:firstname "Jimmie"] [:lastname "Koss"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96159890539000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 534, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7cff3e14 /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96159890907625, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 502, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4e4c138a /127.0.0.1:3230<->/127.0.0.1:55019], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:26.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:26.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.291Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:26.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:26.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:26.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.292Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer >>> authenticate::skip= falsenil
 handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96159889647041, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 3575, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x1080b21b /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 3575, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, 2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
:variables {}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id 2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
#uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", >myprint> :user_session_id  #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", requester :scope_system_admin_read false, false:access-rights
(), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:26.293Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.294Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.295Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.296Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
2023-12-24T21:28:26.296Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
 with variables {}
2023-12-24T21:28:26.296Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.296Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.296Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.296Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.297Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.297Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.297Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:26.299Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {}
2023-12-24T21:28:26.303Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.303Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.304Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.304Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.306Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"d4057d44-aa94-4f50-a37e-a396dab45ea2\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e7ad4a46-cf62-4c7d-84c7-38dacdd078b0\",\"firstname\":\"Jimmie\",\"lastname\":\"Koss\",\"login\":null,\"email\":\"krysta@kihn.io\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0"] [:firstname "Jimmie"] [:lastname "Koss"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}}
>debug 2
>debug 3
2023-12-24T21:28:26.323Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories  ORDER BY procurement_main_categories.name ASC"]
2023-12-24T21:28:26.323Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.323Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>debug 4
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.324Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.324Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.324Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource 2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
#object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:26.325Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:26.326Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:26.326Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:26.326Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
2023-12-24T21:28:26.326Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.326Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.327Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.327Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.328Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.328Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.329Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:26.343Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:budget_periods [#ordered/map ([:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:name "Requesting"] [:inspection_start_date "2024-02-23T23:00:00Z"] [:end_date "2024-03-23T23:00:00Z"] [:__typename :BudgetPeriod]) #ordered/map ([:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:name "Inspecting"] [:inspection_start_date "2023-12-22T23:00:00Z"] [:end_date "2024-01-23T23:00:00Z"] [:__typename :BudgetPeriod]) #ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:__typename :Organization])]])]])}}
2023-12-24T21:28:26.353Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.353Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.354Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.354Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.354Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.354Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.357Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.357Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.357Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.357Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.358Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:26.358Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
2023-12-24T21:28:26.361Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.361Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.361Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.361Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.362Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.362Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.364Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.364Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.364Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.364Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.365Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:26.365Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => true
2023-12-24T21:28:26.368Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.368Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.368Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.368Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.369Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.369Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.371Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.371Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.371Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.371Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.371Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:26.372Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => true
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.373Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.374Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write true, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :supplier {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :motivation {:read true, :write false, :required true, :value At dolores libero aspernatur., :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :accounting_type {:read true, :write true, :default aquisition, :required true, :value aquisition, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :actionPermissions {:edit true, :delete true, :moveBudgetPeriod true, :moveCategory true}, :article_number {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :inspector_priority {:read true, :write true, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :price_cents {:read true, :write true, :default 0, :required true, :value 0, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :budget_period {:read true, :write true, :default {:id #uuid "1ea944ed-b755-4949-8c89-836063997f0d", :name Requesting, :inspection_start_date #time/instant "2024-02-23T23:00:00Z", :end_date #time/instant "2024-03-23T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.251867Z", :updated_at #time/instant "2023-12-24T21:28:25.251867Z"}, :required true, :value {:id 1ea944ed-b755-4949-8c89-836063997f0d, :name Requesting, :inspection_start_date 2024-02-24T00:00:00+01:00, :end_date 2024-03-24T00:00:00+01:00, :created_at 2023-12-24T22:28:25.251867, :updated_at 2023-12-24T22:28:25.251867, :is_past false}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :article_name {:read true, :write true, :default nil, :required true, :value Gepard, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :replacement {:read true, :write true, :default nil, :required true, :value true, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :attachments {:read true, :write true, :required false, :value :unqueried, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :DELETE true, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :state :NEW, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :supplier_name {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.427237Z", :read false, :write false, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :room {:read true, :write true, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 564b1178-6460-41a4-b7f0-84480f0a1c6a, :name kitchen, :general false, :building {:id 5f070b7e-24ae-4561-84bf-c873590bffd5, :code nil, :name 6116 Bergnaum Islands}, :building_id 5f070b7e-24ae-4561-84bf-c873590bffd5, :description nil}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :inspection_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :approved_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :order_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :user {:read true, :write true, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :receiver {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :internal_order_number {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :created_at {:value #time/instant "2023-12-24T21:28:25.427237Z", :read false, :write false, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :short_id Requesting.001, :model {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey -15128758_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey -15128758_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.374Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.376Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.376Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write true, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :supplier {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :motivation {:read true, :write false, :required true, :value Aperiam quae facere et., :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :accounting_type {:read true, :write true, :default aquisition, :required true, :value aquisition, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :actionPermissions {:edit true, :delete true, :moveBudgetPeriod true, :moveCategory true}, :article_number {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :inspector_priority {:read true, :write true, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :price_cents {:read true, :write true, :default 0, :required true, :value 0, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :budget_period {:read true, :write true, :default {:id #uuid "fe146f23-123d-4a06-80f4-73d7b343c5e4", :name Inspecting, :inspection_start_date #time/instant "2023-12-22T23:00:00Z", :end_date #time/instant "2024-01-23T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.249740Z", :updated_at #time/instant "2023-12-24T21:28:25.249740Z"}, :required true, :value {:id fe146f23-123d-4a06-80f4-73d7b343c5e4, :name Inspecting, :inspection_start_date 2023-12-23T00:00:00+01:00, :end_date 2024-01-24T00:00:00+01:00, :created_at 2023-12-24T22:28:25.24974, :updated_at 2023-12-24T22:28:25.24974, :is_past false}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :article_name {:read true, :write true, :default nil, :required true, :value Zebra, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :replacement {:read true, :write true, :default nil, :required true, :value true, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :attachments {:read true, :write true, :required false, :value :unqueried, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :DELETE true, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :state :NEW, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :supplier_name {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :requested_quantity {:read true, :write true, :required true, :value 1, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.415778Z", :read false, :write false, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :room {:read true, :write true, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 7c9fc2d3-6b5b-4702-a324-22d8212afc79, :name conservatory, :general false, :building {:id a0f24211-8a32-4d6f-bcc3-1c78cad4edf0, :code nil, :name 43686 Kuhlman Throughway}, :building_id a0f24211-8a32-4d6f-bcc3-1c78cad4edf0, :description nil}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :inspection_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :approved_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :order_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :user {:read true, :write true, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :receiver {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :internal_order_number {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :created_at {:value #time/instant "2023-12-24T21:28:25.415778Z", :read false, :write false, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :short_id Inspecting.001, :model {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey -15128758_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey -15128758_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.377Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.378Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.378Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write false, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :motivation {:read true, :write false, :required true, :value Vitae consectetur exercitationem quo., :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :budget_period {:read true, :write false, :default {:id #uuid "ce209236-68c1-496e-a4f6-c82b1c6f1b35", :name Procuring, :inspection_start_date #time/instant "2023-09-23T22:00:00Z", :end_date #time/instant "2023-12-22T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.241108Z", :updated_at #time/instant "2023-12-24T21:28:25.241108Z"}, :required true, :value {:id ce209236-68c1-496e-a4f6-c82b1c6f1b35, :name Procuring, :inspection_start_date 2023-09-24T00:00:00+02:00, :end_date 2023-12-23T00:00:00+01:00, :created_at 2023-12-24T22:28:25.241108, :updated_at 2023-12-24T22:28:25.241108, :is_past true}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :article_name {:read true, :write false, :default nil, :required true, :value Elefant, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :state :APPROVED, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :id #uuid "865217d9-4642-4734-a51d-3d0e915a0714", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 007d1ad1-72a0-43e2-834c-a0265223f2c1, :name guest room, :general false, :building {:id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :code nil, :name 5912 Dooley Wells}, :building_id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :description nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :approved_quantity {:read true, :write false, :required false, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :user {:read true, :write false, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :created_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :short_id Procuring.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey -15128758_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey -15128758_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.378Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
2023-12-24T21:28:26.379Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-15128758"] [:total_count 3] [:budget_periods [#ordered/map ([:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:cacheKey "-15128758_1ea944ed-b755-4949-8c89-836063997f0d"] [:name "Requesting"] [:inspection_start_date "2024-02-23T23:00:00Z"] [:end_date "2024-03-23T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "-15128758_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "-15128758_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "775a8061-2a79-42cc-bd43-77846cfe8d9c"] [:short_id "Requesting.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:name "Requesting"] [:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Gepard"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "564b1178-6460-41a4-b7f0-84480f0a1c6a"] [:name "kitchen"] [:building #ordered/map ([:id "5f070b7e-24ae-4561-84bf-c873590bffd5"] [:name "6116 Bergnaum Islands"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "At dolores libero aspernatur."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod]) #ordered/map ([:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:cacheKey "-15128758_fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:name "Inspecting"] [:inspection_start_date "2023-12-22T23:00:00Z"] [:end_date "2024-01-23T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "-15128758_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "-15128758_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"] [:short_id "Inspecting.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:name "Inspecting"] [:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Zebra"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "7c9fc2d3-6b5b-4702-a324-22d8212afc79"] [:name "conservatory"] [:building #ordered/map ([:id "a0f24211-8a32-4d6f-bcc3-1c78cad4edf0"] [:name "43686 Kuhlman Throughway"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Aperiam quae facere et."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod]) #ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:cacheKey "-15128758_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "-15128758_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "-15128758_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96160054596125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 4097, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x6713c33 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 4097, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search nil, :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :priority [NORMAL HIGH], :budgetPeriods [1ea944ed-b755-4949-8c89-836063997f0d fe146f23-123d-4a06-80f4-73d7b343c5e4 ce209236-68c1-496e-a4f6-c82b1c6f1b35]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.458Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.458Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:26.459Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.459Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:26.460Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.460Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:26.461Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.461Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:26.461Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:26.461Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.461Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.462Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:26.466Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search nil, :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["1ea944ed-b755-4949-8c89-836063997f0d" "fe146f23-123d-4a06-80f4-73d7b343c5e4" "ce209236-68c1-496e-a4f6-c82b1c6f1b35"]}
2023-12-24T21:28:26.472Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.472Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.472Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.472Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:26.473Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:26.474Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.474Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.474Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.474Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.475Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.475Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.476Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.476Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.476Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.476Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.476Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:26.502Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.502Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.503Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.503Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.503Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.503Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.505Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.505Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.506Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.506Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.506Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:26.506Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
2023-12-24T21:28:26.509Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.509Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.509Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.509Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.510Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.510Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.511Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.511Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.512Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.512Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.512Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:26.512Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => true
2023-12-24T21:28:26.515Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.515Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.515Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.515Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.516Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.516Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.517Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:26.517Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:26.518Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:26.518Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:26.518Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:26.518Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => true
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.519Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.520Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write true, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :supplier {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :motivation {:read true, :write false, :required true, :value At dolores libero aspernatur., :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :accounting_type {:read true, :write true, :default aquisition, :required true, :value aquisition, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :actionPermissions {:edit true, :delete true, :moveBudgetPeriod true, :moveCategory true}, :article_number {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :inspector_priority {:read true, :write true, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :price_cents {:read true, :write true, :default 0, :required true, :value 0, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :budget_period {:read true, :write true, :default {:id #uuid "1ea944ed-b755-4949-8c89-836063997f0d", :name Requesting, :inspection_start_date #time/instant "2024-02-23T23:00:00Z", :end_date #time/instant "2024-03-23T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.251867Z", :updated_at #time/instant "2023-12-24T21:28:25.251867Z"}, :required true, :value {:id 1ea944ed-b755-4949-8c89-836063997f0d, :name Requesting, :inspection_start_date 2024-02-24T00:00:00+01:00, :end_date 2024-03-24T00:00:00+01:00, :created_at 2023-12-24T22:28:25.251867, :updated_at 2023-12-24T22:28:25.251867, :is_past false}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :article_name {:read true, :write true, :default nil, :required true, :value Gepard, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :replacement {:read true, :write true, :default nil, :required true, :value true, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :attachments {:read true, :write true, :required false, :value :unqueried, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :DELETE true, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :state :NEW, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :supplier_name {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.427237Z", :read false, :write false, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :room {:read true, :write true, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 564b1178-6460-41a4-b7f0-84480f0a1c6a, :name kitchen, :general false, :building {:id 5f070b7e-24ae-4561-84bf-c873590bffd5, :code nil, :name 6116 Bergnaum Islands}, :building_id 5f070b7e-24ae-4561-84bf-c873590bffd5, :description nil}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :inspection_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :approved_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :order_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :user {:read true, :write true, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :receiver {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :internal_order_number {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :created_at {:value #time/instant "2023-12-24T21:28:25.427237Z", :read false, :write false, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}, :short_id Requesting.001, :model {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "775a8061-2a79-42cc-bd43-77846cfe8d9c"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 688413591_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 688413591_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.520Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.521Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.521Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write true, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :supplier {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :motivation {:read true, :write false, :required true, :value Aperiam quae facere et., :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :accounting_type {:read true, :write true, :default aquisition, :required true, :value aquisition, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :actionPermissions {:edit true, :delete true, :moveBudgetPeriod true, :moveCategory true}, :article_number {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :inspector_priority {:read true, :write true, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :price_cents {:read true, :write true, :default 0, :required true, :value 0, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :budget_period {:read true, :write true, :default {:id #uuid "fe146f23-123d-4a06-80f4-73d7b343c5e4", :name Inspecting, :inspection_start_date #time/instant "2023-12-22T23:00:00Z", :end_date #time/instant "2024-01-23T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.249740Z", :updated_at #time/instant "2023-12-24T21:28:25.249740Z"}, :required true, :value {:id fe146f23-123d-4a06-80f4-73d7b343c5e4, :name Inspecting, :inspection_start_date 2023-12-23T00:00:00+01:00, :end_date 2024-01-24T00:00:00+01:00, :created_at 2023-12-24T22:28:25.24974, :updated_at 2023-12-24T22:28:25.24974, :is_past false}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :article_name {:read true, :write true, :default nil, :required true, :value Zebra, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :replacement {:read true, :write true, :default nil, :required true, :value true, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :attachments {:read true, :write true, :required false, :value :unqueried, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :DELETE true, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :state :NEW, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :supplier_name {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :requested_quantity {:read true, :write true, :required true, :value 1, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.415778Z", :read false, :write false, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :room {:read true, :write true, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 7c9fc2d3-6b5b-4702-a324-22d8212afc79, :name conservatory, :general false, :building {:id a0f24211-8a32-4d6f-bcc3-1c78cad4edf0, :code nil, :name 43686 Kuhlman Throughway}, :building_id a0f24211-8a32-4d6f-bcc3-1c78cad4edf0, :description nil}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :inspection_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :approved_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :order_quantity {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :user {:read true, :write true, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :receiver {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :internal_order_number {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :created_at {:value #time/instant "2023-12-24T21:28:25.415778Z", :read false, :write false, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}, :short_id Inspecting.001, :model {:read true, :write true, :default nil, :required false, :value nil, :request-id #uuid "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 688413591_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 688413591_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.522Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:26.522Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:26.523Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write false, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :motivation {:read true, :write false, :required true, :value Vitae consectetur exercitationem quo., :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :budget_period {:read true, :write false, :default {:id #uuid "ce209236-68c1-496e-a4f6-c82b1c6f1b35", :name Procuring, :inspection_start_date #time/instant "2023-09-23T22:00:00Z", :end_date #time/instant "2023-12-22T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.241108Z", :updated_at #time/instant "2023-12-24T21:28:25.241108Z"}, :required true, :value {:id ce209236-68c1-496e-a4f6-c82b1c6f1b35, :name Procuring, :inspection_start_date 2023-09-24T00:00:00+02:00, :end_date 2023-12-23T00:00:00+01:00, :created_at 2023-12-24T22:28:25.241108, :updated_at 2023-12-24T22:28:25.241108, :is_past true}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :article_name {:read true, :write false, :default nil, :required true, :value Elefant, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :state :APPROVED, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :id #uuid "865217d9-4642-4734-a51d-3d0e915a0714", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 007d1ad1-72a0-43e2-834c-a0265223f2c1, :name guest room, :general false, :building {:id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :code nil, :name 5912 Dooley Wells}, :building_id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :description nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :approved_quantity {:read true, :write false, :required false, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :user {:read true, :write false, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :created_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :short_id Procuring.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 688413591_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 688413591_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:26.523Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
2023-12-24T21:28:26.524Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "688413591"] [:total_count 3] [:budget_periods [#ordered/map ([:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:cacheKey "688413591_1ea944ed-b755-4949-8c89-836063997f0d"] [:name "Requesting"] [:inspection_start_date "2024-02-23T23:00:00Z"] [:end_date "2024-03-23T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "688413591_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "688413591_1ea944ed-b755-4949-8c89-836063997f0d_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "775a8061-2a79-42cc-bd43-77846cfe8d9c"] [:short_id "Requesting.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:name "Requesting"] [:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Gepard"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "564b1178-6460-41a4-b7f0-84480f0a1c6a"] [:name "kitchen"] [:building #ordered/map ([:id "5f070b7e-24ae-4561-84bf-c873590bffd5"] [:name "6116 Bergnaum Islands"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "At dolores libero aspernatur."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod]) #ordered/map ([:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:cacheKey "688413591_fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:name "Inspecting"] [:inspection_start_date "2023-12-22T23:00:00Z"] [:end_date "2024-01-23T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "688413591_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "688413591_fe146f23-123d-4a06-80f4-73d7b343c5e4_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "d9a1a1a1-1fa5-43f9-8963-018ad45fb4d9"] [:short_id "Inspecting.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write true] [:required true] [:value #ordered/map ([:name "Inspecting"] [:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Zebra"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :NEW] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "7c9fc2d3-6b5b-4702-a324-22d8212afc79"] [:name "conservatory"] [:building #ordered/map ([:id "a0f24211-8a32-4d6f-bcc3-1c78cad4edf0"] [:name "43686 Kuhlman Throughway"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Aperiam quae facere et."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod]) #ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:cacheKey "688413591_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "688413591_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "688413591_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96160740288708, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 3981, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x51aee632 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 3981, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search nil, :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :priority [NORMAL HIGH], :budgetPeriods []}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:27.144Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.144Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:27.145Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.145Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:27.145Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.145Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:27.146Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.146Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:27.146Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:27.146Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.146Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.147Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.147Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.147Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.147Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.148Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.148Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.148Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:27.150Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search nil, :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :priority ["NORMAL" "HIGH"], :budgetPeriods []}
2023-12-24T21:28:27.154Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.154Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.154Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.154Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.155Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:27.155Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:27.155Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:27.155Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:27.156Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:27.156Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:27.156Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.156Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.157Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.157Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.158Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.158Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.158Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.159Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.160Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.160Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.160Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:27.191Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1144169173"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96161498896166, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 4019, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x74fc21b4 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 4019, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search nil, :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :priority [NORMAL HIGH], :budgetPeriods [ce209236-68c1-496e-a4f6-c82b1c6f1b35]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:27.902Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.902Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:27.902Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.902Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:27.903Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.903Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:27.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:27.904Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:27.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.905Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.905Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.906Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.906Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.907Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.907Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.907Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:27.911Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search nil, :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["ce209236-68c1-496e-a4f6-c82b1c6f1b35"]}
2023-12-24T21:28:27.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.915Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.916Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.916Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.916Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.916Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.916Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:27.917Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:27.917Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:27.917Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:27.917Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:27.917Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:27.918Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.918Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.918Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.918Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.919Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.919Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:27.946Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.946Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.947Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.947Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.947Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.947Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.949Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:27.949Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:27.950Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:27.950Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:27.950Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:27.950Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:27.951Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:27.952Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write false, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :motivation {:read true, :write false, :required true, :value Vitae consectetur exercitationem quo., :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :budget_period {:read true, :write false, :default {:id #uuid "ce209236-68c1-496e-a4f6-c82b1c6f1b35", :name Procuring, :inspection_start_date #time/instant "2023-09-23T22:00:00Z", :end_date #time/instant "2023-12-22T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.241108Z", :updated_at #time/instant "2023-12-24T21:28:25.241108Z"}, :required true, :value {:id ce209236-68c1-496e-a4f6-c82b1c6f1b35, :name Procuring, :inspection_start_date 2023-09-24T00:00:00+02:00, :end_date 2023-12-23T00:00:00+01:00, :created_at 2023-12-24T22:28:25.241108, :updated_at 2023-12-24T22:28:25.241108, :is_past true}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :article_name {:read true, :write false, :default nil, :required true, :value Elefant, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :state :APPROVED, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :id #uuid "865217d9-4642-4734-a51d-3d0e915a0714", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 007d1ad1-72a0-43e2-834c-a0265223f2c1, :name guest room, :general false, :building {:id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :code nil, :name 5912 Dooley Wells}, :building_id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :description nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :approved_quantity {:read true, :write false, :required false, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :user {:read true, :write false, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :created_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :short_id Procuring.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey -899282914_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey -899282914_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:27.952Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
2023-12-24T21:28:27.953Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-899282914"] [:total_count 1] [:budget_periods [#ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:cacheKey "-899282914_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "-899282914_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "-899282914_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96162113568083, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 4003, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x620755b0 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 4003, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search nil, :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :priority [NORMAL HIGH], :budgetPeriods [ce209236-68c1-496e-a4f6-c82b1c6f1b35]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:28.519Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.519Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:28.522Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.522Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:28.523Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.523Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:28.524Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.524Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:28.524Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:28.525Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.525Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.525Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.525Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.526Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.526Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.526Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.526Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.526Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:28.529Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search nil, :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["ce209236-68c1-496e-a4f6-c82b1c6f1b35"]}
2023-12-24T21:28:28.534Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.534Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.535Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.535Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.535Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.535Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.535Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:28.536Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:28.536Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:28.536Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:28.536Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:28.536Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:28.537Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.537Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.537Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.537Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.538Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.538Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.539Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.539Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.539Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.539Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.539Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:28.558Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:28.559Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests (), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 36504722_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 36504722_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:28.559Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
2023-12-24T21:28:28.560Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "36504722"] [:total_count 0] [:budget_periods [#ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:cacheKey "36504722_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "36504722_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "36504722_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96162481493541, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 4019, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x934d50c /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 4019, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED NOT_PROCESSED], :search nil, :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :priority [NORMAL HIGH], :budgetPeriods [ce209236-68c1-496e-a4f6-c82b1c6f1b35]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:28.884Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.884Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:28.884Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.884Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:28.885Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.885Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:28.885Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.885Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:28.885Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:28.886Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.886Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.886Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.886Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.891Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.891Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.891Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.892Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.892Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:28.894Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED" "NOT_PROCESSED"], :search nil, :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["ce209236-68c1-496e-a4f6-c82b1c6f1b35"]}
2023-12-24T21:28:28.900Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.900Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.900Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.900Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:28.901Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:28.902Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:28.902Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.902Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.903Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.903Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.903Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.904Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.905Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.905Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.905Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:28.929Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.929Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.929Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.929Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.930Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.930Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.931Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:28.931Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:28.932Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:28.932Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:28.932Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:28.932Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:28.934Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:28.934Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write false, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :motivation {:read true, :write false, :required true, :value Vitae consectetur exercitationem quo., :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :budget_period {:read true, :write false, :default {:id #uuid "ce209236-68c1-496e-a4f6-c82b1c6f1b35", :name Procuring, :inspection_start_date #time/instant "2023-09-23T22:00:00Z", :end_date #time/instant "2023-12-22T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.241108Z", :updated_at #time/instant "2023-12-24T21:28:25.241108Z"}, :required true, :value {:id ce209236-68c1-496e-a4f6-c82b1c6f1b35, :name Procuring, :inspection_start_date 2023-09-24T00:00:00+02:00, :end_date 2023-12-23T00:00:00+01:00, :created_at 2023-12-24T22:28:25.241108, :updated_at 2023-12-24T22:28:25.241108, :is_past true}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :article_name {:read true, :write false, :default nil, :required true, :value Elefant, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :state :APPROVED, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :NOT_PROCESSED, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :id #uuid "865217d9-4642-4734-a51d-3d0e915a0714", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 007d1ad1-72a0-43e2-834c-a0265223f2c1, :name guest room, :general false, :building {:id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :code nil, :name 5912 Dooley Wells}, :building_id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :description nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :approved_quantity {:read true, :write false, :required false, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :user {:read true, :write false, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :created_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_comment {:read true, :write true, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :short_id Procuring.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 874676189_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 874676189_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:28.934Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
2023-12-24T21:28:28.935Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "874676189"] [:total_count 1] [:budget_periods [#ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:cacheKey "874676189_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "874676189_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "874676189_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString])] [:__typename :Request] [:total_price_cents "0"] [:actionPermissions #ordered/map ([:edit true] [:__typename :RequestActionPermissions])])]] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96163370932500, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 5678, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x17a7b371 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 5678, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestForEdit, :variables {:id [865217d9-4642-4734-a51d-3d0e915a0714]}, :query query RequestForEdit($id: [ID!]!) {
  requests(id: $id) {
    ...RequestFieldsForEdit
    actionPermissions {
      delete
      edit
      moveBudgetPeriod
      moveCategory
      __typename
    }
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  budget_periods(whereRequestsCanBeMovedTo: $id) {
    id
    name
    __typename
  }
  settings {
    inspection_comments
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:29.774Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.774Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:29.774Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.774Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:29.775Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.775Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:29.775Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.775Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:29.775Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:29.776Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.776Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.776Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.776Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.777Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.777Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:29.780Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestForEdit($id: [ID!]!) {
  requests(id: $id) {
    ...RequestFieldsForEdit
    actionPermissions {
      delete
      edit
      moveBudgetPeriod
      moveCategory
      __typename
    }
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  budget_periods(whereRequestsCanBeMovedTo: $id) {
    id
    name
    __typename
  }
  settings {
    inspection_comments
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
 with variables {:id ["865217d9-4642-4734-a51d-3d0e915a0714"]}
2023-12-24T21:28:29.785Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.785Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.786Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.786Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.786Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.786Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.786Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:29.786Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:29.787Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:29.787Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:29.787Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:29.787Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:29.787Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.788Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.788Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.788Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.789Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.790Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:29.802Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.802Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.803Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.803Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.803Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.803Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.806Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.806Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:29.806Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
>debug 2
>debug 3
2023-12-24T21:28:29.810Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories  ORDER BY procurement_main_categories.name ASC"]
>debug 4
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:29.811Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:29.811Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:29.812Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
2023-12-24T21:28:29.813Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser] [:read true] [:write false] [:required true])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel] [:read true] [:write false] [:required false])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt] [:read true] [:write false] [:required true])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required true])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required false])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt] [:write false] [:required false])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean] [:read true] [:write false] [:required true])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority] [:read true] [:write false] [:required true])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier] [:read true] [:write false] [:required false])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom] [:read true] [:write false] [:required true])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority] [:read true] [:write false] [:required true])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter] [:read true] [:write false] [:required false])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount] [:read true])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount] [:read true] [:write false])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus] [:read true] [:write true] [:required true])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write true] [:required false])] [:__typename :Request] [:template #ordered/map ([:value nil] [:__typename :RequestFieldTemplate])] [:attachments #ordered/map ([:read true] [:write false] [:required false] [:value []] [:__typename :RequestFieldAttachments])] [:actionPermissions #ordered/map ([:delete false] [:edit true] [:moveBudgetPeriod false] [:moveCategory false] [:__typename :RequestActionPermissions])])]] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:__typename :Category])]] [:__typename :MainCategory])]] [:budget_periods [#ordered/map ([:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:name "Requesting"] [:__typename :BudgetPeriod]) #ordered/map ([:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:name "Inspecting"] [:__typename :BudgetPeriod])]] [:settings #ordered/map ([:inspection_comments ["Eum architecto minus magnam."]] [:__typename :ProcurementSettings])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96163465748041, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 257, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7c2eef34 /127.0.0.1:3230<->/127.0.0.1:55019], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 257, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName getRoomsByBuilding, :variables {:buildingId 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366}, :query query getRoomsByBuilding($buildingId: ID!) {
  rooms(building_id: $buildingId) {
    id
    name
    description
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
>>> authenticate::skip= nil  handler-key= :graphql
2023-12-24T21:28:29.866Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]
2023-12-24T21:28:29.866Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96163465671125, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 137, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x292d3aa4 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 137, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName getBuildings, :variables {}, :query query getBuildings {
  buildings {
    id
    name
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:29.866Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.866Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.866Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:29.867Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:29.867Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.867Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.867Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:29.867Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.868Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.869Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.869Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.869Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.869Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.869Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.869Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.870Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:29.871Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.871Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.871Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:29.872Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query getBuildings {
  buildings {
    id
    name
    __typename
  }
}
 with variables {}
2023-12-24T21:28:29.872Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query getRoomsByBuilding($buildingId: ID!) {
  rooms(building_id: $buildingId) {
    id
    name
    description
    __typename
  }
}
 with variables {:buildingId "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"}
2023-12-24T21:28:29.874Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:rooms [#ordered/map ([:id "a31dccf5-3515-4c53-936e-34d1cb3643de"] [:name "general room"] [:description nil] [:__typename :Room]) #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:description nil] [:__typename :Room])]])}}
2023-12-24T21:28:29.874Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:buildings [#ordered/map ([:id "abae04c5-d767-425e-acc2-7ce04df645d1"] [:name "general building"] [:__typename :Building]) #ordered/map ([:id "a0f24211-8a32-4d6f-bcc3-1c78cad4edf0"] [:name "43686 Kuhlman Throughway"] [:__typename :Building]) #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building]) #ordered/map ([:id "5f070b7e-24ae-4561-84bf-c873590bffd5"] [:name "6116 Bergnaum Islands"] [:__typename :Building])]])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96163479578875, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 502, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x5a018469 /127.0.0.1:3230<->/127.0.0.1:55008], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:29.879Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.879Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:29.879Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.879Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:29.879Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.880Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:29.880Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.880Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:29.880Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:29.881Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.881Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.881Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.881Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.882Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.882Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.882Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.882Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.882Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:29.884Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
 with variables {}
2023-12-24T21:28:29.892Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.892Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.892Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.892Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.894Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"d4057d44-aa94-4f50-a37e-a396dab45ea2\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"e7ad4a46-cf62-4c7d-84c7-38dacdd078b0\",\"firstname\":\"Jimmie\",\"lastname\":\"Koss\",\"login\":null,\"email\":\"krysta@kihn.io\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0"] [:firstname "Jimmie"] [:lastname "Koss"] [:permissions #ordered/map ([:isAdmin false] [:isRequester false] [:isInspectorForCategories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings #ordered/map ([:contact_url "http://hartmann.io/rolf"] [:__typename :ProcurementSettings])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96163514451291, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 5678, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7826d8bd /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 5678, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestForEdit, :variables {:id [865217d9-4642-4734-a51d-3d0e915a0714]}, :query query RequestForEdit($id: [ID!]!) {
  requests(id: $id) {
    ...RequestFieldsForEdit
    actionPermissions {
      delete
      edit
      moveBudgetPeriod
      moveCategory
      __typename
    }
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  budget_periods(whereRequestsCanBeMovedTo: $id) {
    id
    name
    __typename
  }
  settings {
    inspection_comments
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:29.919Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.919Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:29.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:29.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.920Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:29.921Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.921Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:29.921Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:29.922Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.922Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.922Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.922Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.923Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.923Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.923Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.923Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.923Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:29.927Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestForEdit($id: [ID!]!) {
  requests(id: $id) {
    ...RequestFieldsForEdit
    actionPermissions {
      delete
      edit
      moveBudgetPeriod
      moveCategory
      __typename
    }
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  budget_periods(whereRequestsCanBeMovedTo: $id) {
    id
    name
    __typename
  }
  settings {
    inspection_comments
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
 with variables {:id ["865217d9-4642-4734-a51d-3d0e915a0714"]}
2023-12-24T21:28:29.930Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.931Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.931Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.931Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:29.932Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:29.933Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.933Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.933Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.933Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:29.949Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.949Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.949Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.949Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.950Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.950Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.952Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:29.952Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:29.952Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:29.952Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:29.952Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:29.952Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
>debug 2
>debug 3
2023-12-24T21:28:29.955Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories  ORDER BY procurement_main_categories.name ASC"]
>debug 4
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:29.955Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:29.956Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:29.956Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
2023-12-24T21:28:29.957Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser] [:read true] [:write false] [:required true])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel] [:read true] [:write false] [:required false])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt] [:read true] [:write false] [:required true])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required true])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required false])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt] [:write false] [:required false])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean] [:read true] [:write false] [:required true])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority] [:read true] [:write false] [:required true])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier] [:read true] [:write false] [:required false])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom] [:read true] [:write false] [:required true])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority] [:read true] [:write false] [:required true])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter] [:read true] [:write false] [:required false])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount] [:read true])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount] [:read true] [:write false])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:order_status #ordered/map ([:value :NOT_PROCESSED] [:__typename :RequestFieldOrderStatus] [:read true] [:write true] [:required true])] [:order_comment #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write true] [:required false])] [:__typename :Request] [:template #ordered/map ([:value nil] [:__typename :RequestFieldTemplate])] [:attachments #ordered/map ([:read true] [:write false] [:required false] [:value []] [:__typename :RequestFieldAttachments])] [:actionPermissions #ordered/map ([:delete false] [:edit true] [:moveBudgetPeriod false] [:moveCategory false] [:__typename :RequestActionPermissions])])]] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:__typename :Category])]] [:__typename :MainCategory])]] [:budget_periods [#ordered/map ([:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:name "Requesting"] [:__typename :BudgetPeriod]) #ordered/map ([:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:name "Inspecting"] [:__typename :BudgetPeriod])]] [:settings #ordered/map ([:inspection_comments ["Eum architecto minus magnam."]] [:__typename :ProcurementSettings])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96164157806083, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x15ec5bd HikariProxyConnection@22988221 wrapping org.postgresql.jdbc.PgConnection@783e5621], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 5402, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7aca197b /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x6ea9a032 HikariProxyConnection@1856610354 wrapping org.postgresql.jdbc.PgConnection@ea6cc63], :level 1, :rollback #object[clojure.lang.Atom 0x40374a78 {:status :ready, :val false}]}, :content-length 5402, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName updateRequest, :variables {:requestData {:id 865217d9-4642-4734-a51d-3d0e915a0714, :order_status PROCURED, :order_comment Wurde bestellt und geliefert!}}, :query mutation updateRequest($requestData: RequestInput) {
  request(input_data: $requestData) {
    ...RequestFieldsForEdit
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x6ea9a032 HikariProxyConnection@1856610354 wrapping org.postgresql.jdbc.PgConnection@ea6cc63], :level 1, :rollback #object[clojure.lang.Atom 0x40374a78 {:status :ready, :val false}]}
2023-12-24T21:28:30.561Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.561Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:30.562Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.562Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:30.562Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.562Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:30.563Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.563Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:30.563Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:30.564Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.564Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.564Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.564Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.565Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.565Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.566Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.566Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.566Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:30.569Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query mutation updateRequest($requestData: RequestInput) {
  request(input_data: $requestData) {
    ...RequestFieldsForEdit
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
 with variables {:requestData {:id "865217d9-4642-4734-a51d-3d0e915a0714", :order_status "PROCURED", :order_comment "Wurde bestellt und geliefert!"}}
2023-12-24T21:28:30.574Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:30.575Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:30.576Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:30.576Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:30.576Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:30.576Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
2023-12-24T21:28:30.577Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.577Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.577Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.577Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.578Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.578Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.578Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:30.592Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.592Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.593Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.593Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.593Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.593Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.596Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.596Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.597Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.597Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.597Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:30.597Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
2023-12-24T21:28:30.599Z NX-41294 DEBUG [leihs.procurement.authorization:62] - (auth-func) => true
2023-12-24T21:28:30.600Z NX-41294 DEBUG [leihs.procurement.authorization:63] - (func) => nil
2023-12-24T21:28:30.601Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.601Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.601Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.601Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.602Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.602Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.602Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:30.602Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:30.602Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:30.602Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:30.603Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id 865217d9-4642-4734-a51d-3d0e915a0714]}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:30.603Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:= :procurement_requests.id "865217d9-4642-4734-a51d-3d0e915a0714"]}
2023-12-24T21:28:30.603Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.603Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.604Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.604Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.604Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.604Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.604Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:30.620Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.620Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.620Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.620Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.620Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.621Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.622Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.622Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.623Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.623Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.623Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:30.623Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
2023-12-24T21:28:30.625Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:request #ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser] [:read true] [:write false] [:required true])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel] [:read true] [:write false] [:required false])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt] [:read true] [:write false] [:required true])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required true])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required false])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt] [:write false] [:required false])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean] [:read true] [:write false] [:required true])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority] [:read true] [:write false] [:required true])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier] [:read true] [:write false] [:required false])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom] [:read true] [:write false] [:required true])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority] [:read true] [:write false] [:required true])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter] [:read true] [:write false] [:required false])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount] [:read true])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount] [:read true] [:write false])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:order_status #ordered/map ([:value :PROCURED] [:__typename :RequestFieldOrderStatus] [:read true] [:write true] [:required true])] [:order_comment #ordered/map ([:value "Wurde bestellt und geliefert!"] [:__typename :RequestFieldString] [:read true] [:write true] [:required false])] [:__typename :Request] [:template #ordered/map ([:value nil] [:__typename :RequestFieldTemplate])] [:attachments #ordered/map ([:read true] [:write false] [:required false] [:value []] [:__typename :RequestFieldAttachments])])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96164287048791, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 1214, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x49eee198 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 1214, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:search nil, :budgetPeriods [ce209236-68c1-496e-a4f6-c82b1c6f1b35], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :onlyOwnRequests false, :priority [NORMAL HIGH], :inspector_priority [LOW MEDIUM HIGH MANDATORY], :state [NEW APPROVED PARTIALLY_APPROVED DENIED]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    budget_periods {
      cacheKey
      total_price_cents
      main_categories {
        cacheKey
        total_price_cents
        categories {
          cacheKey
          total_price_cents
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:30.688Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.688Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:30.689Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.689Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:30.691Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.691Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:30.691Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.692Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:30.692Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:30.692Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.692Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.693Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.693Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96164290682083, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 5678, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x61fd8c6c /127.0.0.1:3230<->/127.0.0.1:55019], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 5678, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestForEdit, :variables {:id [865217d9-4642-4734-a51d-3d0e915a0714]}, :query query RequestForEdit($id: [ID!]!) {
  requests(id: $id) {
    ...RequestFieldsForEdit
    actionPermissions {
      delete
      edit
      moveBudgetPeriod
      moveCategory
      __typename
    }
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  budget_periods(whereRequestsCanBeMovedTo: $id) {
    id
    name
    __typename
  }
  settings {
    inspection_comments
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:30.693Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.693Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.694Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:30.695Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.695Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:30.695Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:30.695Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    budget_periods {
      cacheKey
      total_price_cents
      main_categories {
        cacheKey
        total_price_cents
        categories {
          cacheKey
          total_price_cents
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
 with variables {:search nil, :budgetPeriods ["ce209236-68c1-496e-a4f6-c82b1c6f1b35"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :onlyOwnRequests false, :priority ["NORMAL" "HIGH"], :inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"]}
2023-12-24T21:28:30.696Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.696Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.696Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.696Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.697Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.697Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.697Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.697Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.697Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:30.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.698Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:30.699Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:30.700Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:30.700Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.700Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.700Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestForEdit($id: [ID!]!) {
  requests(id: $id) {
    ...RequestFieldsForEdit
    actionPermissions {
      delete
      edit
      moveBudgetPeriod
      moveCategory
      __typename
    }
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  budget_periods(whereRequestsCanBeMovedTo: $id) {
    id
    name
    __typename
  }
  settings {
    inspection_comments
    __typename
  }
}

fragment RequestFieldsForEdit on Request {
  ...RequestFieldsForIndex
  template {
    value {
      id
      article_name
      __typename
    }
    __typename
  }
  user {
    read
    write
    required
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  article_name {
    ...RequestFieldString
    __typename
  }
  model {
    read
    write
    required
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  supplier_name {
    ...RequestFieldString
    __typename
  }
  supplier {
    read
    write
    required
    value {
      id
      name
      __typename
    }
    __typename
  }
  receiver {
    ...RequestFieldString
    __typename
  }
  price_cents {
    ...RequestFieldInt
    __typename
  }
  price_currency {
    ...RequestFieldString
    __typename
  }
  requested_quantity {
    ...RequestFieldInt
    __typename
  }
  approved_quantity {
    ...RequestFieldInt
    __typename
  }
  order_quantity {
    ...RequestFieldInt
    __typename
  }
  order_status {
    read
    write
    required
    value
    __typename
  }
  order_comment {
    ...RequestFieldString
    __typename
  }
  priority {
    read
    write
    required
    value
    __typename
  }
  inspector_priority {
    read
    write
    required
    value
    __typename
  }
  state
  article_number {
    ...RequestFieldString
    __typename
  }
  motivation {
    ...RequestFieldString
    __typename
  }
  replacement {
    ...RequestFieldBoolean
    __typename
  }
  room {
    read
    write
    required
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  inspection_comment {
    ...RequestFieldString
    __typename
  }
  attachments {
    read
    write
    required
    value {
      id
      filename
      url
      __typename
    }
    __typename
  }
  accounting_type {
    ...RequestFieldString
    __typename
  }
  cost_center {
    read
    write
    required
    value
    __typename
  }
  procurement_account {
    read
    write
    value
    __typename
  }
  general_ledger_account {
    read
    value
    __typename
  }
  internal_order_number {
    ...RequestFieldString
    __typename
  }
  __typename
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

fragment RequestFieldString on RequestFieldString {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldInt on RequestFieldInt {
  value
  read
  write
  required
  __typename
}

fragment RequestFieldBoolean on RequestFieldBoolean {
  value
  read
  write
  required
  __typename
}
 with variables {:id ["865217d9-4642-4734-a51d-3d0e915a0714"]}
2023-12-24T21:28:30.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.701Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.702Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:30.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.705Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:30.706Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:30.707Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.707Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.707Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.707Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.708Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.708Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.708Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.708Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.712Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.712Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.712Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
2023-12-24T21:28:30.719Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.719Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.719Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.719Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.720Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.720Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.721Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.722Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:30.723Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:30.724Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests ({:category {:read true, :write false, :default {:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name Säugetiere, :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil}, :required true, :value {:id e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :name Säugetiere, :cost_center nil, :main_category {:id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :name Tiere}, :main_category_id 56c63a07-366d-4ebb-b62f-c55b7a4d24cb, :procurement_account nil, :general_ledger_account nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :motivation {:read true, :write false, :required true, :value Vitae consectetur exercitationem quo., :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :accounting_type {:read true, :write false, :default aquisition, :required true, :value aquisition, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :actionPermissions {:edit true, :delete false, :moveBudgetPeriod false, :moveCategory false}, :article_number {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspector_priority {:read true, :write false, :default MEDIUM, :required true, :value :MEDIUM, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :price_cents {:read true, :write false, :default 0, :required true, :value 0, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :budget_period {:read true, :write false, :default {:id #uuid "ce209236-68c1-496e-a4f6-c82b1c6f1b35", :name Procuring, :inspection_start_date #time/instant "2023-09-23T22:00:00Z", :end_date #time/instant "2023-12-22T23:00:00Z", :created_at #time/instant "2023-12-24T21:28:25.241108Z", :updated_at #time/instant "2023-12-24T21:28:25.241108Z"}, :required true, :value {:id ce209236-68c1-496e-a4f6-c82b1c6f1b35, :name Procuring, :inspection_start_date 2023-09-24T00:00:00+02:00, :end_date 2023-12-23T00:00:00+01:00, :created_at 2023-12-24T22:28:25.241108, :updated_at 2023-12-24T22:28:25.241108, :is_past true}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :article_name {:read true, :write false, :default nil, :required true, :value Elefant, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :replacement {:read true, :write false, :default nil, :required true, :value true, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :attachments {:read true, :write false, :required false, :value :unqueried, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :DELETE false, :template {:read true, :write false, :default nil, :required true, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :state :APPROVED, :organization {:value {:id 679d37ff-a632-48d1-ad08-48ab7a734c1d, :name Tiere der Savanne, :parent_id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :shortname nil, :department {:id 54a07aa4-b7aa-46bb-9c07-e1d82886cf72, :name Zoo, :parent_id nil, :shortname nil}}, :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :supplier_name {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_status {:read true, :write true, :default NOT_PROCURED, :required true, :value :PROCURED, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :requested_quantity {:read true, :write false, :required true, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :general_ledger_account {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :updated_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :priority {:read true, :write false, :default NORMAL, :required true, :value :NORMAL, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :id #uuid "865217d9-4642-4734-a51d-3d0e915a0714", :total_price_cents 0, :price_currency {:read true, :write false, :default CHF, :required true, :value CHF, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :procurement_account {:read true, :write false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :room {:read true, :write false, :default {:id #uuid "b8927fd2-014c-48c2-b095-fa1d5620debe", :name general room, :description nil, :building_id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :general true, :building {:id #uuid "abae04c5-d767-425e-acc2-7ce04df645d1", :name general building, :code nil}}, :required true, :value {:id 007d1ad1-72a0-43e2-834c-a0265223f2c1, :name guest room, :general false, :building {:id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :code nil, :name 5912 Dooley Wells}, :building_id 2e957e8d-3f2e-4b1d-8b14-eb4d514a0366, :description nil}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :inspection_comment {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :approved_quantity {:read true, :write false, :required false, :value 1, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_quantity {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :cost_center {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :user {:read true, :write false, :required true, :default {:id #uuid "44eb9b6d-4a24-4e11-b17f-38b0a35cade5", :firstname Elvira, :lastname Ehring}, :value {:system_admin_protected false, :address nil, :email ingrid_ferry@torp.com, :pool_protected false, :last_sign_in_at nil, :img32_url nil, :account_enabled true, :lastname Ehring, :phone nil, :img_digest nil, :org_id nil, :extended_info nil, :secondary_email nil, :city nil, :settings nil, :is_admin false, :organization local, :login nil, :searchable Elvira Ehring ingrid_ferry@torp.com    Ehring Elvira, :updated_at 2023-12-24T22:28:25.322102+01:00, :firstname Elvira, :zip nil, :id 44eb9b6d-4a24-4e11-b17f-38b0a35cade5, :url nil, :password_sign_in_enabled true, :account_disabled_at nil, :is_system_admin false, :badge_id nil, :language_locale nil, :img256_url nil, :country nil, :delegator_user_id nil, :created_at 2023-12-24T22:28:25.322102+01:00, :admin_protected false}, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :receiver {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :internal_order_number {:read true, :write false, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :created_at {:value #time/instant "2023-12-24T21:28:25.382679Z", :read false, :write false, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :order_comment {:read true, :write true, :required false, :value Wurde bestellt und geliefert!, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}, :short_id Procuring.001, :model {:read true, :write false, :default nil, :required false, :value nil, :request-id #uuid "865217d9-4642-4734-a51d-3d0e915a0714"}}), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 500428920_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 500428920_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:30.724Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:30.724Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.724Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>debug 5b nil
2023-12-24T21:28:30.725Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.725Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.725Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:369] - (or (and requester own-request) category-viewer inspector admin) => true
2023-12-24T21:28:30.725Z NX-41294 DEBUG [leihs.procurement.permissions.request-fields:370] - (and (not template) (not past-phase) (or (and new-request requester (or (and requesting-phase (or own-request inspector)) (and inspection-phase category-inspector) admin)) (and existing-request (or admin category-inspector (and requesting-phase requester own-request))))) => false
2023-12-24T21:28:30.726Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "500428920"] [:budget_periods [#ordered/map ([:cacheKey "500428920_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:cacheKey "500428920_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:total_price_cents "0"] [:categories [#ordered/map ([:cacheKey "500428920_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:total_price_cents "0"] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}
>debug 2
>debug 3
2023-12-24T21:28:30.728Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format main-categories-base-query) => ["SELECT procurement_main_categories.* FROM procurement_main_categories  ORDER BY procurement_main_categories.name ASC"]
>debug 4
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:30.728Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:30.728Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:30.729Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
2023-12-24T21:28:30.730Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:requests [#ordered/map ([:id "865217d9-4642-4734-a51d-3d0e915a0714"] [:short_id "Procuring.001"] [:user #ordered/map ([:value #ordered/map ([:id "44eb9b6d-4a24-4e11-b17f-38b0a35cade5"] [:firstname "Elvira"] [:lastname "Ehring"] [:__typename :User])] [:__typename :RequestFieldUser] [:read true] [:write false] [:required true])] [:category #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:main_category #ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:__typename :MainCategory])] [:__typename :Category])] [:__typename :RequestFieldCategory])] [:budget_period #ordered/map ([:read true] [:write false] [:required true] [:value #ordered/map ([:name "Procuring"] [:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:__typename :BudgetPeriod])] [:__typename :RequestFieldBudgetPeriod])] [:article_name #ordered/map ([:value "Elefant"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:model #ordered/map ([:value nil] [:__typename :RequestFieldModel] [:read true] [:write false] [:required false])] [:receiver #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:organization #ordered/map ([:value #ordered/map ([:id "679d37ff-a632-48d1-ad08-48ab7a734c1d"] [:name "Tiere der Savanne"] [:shortname nil] [:department #ordered/map ([:id "54a07aa4-b7aa-46bb-9c07-e1d82886cf72"] [:name "Zoo"] [:__typename :Organization])] [:__typename :Organization])] [:__typename :RequestFieldOrganization])] [:price_cents #ordered/map ([:value 0] [:__typename :RequestFieldInt] [:read true] [:write false] [:required true])] [:price_currency #ordered/map ([:value "CHF"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:requested_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required true])] [:approved_quantity #ordered/map ([:read true] [:value 1] [:__typename :RequestFieldInt] [:write false] [:required false])] [:order_quantity #ordered/map ([:read true] [:value nil] [:__typename :RequestFieldInt] [:write false] [:required false])] [:replacement #ordered/map ([:value true] [:__typename :RequestFieldBoolean] [:read true] [:write false] [:required true])] [:priority #ordered/map ([:value :NORMAL] [:__typename :RequestFieldPriority] [:read true] [:write false] [:required true])] [:state :APPROVED] [:article_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:supplier #ordered/map ([:value nil] [:__typename :RequestFieldSupplier] [:read true] [:write false] [:required false])] [:supplier_name #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:room #ordered/map ([:value #ordered/map ([:id "007d1ad1-72a0-43e2-834c-a0265223f2c1"] [:name "guest room"] [:building #ordered/map ([:id "2e957e8d-3f2e-4b1d-8b14-eb4d514a0366"] [:name "5912 Dooley Wells"] [:__typename :Building])] [:__typename :Room])] [:__typename :RequestFieldRoom] [:read true] [:write false] [:required true])] [:motivation #ordered/map ([:value "Vitae consectetur exercitationem quo."] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:inspection_comment #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:inspector_priority #ordered/map ([:value :MEDIUM] [:__typename :RequestFieldInspectorPriority] [:read true] [:write false] [:required true])] [:accounting_type #ordered/map ([:value "aquisition"] [:__typename :RequestFieldString] [:read true] [:write false] [:required true])] [:cost_center #ordered/map ([:value nil] [:__typename :RequestFieldCostCenter] [:read true] [:write false] [:required false])] [:general_ledger_account #ordered/map ([:value nil] [:__typename :RequestFieldGeneralLedgerAccount] [:read true])] [:procurement_account #ordered/map ([:value nil] [:__typename :RequestFieldProcurementAccount] [:read true] [:write false])] [:internal_order_number #ordered/map ([:value nil] [:__typename :RequestFieldString] [:read true] [:write false] [:required false])] [:order_status #ordered/map ([:value :PROCURED] [:__typename :RequestFieldOrderStatus] [:read true] [:write true] [:required true])] [:order_comment #ordered/map ([:value "Wurde bestellt und geliefert!"] [:__typename :RequestFieldString] [:read true] [:write true] [:required false])] [:__typename :Request] [:template #ordered/map ([:value nil] [:__typename :RequestFieldTemplate])] [:attachments #ordered/map ([:read true] [:write false] [:required false] [:value []] [:__typename :RequestFieldAttachments])] [:actionPermissions #ordered/map ([:delete false] [:edit true] [:moveBudgetPeriod false] [:moveCategory false] [:__typename :RequestActionPermissions])])]] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:__typename :Category])]] [:__typename :MainCategory])]] [:budget_periods [#ordered/map ([:id "1ea944ed-b755-4949-8c89-836063997f0d"] [:name "Requesting"] [:__typename :BudgetPeriod]) #ordered/map ([:id "fe146f23-123d-4a06-80f4-73d7b343c5e4"] [:name "Inspecting"] [:__typename :BudgetPeriod])]] [:settings #ordered/map ([:inspection_comments ["Eum architecto minus magnam."]] [:__typename :ProcurementSettings])])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44860 0xf09dbcd leihs.core.locale$wrap$fn__44860@f09dbcd]

>> authorize::request > {:authenticated-entity {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value d4057d44-aa94-4f50-a37e-a396dab45ea2}, leihs-user-session {:value 10109c54-a43c-470e-9659-22d36eb4b97f}}, :remote-addr 127.0.0.1, :start-time 96164420485958, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x676d1984 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x2fb34447 next.jdbc.result_set$as_unqualified_lower_maps@2fb34447]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0, content-type application/json, cookie leihs-anti-csrf-token=d4057d44-aa94-4f50-a37e-a396dab45ea2; leihs-user-session=10109c54-a43c-470e-9659-22d36eb4b97f, content-length 4008, referer http://localhost:3230/procure/requests, connection keep-alive, x-csrf-token d4057d44-aa94-4f50-a37e-a396dab45ea2, accept application/json, accept-language de,en-US;q=0.7,en;q=0.3, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x679913b3 /127.0.0.1:3230<->/127.0.0.1:55018], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}, :content-length 4008, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MEDIUM HIGH MANDATORY], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [IN_PROGRESS ALTERNATIVE_PROCURED NOT_PROCURED NOT_PROCESSED], :search nil, :organizations [679d37ff-a632-48d1-ad08-48ab7a734c1d], :categories [e4feefe7-0c78-40f9-9f9e-93666b6c14b7], :priority [NORMAL HIGH], :budgetPeriods [ce209236-68c1-496e-a4f6-c82b1c6f1b35]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x43dbeb2e leihs.procurement.graphql$handler@43dbeb2e], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
>myprint>  authEnt? {:email krysta@kihn.io, :contracts_count 0, :lastname Koss, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Jimmie, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-24T21:28:25.843924Z", :id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :user_session_id #uuid "6c58a42c-d808-41d5-a740-2373cdfa8de1", :scope_system_admin_read false, :access-rights (), :user_id #uuid "e7ad4a46-cf62-4c7d-84c7-38dacdd078b0", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}
>myprint>  txn {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:30.824Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.824Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  admin false
2023-12-24T21:28:30.825Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.825Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
>myprint>  inspector true
2023-12-24T21:28:30.826Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.826Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
>myprint>  viewer false
2023-12-24T21:28:30.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
>myprint>  requester false
2023-12-24T21:28:30.827Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-24T21:28:30.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.827Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.828Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.828Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.828Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.829Z NX-41294 DEBUG [leihs.procurement.permissions.user:65] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.830Z NX-41294 DEBUG [leihs.procurement.permissions.user:64] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.830Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39397#] (p1__39397# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-24T21:28:30.833Z NX-41294 DEBUG [leihs.procurement.graphql:31] - graphql query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
 with variables {:inspector_priority ["LOW" "MEDIUM" "HIGH" "MANDATORY"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["IN_PROGRESS" "ALTERNATIVE_PROCURED" "NOT_PROCURED" "NOT_PROCESSED"], :search nil, :organizations ["679d37ff-a632-48d1-ad08-48ab7a734c1d"], :categories ["e4feefe7-0c78-40f9-9f9e-93666b6c14b7"], :priority ["NORMAL" "HIGH"], :budgetPeriods ["ce209236-68c1-496e-a4f6-c82b1c6f1b35"]}
2023-12-24T21:28:30.837Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.837Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.838Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-24T21:28:30.838Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-24T21:28:30.839Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-24T21:28:30.839Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-24T21:28:30.839Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-24T21:28:30.839Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-24T21:28:30.840Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.840Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.840Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.840Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.841Z NX-41294 DEBUG [leihs.procurement.permissions.user:47] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.841Z NX-41294 DEBUG [leihs.procurement.permissions.user:46] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.842Z NX-41294 DEBUG [leihs.procurement.permissions.user:27] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))) => {:result true}
2023-12-24T21:28:30.842Z NX-41294 DEBUG [leihs.procurement.permissions.user:26] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format))))) => true
2023-12-24T21:28:30.842Z NX-41294 DEBUG [leihs.procurement.permissions.user:12] - (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))) => {:result false}
2023-12-24T21:28:30.842Z NX-41294 DEBUG [leihs.procurement.permissions.user:11] - (:result (spy (first (jdbc/query tx (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format))))) => false
2023-12-24T21:28:30.842Z NX-41294 DEBUG [leihs.procurement.permissions.user:79] - (->> [viewer? inspector? admin?] (map (fn* [p1__39321#] (p1__39321# tx auth-entity))) (some true?)) => true
>>>id 3 ??????? get-for-main-category-id
>>>id 3 ???????  tocheck main-cat-id= #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
>>>id 3 ???????  tocheck tx= {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x777379d HikariDataSource (db-pool)]}
2023-12-24T21:28:30.862Z NX-41294 DEBUG [leihs.procurement.resources.categories:?] - (sql/format (sql/merge-where categories-base-query [:= :procurement_categories.main_category_id main-cat-id])) => ["SELECT procurement_categories.* FROM procurement_categories  WHERE procurement_categories.main_category_id = ? ORDER BY procurement_categories.name ASC" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
2023-12-24T21:28:30.863Z NX-41294 DEBUG [leihs.procurement.resources.categories:58] - (-> categories-base-query (sql/merge-where [:= :procurement_categories.main_category_id main-cat-id]) sql/format spy (->> (jdbc/query tx))) => ({:id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :name "Säugetiere", :main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :general_ledger_account nil, :cost_center nil, :procurement_account nil})
>debug 5 {:id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Tiere, :categories ({:main_category_id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb", :name Säugetiere, :requests (), :general_ledger_account nil, :id #uuid "e4feefe7-0c78-40f9-9f9e-93666b6c14b7", :total_price_cents 0, :procurement_account nil, :cacheKey 1451523569_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7, :cost_center nil}), :total_price_cents 0, :cacheKey 1451523569_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb}
>debug 5a id #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"
2023-12-24T21:28:30.863Z NX-41294 DEBUG [leihs.procurement.resources.main-categories:?] - (sql/format (image/image-query-for-main-category (:id mc))) => ["SELECT procurement_images.* FROM procurement_images  WHERE procurement_images.main_category_id = ?" #uuid "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"]
>debug 5b nil
2023-12-24T21:28:30.864Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "1451523569"] [:total_count 0] [:budget_periods [#ordered/map ([:id "ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:cacheKey "1451523569_ce209236-68c1-496e-a4f6-c82b1c6f1b35"] [:name "Procuring"] [:inspection_start_date "2023-09-23T22:00:00Z"] [:end_date "2023-12-22T23:00:00Z"] [:total_price_cents "0"] [:main_categories [#ordered/map ([:id "56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:cacheKey "1451523569_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb"] [:name "Tiere"] [:image_url nil] [:total_price_cents "0"] [:categories [#ordered/map ([:id "e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:cacheKey "1451523569_ce209236-68c1-496e-a4f6-c82b1c6f1b35_56c63a07-366d-4ebb-b62f-c55b7a4d24cb_e4feefe7-0c78-40f9-9f9e-93666b6c14b7"] [:name "Säugetiere"] [:total_price_cents "0"] [:requests []] [:__typename :Category])]] [:__typename :MainCategory])]] [:__typename :BudgetPeriod])]] [:__typename :Dashboard])])}}

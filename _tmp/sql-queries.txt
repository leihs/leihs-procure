>o> 2-After apply-scope: {:select-distinct [:procurement_requests.id [[:concat [:lower [:coalesce :procurement_requests/article_name ]] [:lower [:coalesce :models/product ]] [:lower [:coalesce :models/version ]]]]], :from [:procurement_requests], :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by [:procurement_requests.id [[:concat [:lower [:coalesce :procurement_requests/article_name ]] [:lower [:coalesce :models/product ]] [:lower [:coalesce :models/version ]]]] :procurement_requests.*], :select [[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED) :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] nil [[[:row_to_json :models]] :model] nil [[[:row_to_json :procurement_templates]] :template] nil [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]], :join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [:end_date :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]], :where [:and [:in :procurement_requests.category_id [#uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"]] [:in :procurement_requests.budget_period_id [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]] [:in :procurement_requests.organization_id [#uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"]] [:in :procurement_requests.priority (normal high)] [:in :procurement_requests.inspector_priority (low medium high mandatory)] [:or [:= :procurement_requests.approved_quantity nil] [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] [:= :procurement_requests.approved_quantity 0]] [:in :procurement_requests.order_status ([[:cast not_processed :order_status_enum]] [[:cast in_progress :order_status_enum]] [[:cast procured :order_status_enum]] [[:cast alternative_procured :order_status_enum]] [[:cast not_procured :order_status_enum]])]]}

>o> 3-After sql-format:

{:select-distinct [:procurement_requests.id [[:concat [:lower [:coalesce :procurement_requests/article_name ]] [:lower [:coalesce :models/product ]] [:lower [:coalesce :models/version ]]]]],
:from [:procurement_requests],
:left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]),
:order-by [:procurement_requests.id [[:concat [:lower [:coalesce :procurement_requests/article_name ]] [:lower [:coalesce :models/product ]] [:lower [:coalesce :models/version ]]]] :procurement_requests.*],

:select [[(:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED) :state] [[[:row_to_json :procurement_budget_periods_2]] :budget_period] nil [[[:row_to_json :models]] :model] nil [[[:row_to_json :procurement_templates]] :template] nil [[[:row_to_json :suppliers]] :supplier] [[[:row_to_json :users]] :user]],
:join [:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select [:* [:end_date :is_past]], :from [:procurement_budget_periods]} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]],
:where [:and [:in :procurement_requests.category_id [#uuid "7d5ba731-edd9-41ba-8773-7337d24c2327"]] [:in :procurement_requests.budget_period_id [#uuid "8b8fe440-cae5-4bf9-8048-d0ec2399faa1"]] [:in :procurement_requests.organization_id [#uuid "fb664326-a8ef-4556-af02-07d3127cd9ec"]] [:in :procurement_requests.priority (normal high)] [:in :procurement_requests.inspector_priority (low medium high mandatory)] [:or [:= :procurement_requests.approved_quantity nil] [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] [:= :procurement_requests.approved_quantity 0]] [:in :procurement_requests.order_status ([[:cast not_processed :order_status_enum]] [[:cast in_progress :order_status_enum]] [[:cast procured :order_status_enum]] [[:cast alternative_procured :order_status_enum]] [[:cast not_procured :order_status_enum]])]]}
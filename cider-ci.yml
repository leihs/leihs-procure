include: container-build/cider-ci.yml


jobs:
  procure-uberjar-build:
    include: cider-ci/jobs/uberjar.yml
    run_when: &RUN_ALWAYS
      any branch has been updated:
        type: branch
        include_match: ^.*$
        exclude_match: '^.*(no-ci|hotspot).*$'

  backend-specs:
    depends_on: &SPEC_DEPENDS
      uberjar was built:
        type: job
        job_key: procure-uberjar-build
        states: [passed]
    run_when: *SPEC_DEPENDS
    include: cider-ci/jobs/backend-specs.yml

  client-specs:
    name: 'Client/Frontend: Lint and Tests'
    run_when: *RUN_ALWAYS
    include: cider-ci/jobs/client.yml

  feature-specs:
    depends_on: &FEATURE_DEPS
      backend-specs:
        type: job
        job_key: backend-specs
        states: [passed]
      client-specs:
        type: job
        job_key: client-specs
        states: [passed]
    run_when: *FEATURE_DEPS
    name: Feature specs
    include: cider-ci/jobs/feature-specs.yml

  lint:
    name: "Linting"
    description: |
      Code checks: static checks and metrics: complexity, duplication, and format,
        also other consistency checks.
    priority: 3
    run_when:
      any branch has been updated:
        type: branch
        include_match: ^.*$
        exclude_match: '^.*(no-ci|hotspot).*$'
    context:
      task_defaults:
        git_options:
          submodules:
            include_match: ^.*$
      tasks:
        cljc-lint:
          scripts:
            test:
              body: |
                #!/usr/bin/env bash
                set -euo pipefail
                ./server/bin/cljfmt check

  good-to-merge:
    name: Good To Merge
    description: |
      This job depends on all other tests and checks
      and it will pass if and only if all dependencies have passed.
      Status of this job is **used by github's "branch protection"**!
    include: cider-ci/jobs/good-to-merge.yml

  merged-to-master:
    name: "Merged to master"
    priority: 999
    depends_on:
      master branch matches:
        type: branch
        include_match: ^master$
    run_when:
      master branch matches:
        type: branch
        include_match: ^master$
    context:
      tasks:
        merged-to-master:
          scripts:
            test:
              body: "exit 0"

# java_leihs-procure-server env check via asdf v0.13.1
# java_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_java_leihs-procure-server to force update
# clojure_leihs-procure-server env check via asdf v0.13.1
# clojure_leihs-procure-server env skipped update; touch .tool-versions or remove /var/folders/jl/49spzkdd2v3cdz37fgmp0ddr6cj76v/T/asdf_cache_clojure_leihs-procure-server to force update
Warning: environ value /Users/mradl/.asdf/installs/java/zulu-11.60.19 for key :java-home has been overwritten with /Users/mradl/.asdf/installs/java/zulu-11.60.19/zulu-11.jdk/Contents/Home
2023-12-04T09:46:16.191Z NX-41294 WARN [leihs.core.release:13] - Failed to read releases.yml, returning bogus value 
2023-12-04T09:46:16.783Z NX-41294 INFO [leihs.core.logging:37] - initializing logging  {:min-level [[#{"leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :log-level nil}
2023-12-04T09:46:16.790Z NX-41294 INFO [leihs.core.logging:39] - initialized logging  {:min-level [[#{"leihs.procurement.resources.*" "leihs.procurement.permissions.*" "leihs.procurement.authorization" "leihs.procurement.*"} :debug] [#{"com.zaxxer.hikari.*" "leihs.*"} :info] [#{"*"} :warn]], :ns-filter #{"*"}, :middleware [], :timestamp-opts {:pattern :iso8601, :locale :jvm-default, :timezone :utc}, :output-fn #object[taoensso.timbre$default_output_fn 0x3aefd633 "taoensso.timbre$default_output_fn@3aefd633"], :appenders {:println {:enabled? true, :fn #object[taoensso.timbre.appenders.core$println_appender$fn__3459 0x1b083435 "taoensso.timbre.appenders.core$println_appender$fn__3459@1b083435"]}}, :_init-config {:loaded-from-source :default, :compile-time-config {:min-level nil, :ns-pattern "*"}}, :log-level nil}
2023-12-04T09:46:16.792Z NX-41294 INFO [leihs.procurement.main:50] - main ("--dev-mode" "true" "--repl" "true" "run" "--db-port" "5415" "--db-name" "leihs_test")
2023-12-04T09:46:16.804Z NX-41294 INFO [leihs.core.repl:62] - init {:dev-mode true, :repl true, :repl-bind "localhost", :repl-port 31894, :repl-port-file ".nrepl-port"}
2023-12-04T09:46:16.806Z NX-41294 INFO [leihs.core.repl:70] - starting nREPL server  31894 localhost
2023-12-04T09:46:16.826Z NX-41294 INFO [leihs.core.repl:75] - started nREPL server 
2023-12-04T09:46:16.828Z NX-41294 INFO [leihs.procurement.run:326] - Invoking run with options:  {:db-host localhost, :db-max-pool-size 16, :db-min-pool-size 2, :db-name leihs_test, :db-password leihs, :db-port 5415, :db-user leihs, :dev-mode true, :http-host localhost, :http-max-threads 8, :http-min-threads 1, :http-port 3230, :http-queue-capacity 640, :http-thread-keep-alive-seconds 10, :http-worker-prefix leihs-service-http-worker-, :pid-file nil, :repl true, :repl-bind localhost, :repl-port 31894, :repl-port-file .nrepl-port}
2023-12-04T09:46:16.829Z NX-41294 INFO [leihs.core.shutdown:20] - PID 26332
2023-12-04T09:46:16.840Z NX-41294 INFO [leihs.core.shutdown:29] - Registering SIGTERM handler for shutdown.
2023-12-04T09:46:16.903Z NX-41294 INFO [leihs.core.graphql:17] - Initialized graphQL schema.
2023-12-04T09:46:16.904Z NX-41294 INFO [leihs.core.db:220] - Initializing db  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-04T09:46:16.910Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:80] - db-pool - Starting...
2023-12-04T09:46:16.977Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - db-pool - Added connection org.postgresql.jdbc.PgConnection@6cc830be
2023-12-04T09:46:16.983Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:82] - db-pool - Start completed.
2023-12-04T09:46:16.983Z NX-41294 INFO [leihs.core.db:222] - Initialized db  {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c "HikariDataSource (db-pool)"]}
2023-12-04T09:46:16.984Z NX-41294 INFO [leihs.core.db:223] - Initializing ds-next  {:db-name "leihs_test", :db-port 5415, :db-host "localhost", :db-user "leihs", :db-password "leihs", :db-min-pool-size 2, :db-max-pool-size 16}
2023-12-04T09:46:16.999Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2023-12-04T09:46:17.015Z NX-41294 INFO [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@72a1db39
2023-12-04T09:46:17.016Z NX-41294 INFO [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2023-12-04T09:46:17.022Z NX-41294 INFO [leihs.core.db:225] - Initialized ds-next  #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 "next.jdbc.result_set$as_unqualified_lower_maps@1e09e797"]}}
2023-12-04T09:46:17.029Z NX-41294 INFO [leihs.core.http-server:101] - starting http-server  {:port 3230, :ip "localhost", :pool {:queue #object[java.util.concurrent.ArrayBlockingQueue 0x3a8b7b67 "[]"], :pool #object[java.util.concurrent.ThreadPoolExecutor 0x1df06bfb "java.util.concurrent.ThreadPoolExecutor@1df06bfb[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]"]}}
2023-12-04T09:46:17.040Z NX-41294 INFO [leihs.core.http-server:104] - started http-server 
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 7096097798375, :params {:return-to /procure}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {:return-to /procure}, :route-params nil, :headers {sec-fetch-site none, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x7b94b0c0 /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {:return-to /procure}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /procure}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Fprocure, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x52e45c5b compojure.core$routes$fn__27950@52e45c5b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
2023-12-04T09:46:34.959Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-04T09:46:35.147Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 200, :headers {"Content-Type" "text/html; charset=utf-8"}, :body "<!DOCTYPE html>\n<html><head><style>body { font-family: sans-serif; width: 400px; margin: 2rem auto; text-align: center; }\n             * { margin: 0.5rem; }\n             input { width: 15rem; }\n             .message { background-color: pink; padding: 1rem; }</style></head><body><h1>Leihs Simple Login</h1><p>For testing only</p><form action=\"/sign-in\" class=\"ui-form-signin\" method=\"POST\"><div><label>Username<input name=\"user\" type=\"text\"></label></div><div><label>Password<input name=\"password\" type=\"password\" value=\"\"></label></div><input name=\"csrf-token\" type=\"hidden\" value=\"6dfcdee8-1fe9-4c7d-920c-01ae7833375e\"><input name=\"return-to\" type=\"hidden\" value=\"/procure\"><div><button type=\"submit\">Continue</button></div></form></body></html>", :cookies {"leihs-anti-csrf-token" {:value "6dfcdee8-1fe9-4c7d-920c-01ae7833375e", :http-only false, :path "/", :secure false}}}
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}}, :remote-addr 127.0.0.1, :start-time 7096676065958, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/sign-in?return-to=%2Fprocure, connection keep-alive, pragma no-cache, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x15fb637c /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x52e45c5b compojure.core$routes$fn__27950@52e45c5b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
2023-12-04T09:46:35.258Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
>>> authenticate::skip= nil  handler-key= :not-found
>>> authenticate::authenticated-entity nil
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:cookies {}, :remote-addr 127.0.0.1, :start-time 7096689891500, :params {:return-to /favicon.ico}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {:return-to /favicon.ico}, :route-params nil, :headers {sec-fetch-site cross-site, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", connection keep-alive, accept image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest image, accept-encoding gzip, deflate, br, sec-fetch-mode no-cors}, :async-channel #object[org.httpkit.server.AsyncChannel 0x42587fc7 /127.0.0.1:3230<->/127.0.0.1:63459], :server-port 3230, :params-raw {:return-to /favicon.ico}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {:return-to /favicon.ico}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string return-to=%2Ffavicon.ico, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x52e45c5b compojure.core$routes$fn__27950@52e45c5b], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :apng, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
2023-12-04T09:46:35.271Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-04T09:46:35.272Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 200, :headers {"Content-Type" "text/html; charset=utf-8"}, :body "<!DOCTYPE html>\n<html><head><style>body { font-family: sans-serif; width: 400px; margin: 2rem auto; text-align: center; }\n             * { margin: 0.5rem; }\n             input { width: 15rem; }\n             .message { background-color: pink; padding: 1rem; }</style></head><body><h1>Leihs Simple Login</h1><p>For testing only</p><form action=\"/sign-in\" class=\"ui-form-signin\" method=\"POST\"><div><label>Username<input name=\"user\" type=\"text\"></label></div><div><label>Password<input name=\"password\" type=\"password\" value=\"\"></label></div><input name=\"csrf-token\" type=\"hidden\" value=\"6dfcdee8-1fe9-4c7d-920c-01ae7833375e\"><input name=\"return-to\" type=\"hidden\" value=\"/favicon.ico\"><div><button type=\"submit\">Continue</button></div></form></body></html>"}
2023-12-04T09:46:35.283Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 200, :headers {"Content-Type" "text/html; charset=utf-8"}, :body "<!DOCTYPE html>\n<html><head><style>body { font-family: sans-serif; width: 400px; margin: 2rem auto; text-align: center; }\n             * { margin: 0.5rem; }\n             input { width: 15rem; }\n             .message { background-color: pink; padding: 1rem; }</style></head><body><h1>Leihs Simple Login</h1><p>For testing only</p><form action=\"/sign-in\" class=\"ui-form-signin\" method=\"POST\"><div><label>Username<input name=\"user\" type=\"text\"></label></div><div><label>Password<input name=\"password\" type=\"password\" value=\"\"></label></div><input name=\"csrf-token\" type=\"hidden\" value=\"21b49072-a75a-438f-8dbf-e2376a062aea\"><input name=\"return-to\" type=\"hidden\" value=\"/favicon.ico\"><div><button type=\"submit\">Continue</button></div></form></body></html>", :cookies {"leihs-anti-csrf-token" {:value "21b49072-a75a-438f-8dbf-e2376a062aea", :http-only false, :path "/", :secure false}}}
>>> authenticate::skip= true  handler-key= :sign-in
>>> authenticate::authenticated-entity nil

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}}, :remote-addr 127.0.0.1, :start-time 7104424185041, :params {:user amelia@rosenbaum.name, :password password, :csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, :return-to /procure}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x596dbf8b HikariProxyConnection@1500364683 wrapping org.postgresql.jdbc.PgConnection@72a1db39], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/x-www-form-urlencoded, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e, content-length 115, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/sign-in?return-to=%2Fprocure, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4b2f7e5d /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, :return-to /procure}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)], :connection #object[com.zaxxer.hikari.pool.HikariProxyConnection 0x7d0dca68 HikariProxyConnection@2098055784 wrapping org.postgresql.jdbc.PgConnection@6cc830be], :level 1, :rollback #object[clojure.lang.Atom 0x5918f58f {:status :ready, :val false}]}, :content-length 115, :form-params {:user amelia@rosenbaum.name, :password password, :csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, :return-to /procure}, :websocket? false, :query-params {}, :content-type application/x-www-form-urlencoded, :form-params-raw {:user amelia@rosenbaum.name, :password password, :csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, :return-to /procure}, :character-encoding utf8, :uri /sign-in, :server-name localhost, :handler-key :sign-in, :query-string nil, :body #object[org.httpkit.BytesInputStream 0x27da4b8e BytesInputStream[len=115]], :graphql-schema #CompiledSchema<>, :handler #object[compojure.core$routes$fn__27950 0x52e45c5b compojure.core$routes$fn__27950@52e45c5b], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :sign-in
2023-12-04T09:46:43.036Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => true
2023-12-04T09:46:43.214Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 302, :headers {"Location" "/procure"}, :body "", :cookies {"leihs-user-session" {:value "0b044b2f-1843-4154-81cc-10df1cd0e0fa", :http-only true, :max-age 307584000, :path "/", :secure false}, "leihs-user-locale" {:value nil, :path "/", :max-age 0}}}
>>> authenticate::skip= nil  handler-key= :procurement
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7104729089000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, sec-fetch-user ?1, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/sign-in?return-to=%2Fprocure, connection keep-alive, upgrade-insecure-requests 1, pragma no-cache, accept text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest document, accept-encoding gzip, deflate, br, sec-fetch-mode navigate, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x610395ff /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 0, :form-params {}, :websocket? false, :query-params {}, :content-type nil, :form-params-raw {}, :character-encoding utf8, :uri /procure, :server-name localhost, :handler-key :procurement, :query-string nil, :body nil, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.backend.html$not_found_handler 0x4bffdf99 leihs.procurement.backend.html$not_found_handler@4bffdf99], :multipart-params {}, :scheme :http, :request-method :get, :accept {:mime :html, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :procurement
2023-12-04T09:46:43.423Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-04T09:46:43.428Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.441Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.464Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.480Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.501Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-04T09:46:43.508Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:status 404, :headers {"Content-Length" "2299", "Last-Modified" "Mon, 04 Dec 2023 08:15:09 GMT", "Content-Type" "text/html"}, :body #object[java.io.File 0x20bc7735 "/Users/mradl/repos/leihs/procure/server/resources/public/procure/client/index.html"]}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105281270333, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2a662fb /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-12-04T09:46:43.934Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-04T09:46:43.935Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.936Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.937Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.938Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:43.939Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true

>>>exec-query::variables {}
2023-12-04T09:46:43.945Z NX-41294 DEBUG [leihs.procurement.graphql:52] - query-string => query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}

2023-12-04T09:46:43.945Z NX-41294 DEBUG [leihs.procurement.graphql:53] - (-> request :body :variables) => {}
2023-12-04T09:46:43.946Z NX-41294 DEBUG [leihs.procurement.graphql:56] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "amelia@rosenbaum.name", :contracts_count 0, :lastname "Kemmer", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Dawna", :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"leihs-anti-csrf-token" {:value "6dfcdee8-1fe9-4c7d-920c-01ae7833375e"}, "leihs-user-session" {:value "0b044b2f-1843-4154-81cc-10df1cd0e0fa"}}, :remote-addr "127.0.0.1", :start-time 7105281270333, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 "next.jdbc.result_set$as_unqualified_lower_maps@1e09e797"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa", "content-length" "502", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure", "connection" "keep-alive", "pragma" "no-cache", "x-csrf-token" "6dfcdee8-1fe9-4c7d-920c-01ae7833375e", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors", "cache-control" "no-cache"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2a662fb "/127.0.0.1:3230<->/127.0.0.1:63452"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c "HikariDataSource (db-pool)"]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "me", :variables {}, :query "query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f "leihs.procurement.graphql$handler@357adf6f"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}
2023-12-04T09:46:44.077Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.079Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105281270333, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x2a662fb /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-04T09:46:43.037072Z","id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","user_session_id":"fd1a8de7-eefc-46b0-a4b4-40a16e567193","scope_system_admin_read":false,"access-rights":[],"user_id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e"},"leihs-user-session":{"value":"0b044b2f-1843-4154-81cc-10df1cd0e0fa"}},"remote-addr":"127.0.0.1","start-time":7105281270333,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}


>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id ec6bf72e-afab-47e9-9839-ba15d9eb8f8a] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-04T09:46:44.342Z NX-41294 DEBUG [leihs.procurement.graphql:80] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"6dfcdee8-1fe9-4c7d-920c-01ae7833375e\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-04T09:46:44.343Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"6dfcdee8-1fe9-4c7d-920c-01ae7833375e\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105807887541, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x32272c67 /127.0.0.1:3230<->/127.0.0.1:63502], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-12-04T09:46:44.412Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-04T09:46:44.412Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.414Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.415Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.416Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.417Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true

>>>exec-query::variables {}
2023-12-04T09:46:44.421Z NX-41294 DEBUG [leihs.procurement.graphql:52] - query-string => query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}

2023-12-04T09:46:44.421Z NX-41294 DEBUG [leihs.procurement.graphql:53] - (-> request :body :variables) => {}
2023-12-04T09:46:44.422Z NX-41294 DEBUG [leihs.procurement.graphql:56] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "amelia@rosenbaum.name", :contracts_count 0, :lastname "Kemmer", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Dawna", :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"leihs-anti-csrf-token" {:value "6dfcdee8-1fe9-4c7d-920c-01ae7833375e"}, "leihs-user-session" {:value "0b044b2f-1843-4154-81cc-10df1cd0e0fa"}}, :remote-addr "127.0.0.1", :start-time 7105807887541, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 "next.jdbc.result_set$as_unqualified_lower_maps@1e09e797"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa", "content-length" "502", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure/requests", "connection" "keep-alive", "pragma" "no-cache", "x-csrf-token" "6dfcdee8-1fe9-4c7d-920c-01ae7833375e", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors", "cache-control" "no-cache"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x32272c67 "/127.0.0.1:3230<->/127.0.0.1:63502"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c "HikariDataSource (db-pool)"]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "me", :variables {}, :query "query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f "leihs.procurement.graphql$handler@357adf6f"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105807116250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 3972, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4735eebf /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 3972, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MANDATORY MEDIUM], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [5656e676-663c-5402-9809-91f3f72ff4ad], :categories [], :priority [NORMAL HIGH], :budgetPeriods [1173b482-b9e6-46b4-a5e3-0b021c860e9b]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-12-04T09:46:44.433Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-04T09:46:44.434Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
>>> authenticate::skip= nil  handler-key= :graphql
>>> authenticate::authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}

>> authorize >

>> authorize::handler > #object[leihs.core.locale$wrap$fn__44346 0x310865d leihs.core.locale$wrap$fn__44346@310865d]

>> authorize::request > {:authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105807197000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x35547eaa /127.0.0.1:3230<->/127.0.0.1:63453], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>> authorize::handler-key >> :graphql
2023-12-04T09:46:44.436Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.437Z NX-41294 DEBUG [leihs.procurement.authorization:135] - (skip? (:handler-key request)) => nil
2023-12-04T09:46:44.437Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.438Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.437Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.439Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.439Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.439Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.440Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-04T09:46:44.440Z NX-41294 DEBUG [leihs.procurement.authorization:136] - (->> [user-perms/admin? user-perms/inspector? user-perms/viewer? user-perms/requester?] (map (fn* [p1__39360#] (p1__39360# (:tx request) (:authenticated-entity request)))) (some true?)) => true
2023-12-04T09:46:44.444Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]

>>>exec-query::variables {}
2023-12-04T09:46:44.445Z NX-41294 DEBUG [leihs.procurement.graphql:52] - query-string => query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}

2023-12-04T09:46:44.445Z NX-41294 DEBUG [leihs.procurement.graphql:53] - (-> request :body :variables) => {}
2023-12-04T09:46:44.445Z NX-41294 DEBUG [leihs.procurement.permissions.user:72] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_requesters_organizations) (sql/where [:= :procurement_requesters_organizations.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_requesters_organizations WHERE procurement_requesters_organizations.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.445Z NX-41294 DEBUG [leihs.procurement.graphql:56] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "amelia@rosenbaum.name", :contracts_count 0, :lastname "Kemmer", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Dawna", :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"leihs-anti-csrf-token" {:value "6dfcdee8-1fe9-4c7d-920c-01ae7833375e"}, "leihs-user-session" {:value "0b044b2f-1843-4154-81cc-10df1cd0e0fa"}}, :remote-addr "127.0.0.1", :start-time 7105807197000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 "next.jdbc.result_set$as_unqualified_lower_maps@1e09e797"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa", "content-length" "534", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure/requests", "connection" "keep-alive", "pragma" "no-cache", "x-csrf-token" "6dfcdee8-1fe9-4c7d-920c-01ae7833375e", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors", "cache-control" "no-cache"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x35547eaa "/127.0.0.1:3230<->/127.0.0.1:63453"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c "HikariDataSource (db-pool)"]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "RequestFilters", :variables {}, :query "query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f "leihs.procurement.graphql$handler@357adf6f"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}

>>>exec-query::variables {:inspector_priority [LOW MANDATORY MEDIUM], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [5656e676-663c-5402-9809-91f3f72ff4ad], :categories [], :priority [NORMAL HIGH], :budgetPeriods [1173b482-b9e6-46b4-a5e3-0b021c860e9b]}
2023-12-04T09:46:44.453Z NX-41294 DEBUG [leihs.procurement.graphql:52] - query-string => query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}

2023-12-04T09:46:44.454Z NX-41294 DEBUG [leihs.procurement.graphql:53] - (-> request :body :variables) => {:inspector_priority ["LOW" "MANDATORY" "MEDIUM"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "", :organizations ["5656e676-663c-5402-9809-91f3f72ff4ad"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["1173b482-b9e6-46b4-a5e3-0b021c860e9b"]}

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105807887541, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 502, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x32272c67 /127.0.0.1:3230<->/127.0.0.1:63502], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 502, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName me, :variables {}, :query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}
2023-12-04T09:46:44.454Z NX-41294 DEBUG [leihs.procurement.graphql:56] - {:request request} => {:request {:leihs-user-language {:name "English (UK)", :locale "en-GB", :default true, :active true}, :authenticated-entity {:email "amelia@rosenbaum.name", :contracts_count 0, :lastname "Kemmer", :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname "Dawna", :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {"leihs-anti-csrf-token" {:value "6dfcdee8-1fe9-4c7d-920c-01ae7833375e"}, "leihs-user-session" {:value "0b044b2f-1843-4154-81cc-10df1cd0e0fa"}}, :remote-addr "127.0.0.1", :start-time 7105807116250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address "your.lending.desk@example.com", :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature "Cheers,"}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 "HikariDataSource (HikariPool-1)"], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 "next.jdbc.result_set$as_unqualified_lower_maps@1e09e797"]}}, :query-params-raw {}, :route-params nil, :headers {"origin" "http://localhost:3230", "sec-fetch-site" "same-origin", "sec-ch-ua-mobile" "?0", "host" "localhost:3230", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36", "content-type" "application/json", "cookie" "leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa", "content-length" "3972", "sec-ch-ua" "\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"", "sec-ch-ua-platform" "\"macOS\"", "referer" "http://localhost:3230/procure/requests", "connection" "keep-alive", "pragma" "no-cache", "x-csrf-token" "6dfcdee8-1fe9-4c7d-920c-01ae7833375e", "accept" "application/json", "accept-language" "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7", "sec-fetch-dest" "empty", "accept-encoding" "gzip, deflate, br", "sec-fetch-mode" "cors", "cache-control" "no-cache"}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4735eebf "/127.0.0.1:3230<->/127.0.0.1:63452"], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c "HikariDataSource (db-pool)"]}, :content-length 3972, :form-params {}, :websocket? false, :query-params {}, :content-type "application/json", :form-params-raw {}, :character-encoding "utf8", :uri "/procure/graphql", :server-name "localhost", :handler-key :graphql, :query-string nil, :body {:operationName "RequestsIndexFiltered", :variables {:inspector_priority ["LOW" "MANDATORY" "MEDIUM"], :onlyOwnRequests false, :state ["NEW" "APPROVED" "PARTIALLY_APPROVED" "DENIED"], :order_status ["NOT_PROCESSED" "IN_PROGRESS" "PROCURED" "ALTERNATIVE_PROCURED" "NOT_PROCURED"], :search "", :organizations ["5656e676-663c-5402-9809-91f3f72ff4ad"], :categories [], :priority ["NORMAL" "HIGH"], :budgetPeriods ["1173b482-b9e6-46b4-a5e3-0b021c860e9b"]}, :query "query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f "leihs.procurement.graphql$handler@357adf6f"], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-04T09:46:43.037072Z","id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","user_session_id":"fd1a8de7-eefc-46b0-a4b4-40a16e567193","scope_system_admin_read":false,"access-rights":[],"user_id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e"},"leihs-user-session":{"value":"0b044b2f-1843-4154-81cc-10df1cd0e0fa"}},"remote-addr":"127.0.0.1","start-time":7105807887541,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa","content-length":"502","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":502,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"me","variables":{},"query":"query me {\n  current_user {\n    navbarProps\n    user {\n      id\n      firstname\n      lastname\n      permissions {\n        isAdmin\n        isRequester\n        isInspectorForCategories {\n          id\n          __typename\n        }\n        isViewerForCategories {\n          id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  settings {\n    contact_url\n    __typename\n  }\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query me {
  current_user {
    navbarProps
    user {
      id
      firstname
      lastname
      permissions {
        isAdmin
        isRequester
        isInspectorForCategories {
          id
          __typename
        }
        isViewerForCategories {
          id
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
  settings {
    contact_url
    __typename
  }
}


>request-grapql _> result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps {"csrfToken":{"value":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e","name":"csrf-token"},"config":{"appTitle":"leihs","appColor":"gray","me":{"user":{"id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","firstname":"Dawna","lastname":"Kemmer","login":null,"email":"amelia@rosenbaum.name"}},"subApps":{"borrow":false,"admin":false,"procure":false,"manage":[]},"locales":[{"name":"English (UK)","locale":"en-GB","active":true,"isDefault":true,"isSelected":true},{"name":"English (US)","locale":"en-US","active":true,"isDefault":false,"isSelected":false},{"name":"Deutsch","locale":"de-CH","active":true,"isDefault":false,"isSelected":false},{"name":"Züritüütsch","locale":"gsw-CH","active":true,"isDefault":false,"isSelected":false}]}}] [:user #ordered/map ([:id ec6bf72e-afab-47e9-9839-ba15d9eb8f8a] [:firstname Dawna] [:lastname Kemmer] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id 0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-04T09:46:44.455Z NX-41294 DEBUG [leihs.procurement.graphql:80] - result => {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"6dfcdee8-1fe9-4c7d-920c-01ae7833375e\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}
2023-12-04T09:46:44.455Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:current_user #ordered/map ([:navbarProps "{\"csrfToken\":{\"value\":\"6dfcdee8-1fe9-4c7d-920c-01ae7833375e\",\"name\":\"csrf-token\"},\"config\":{\"appTitle\":\"leihs\",\"appColor\":\"gray\",\"me\":{\"user\":{\"id\":\"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a\",\"firstname\":\"Dawna\",\"lastname\":\"Kemmer\",\"login\":null,\"email\":\"amelia@rosenbaum.name\"}},\"subApps\":{\"borrow\":false,\"admin\":false,\"procure\":false,\"manage\":[]},\"locales\":[{\"name\":\"English (UK)\",\"locale\":\"en-GB\",\"active\":true,\"isDefault\":true,\"isSelected\":true},{\"name\":\"English (US)\",\"locale\":\"en-US\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Deutsch\",\"locale\":\"de-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false},{\"name\":\"Züritüütsch\",\"locale\":\"gsw-CH\",\"active\":true,\"isDefault\":false,\"isSelected\":false}]}}"] [:user #ordered/map ([:id "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"] [:firstname "Dawna"] [:lastname "Kemmer"] [:permissions #ordered/map ([:isAdmin false] [:isRequester true] [:isInspectorForCategories [#ordered/map ([:id "0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431"] [:__typename :Category])]] [:isViewerForCategories []] [:__typename :UserPermissions])] [:__typename :User])] [:__typename :CurrentUser])] [:settings nil])}}
>>>get-dashboard
>>args {:inspector_priority [:LOW :MANDATORY :MEDIUM], :organization_id [5656e676-663c-5402-9809-91f3f72ff4ad], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [1173b482-b9e6-46b4-a5e3-0b021c860e9b], :category_id []}
>>value nil
>>mainCatsSql [SELECT procurement_main_categories.* FROM procurement_main_categories  ORDER BY procurement_main_categories.name ASC]
>>ToCheck mainCats ({:id #uuid "46ca25c7-7e4c-4af8-b644-8633e569ea4a", :name Geisha})
>>queryA1 [SELECT procurement_budget_periods.* FROM procurement_budget_periods  WHERE (procurement_budget_periods.id in (?)) ORDER BY end_date DESC 1173b482-b9e6-46b4-a5e3-0b021c860e9b]
>>ToCheck dashboard:::procurement_budget_periods.id ()
>>resultA1-2 ()
>>requestsB2-triggerError {:inspector_priority [:LOW :MANDATORY :MEDIUM], :organization_id [5656e676-663c-5402-9809-91f3f72ff4ad], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search , :priority [:NORMAL :HIGH], :budget_period_id [1173b482-b9e6-46b4-a5e3-0b021c860e9b], :category_id []} nil
2023-12-04T09:46:44.547Z NX-41294 DEBUG [leihs.procurement.resources.requests:140] - arguments => {:inspector_priority [:LOW :MANDATORY :MEDIUM], :organization_id ["5656e676-663c-5402-9809-91f3f72ff4ad"], :requested_by_auth_user false, :state [:NEW :APPROVED :PARTIALLY_APPROVED :DENIED], :order_status [:NOT_PROCESSED :IN_PROGRESS :PROCURED :ALTERNATIVE_PROCURED :NOT_PROCURED], :search "", :priority [:NORMAL :HIGH], :budget_period_id ["1173b482-b9e6-46b4-a5e3-0b021c860e9b"], :category_id []}
2023-12-04T09:46:44.548Z NX-41294 DEBUG [leihs.procurement.resources.requests:141] - value => nil
>get-requests>> ???
>o> 1-After requests-query-map:
2023-12-04T09:46:44.549Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.550Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.552Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.553Z NX-41294 DEBUG [leihs.procurement.permissions.user:85] - (->> [viewer? inspector? admin?] (map (fn* [p1__39301#] (p1__39301# tx auth-entity))) (some true?)) => true
2023-12-04T09:46:44.553Z NX-41294 DEBUG [leihs.procurement.resources.requests:64] - (user-perms/advanced? tx (:authenticated-entity rrequest)) => true
>o> state-sql #sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED]
>o> class honeysql.types.SqlCall
>o> state-sql _> formatted [CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED]
2023-12-04T09:46:44.555Z NX-41294 DEBUG [leihs.procurement.resources.request:142] - result => #sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"]
2023-12-04T09:46:44.558Z NX-41294 DEBUG [leihs.procurement.resources.request:166] - (-> requests-base-query (sql/merge-select [(state-sql advanced-user?) :state]) (sql/merge-join :procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> tbl :procurement_budget_periods_2
>o> nest-key :budget_period
2023-12-04T09:46:44.560Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> tbl :models
>o> nest-key :model
2023-12-04T09:46:44.561Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> tbl :procurement_templates
>o> nest-key :template
2023-12-04T09:46:44.562Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :suppliers
>o> nest-key :supplier
2023-12-04T09:46:44.562Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> sqlmap {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> tbl :users
>o> nest-key :user
2023-12-04T09:46:44.563Z NX-41294 DEBUG [leihs.procurement.utils.sql:77] - (helpers/merge-select sqlmap [(types/call :row_to_json tbl) nest-key]) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
2023-12-04T09:46:44.563Z NX-41294 DEBUG [leihs.procurement.resources.requests:66] - (-> (request/requests-base-query-with-state advanced-user?) request-helpers/join-and-nest-associated-resources) => {:select (#sql/raw "DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*" [#sql/call [:case [:= :procurement_requests.approved_quantity nil] "NEW" [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] "APPROVED" [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] "PARTIALLY_APPROVED" [:= :procurement_requests.approved_quantity 0] "DENIED"] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw "row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category" [#sql/call [:row_to_json :models] :model] #sql/raw "row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization" [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw "row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room" [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by (#sql/raw "concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))"), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id])}
>o> 2-After apply-scope: {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:and [:= true false] [:in :procurement_requests.budget_period_id [1173b482-b9e6-46b4-a5e3-0b021c860e9b]] [:in :procurement_requests.organization_id [5656e676-663c-5402-9809-91f3f72ff4ad]] [:in :procurement_requests.priority (normal high)] [:in :procurement_requests.inspector_priority (low mandatory medium)] [:or [:= :procurement_requests.approved_quantity nil] [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] [:= :procurement_requests.approved_quantity 0]] [:in :procurement_requests.order_status (#sql/call [:cast not_processed :order_status_enum] #sql/call [:cast in_progress :order_status_enum] #sql/call [:cast procured :order_status_enum] #sql/call [:cast alternative_procured :order_status_enum] #sql/call [:cast not_procured :order_status_enum])] [:or [~~* :buildings.name %%] [~~* :procurement_requests.short_id %%] [~~* :procurement_requests.article_name %%] [~~* :procurement_requests.article_number %%] [~~* :procurement_requests.inspection_comment %%] [~~* :procurement_requests.order_comment %%] [~~* :procurement_requests.motivation %%] [~~* :procurement_requests.receiver %%] [~~* :procurement_requests.supplier_name %%] [~~* :rooms.name %%] [~~* :models.product %%] [~~* :models.version %%] [~~* :users.firstname %%] [~~* :users.lastname %%]]]}
2023-12-04T09:46:44.565Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.581Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
>o> 3-After sql-format: {:select (#sql/raw DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.* [#sql/call [:case [:= :procurement_requests.approved_quantity nil] NEW [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] APPROVED [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] PARTIALLY_APPROVED [:= :procurement_requests.approved_quantity 0] DENIED] :state] [#sql/call [:row_to_json :procurement_budget_periods_2] :budget_period] #sql/raw row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category [#sql/call [:row_to_json :models] :model] #sql/raw row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization [#sql/call [:row_to_json :procurement_templates] :template] #sql/raw row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room [#sql/call [:row_to_json :suppliers] :supplier] [#sql/call [:row_to_json :users] :user]), :from (:procurement_requests), :left-join (:models [:= :models.id :procurement_requests.model_id] :procurement_templates [:= :procurement_templates.id :procurement_requests.template_id] :suppliers [:= :suppliers.id :procurement_requests.supplier_id] :users [:= :users.id :procurement_requests.user_id]), :order-by (#sql/raw concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))), :join (:procurement_budget_periods [:= :procurement_budget_periods.id :procurement_requests.budget_period_id] [{:select (:* [#sql/call [:> :current_date :end_date] :is_past]), :from (:procurement_budget_periods)} :procurement_budget_periods_2] [:= :procurement_budget_periods_2.id :procurement_requests.budget_period_id] :procurement_categories [:= :procurement_categories.id :procurement_requests.category_id] :procurement_main_categories [:= :procurement_main_categories.id :procurement_categories.main_category_id] :procurement_organizations [:= :procurement_organizations.id :procurement_requests.organization_id] [:procurement_organizations :procurement_departments] [:= :procurement_departments.id :procurement_organizations.parent_id] :rooms [:= :rooms.id :procurement_requests.room_id] :buildings [:= :buildings.id :rooms.building_id]), :where [:and [:= true false] [:in :procurement_requests.budget_period_id [1173b482-b9e6-46b4-a5e3-0b021c860e9b]] [:in :procurement_requests.organization_id [5656e676-663c-5402-9809-91f3f72ff4ad]] [:in :procurement_requests.priority (normal high)] [:in :procurement_requests.inspector_priority (low mandatory medium)] [:or [:= :procurement_requests.approved_quantity nil] [:>= :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:and [:< :procurement_requests.approved_quantity :procurement_requests.requested_quantity] [:> :procurement_requests.approved_quantity 0]] [:= :procurement_requests.approved_quantity 0]] [:in :procurement_requests.order_status (#sql/call [:cast not_processed :order_status_enum] #sql/call [:cast in_progress :order_status_enum] #sql/call [:cast procured :order_status_enum] #sql/call [:cast alternative_procured :order_status_enum] #sql/call [:cast not_procured :order_status_enum])] [:or [~~* :buildings.name %%] [~~* :procurement_requests.short_id %%] [~~* :procurement_requests.article_name %%] [~~* :procurement_requests.article_number %%] [~~* :procurement_requests.inspection_comment %%] [~~* :procurement_requests.order_comment %%] [~~* :procurement_requests.motivation %%] [~~* :procurement_requests.receiver %%] [~~* :procurement_requests.supplier_name %%] [~~* :rooms.name %%] [~~* :models.product %%] [~~* :models.version %%] [~~* :users.firstname %%] [~~* :users.lastname %%]]]}
2023-12-04T09:46:44.589Z NX-41294 DEBUG [leihs.procurement.resources.requests:170] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum))) AND (buildings.name ~~* ? OR procurement_requests.short_id ~~* ? OR procurement_requests.article_name ~~* ? OR procurement_requests.article_number ~~* ? OR procurement_requests.inspection_comment ~~* ? OR procurement_requests.order_comment ~~* ? OR procurement_requests.motivation ~~* ? OR procurement_requests.receiver ~~* ? OR procurement_requests.supplier_name ~~* ? OR rooms.name ~~* ? OR models.product ~~* ? OR models.version ~~* ? OR users.firstname ~~* ? OR users.lastname ~~* ?)) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "1173b482-b9e6-46b4-a5e3-0b021c860e9b" "5656e676-663c-5402-9809-91f3f72ff4ad" "normal" "high" "low" "mandatory" "medium" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%"]
2023-12-04T09:46:44.590Z NX-41294 DEBUG [leihs.procurement.resources.requests:172] - query => ["SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum))) AND (buildings.name ~~* ? OR procurement_requests.short_id ~~* ? OR procurement_requests.article_name ~~* ? OR procurement_requests.article_number ~~* ? OR procurement_requests.inspection_comment ~~* ? OR procurement_requests.order_comment ~~* ? OR procurement_requests.motivation ~~* ? OR procurement_requests.receiver ~~* ? OR procurement_requests.supplier_name ~~* ? OR rooms.name ~~* ? OR models.product ~~* ? OR models.version ~~* ? OR users.firstname ~~* ? OR users.lastname ~~* ?)) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))" "NEW" "APPROVED" 0 "PARTIALLY_APPROVED" 0 "DENIED" "1173b482-b9e6-46b4-a5e3-0b021c860e9b" "5656e676-663c-5402-9809-91f3f72ff4ad" "normal" "high" "low" "mandatory" "medium" 0 0 "not_processed" "in_progress" "procured" "alternative_procured" "not_procured" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%" "%%"]
>>broken-query [SELECT DISTINCT ON (procurement_requests.id, concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, '')))) procurement_requests.*, CASE WHEN procurement_requests.approved_quantity IS NULL THEN ? WHEN procurement_requests.approved_quantity >= procurement_requests.requested_quantity THEN ? WHEN (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) THEN ? WHEN procurement_requests.approved_quantity = ? THEN ? END AS state, row_to_json(procurement_budget_periods_2) AS budget_period, row_to_json(procurement_categories)::jsonb || jsonb_build_object('main_category', row_to_json(procurement_main_categories)) AS category, row_to_json(models) AS model, row_to_json(procurement_organizations)::jsonb || jsonb_build_object('department', row_to_json(procurement_departments)) AS organization, row_to_json(procurement_templates) AS template, row_to_json(rooms)::jsonb || jsonb_build_object('building', row_to_json(buildings)) AS room, row_to_json(suppliers) AS supplier, row_to_json(users) AS user FROM procurement_requests INNER JOIN procurement_budget_periods ON procurement_budget_periods.id = procurement_requests.budget_period_id INNER JOIN (SELECT *, current_date > end_date AS is_past FROM procurement_budget_periods) procurement_budget_periods_2 ON procurement_budget_periods_2.id = procurement_requests.budget_period_id INNER JOIN procurement_categories ON procurement_categories.id = procurement_requests.category_id INNER JOIN procurement_main_categories ON procurement_main_categories.id = procurement_categories.main_category_id INNER JOIN procurement_organizations ON procurement_organizations.id = procurement_requests.organization_id INNER JOIN procurement_organizations procurement_departments ON procurement_departments.id = procurement_organizations.parent_id INNER JOIN rooms ON rooms.id = procurement_requests.room_id INNER JOIN buildings ON buildings.id = rooms.building_id LEFT JOIN models ON models.id = procurement_requests.model_id LEFT JOIN procurement_templates ON procurement_templates.id = procurement_requests.template_id LEFT JOIN suppliers ON suppliers.id = procurement_requests.supplier_id LEFT JOIN users ON users.id = procurement_requests.user_id WHERE (TRUE = FALSE AND (procurement_requests.budget_period_id in (?)) AND (procurement_requests.organization_id in (?)) AND (procurement_requests.priority in (?, ?)) AND (procurement_requests.inspector_priority in (?, ?, ?)) AND (procurement_requests.approved_quantity IS NULL OR procurement_requests.approved_quantity >= procurement_requests.requested_quantity OR (procurement_requests.approved_quantity < procurement_requests.requested_quantity AND procurement_requests.approved_quantity > ?) OR procurement_requests.approved_quantity = ?) AND (procurement_requests.order_status in (CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum), CAST(? AS order_status_enum))) AND (buildings.name ~~* ? OR procurement_requests.short_id ~~* ? OR procurement_requests.article_name ~~* ? OR procurement_requests.article_number ~~* ? OR procurement_requests.inspection_comment ~~* ? OR procurement_requests.order_comment ~~* ? OR procurement_requests.motivation ~~* ? OR procurement_requests.receiver ~~* ? OR procurement_requests.supplier_name ~~* ? OR rooms.name ~~* ? OR models.product ~~* ? OR models.version ~~* ? OR users.firstname ~~* ? OR users.lastname ~~* ?)) ORDER BY concat(lower(coalesce(procurement_requests.article_name, '')), lower(coalesce(models.product, '')), lower(coalesce(models.version, ''))) NEW APPROVED 0 PARTIALLY_APPROVED 0 DENIED 1173b482-b9e6-46b4-a5e3-0b021c860e9b 5656e676-663c-5402-9809-91f3f72ff4ad normal high low mandatory medium 0 0 not_processed in_progress procured alternative_procured not_procured %% %% %% %% %% %% %% %% %% %% %% %% %% %%]
2023-12-04T09:46:44.591Z NX-41294 DEBUG [leihs.procurement.permissions.user:52] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_viewers) (sql/merge-where [:= :procurement_category_viewers.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_viewers.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_viewers WHERE procurement_category_viewers.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.593Z NX-41294 DEBUG [leihs.procurement.permissions.user:31] - (-> (sql/select [(sql/call :exists (cond-> (-> (sql/select true) (sql/from :procurement_category_inspectors) (sql/merge-where [:= :procurement_category_inspectors.user_id (:user_id auth-entity)])) c-id (sql/merge-where [:= :procurement_category_inspectors.category_id c-id]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_category_inspectors WHERE procurement_category_inspectors.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.594Z NX-41294 DEBUG [leihs.procurement.permissions.user:15] - (-> (sql/select [(sql/call :exists (-> (sql/select true) (sql/from :procurement_admins) (sql/where [:= :procurement_admins.user_id (:user_id auth-entity)]))) :result]) sql/format) => ["SELECT exists((SELECT TRUE FROM procurement_admins WHERE procurement_admins.user_id = ?)) AS result " #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a"]
2023-12-04T09:46:44.594Z NX-41294 DEBUG [leihs.procurement.permissions.user:85] - (->> [viewer? inspector? admin?] (map (fn* [p1__39301#] (p1__39301# tx auth-entity))) (some true?)) => true

>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105807197000, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 534, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x35547eaa /127.0.0.1:3230<->/127.0.0.1:63453], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 534, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestFilters, :variables {}, :query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-04T09:46:43.037072Z","id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","user_session_id":"fd1a8de7-eefc-46b0-a4b4-40a16e567193","scope_system_admin_read":false,"access-rights":[],"user_id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e"},"leihs-user-session":{"value":"0b044b2f-1843-4154-81cc-10df1cd0e0fa"}},"remote-addr":"127.0.0.1","start-time":7105807197000,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa","content-length":"534","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":534,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestFilters","variables":{},"query":"query RequestFilters {\n  budget_periods {\n    id\n    name\n    inspection_start_date\n    end_date\n    __typename\n  }\n  main_categories {\n    id\n    name\n    categories {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  organizations(root_only: true) {\n    ...OrgProps\n    organizations {\n      ...OrgProps\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrgProps on Organization {\n  id\n  name\n  shortname\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query RequestFilters {
  budget_periods {
    id
    name
    inspection_start_date
    end_date
    __typename
  }
  main_categories {
    id
    name
    categories {
      id
      name
      __typename
    }
    __typename
  }
  organizations(root_only: true) {
    ...OrgProps
    organizations {
      ...OrgProps
      __typename
    }
    __typename
  }
}

fragment OrgProps on Organization {
  id
  name
  shortname
  __typename
}


>request-grapql _> result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id d3cde81d-47f9-4cbc-8d16-b52ec16253b8] [:name BP-in-inspection-phase] [:inspection_start_date 2023-12-02T23:00:00Z] [:end_date 2024-01-03T23:00:00Z] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id 46ca25c7-7e4c-4af8-b644-8633e569ea4a] [:name Geisha] [:categories [#ordered/map ([:id 0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431] [:name Ennarea] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id 30990347-e0e4-42bb-8df2-46ca4bbdc7a4] [:name Books & Baby] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id c23fb07f-ce21-4603-aa90-0cac35480c1c] [:name Sports, Electronics & Health] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id ae9b6064-bd97-4ed0-bb35-401ec9cdd9d0] [:name Garden, Industrial & Clothing] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 523f0f2b-1469-4e91-b7ba-7526fbe2b771] [:name Movies] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 10858232-fc96-432c-9735-030864c35adb] [:name Health, Grocery & Beauty] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 60a3b7b1-f127-4c80-afd2-9d142e2c3b8a] [:name Kids, Electronics & Music] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 40eb7b5c-505c-4ceb-a75b-eeee61b528cd] [:name Jewelry] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 4cfc75e6-24b0-423c-b78a-f81c672d8ab4] [:name Music & Automotive] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 3209c767-68d8-408d-8c51-88f6989ca60e] [:name Outdoors & Home] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id c219499b-9b34-468a-9066-587ddbc5f289] [:name Electronics & Home] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id 079ff5c7-ea9b-4aaa-88a5-16f68fbcae1c] [:name Tools, Baby & Kids] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id 270c69e1-9a4c-4e85-b591-e06a8b4d5d43] [:name Grocery, Electronics & Industrial] [:shortname nil] [:__typename :Organization])]])]])}
2023-12-04T09:46:44.677Z NX-41294 DEBUG [leihs.procurement.graphql:80] - result => {:data #ordered/map ([:budget_periods [#ordered/map ([:id "d3cde81d-47f9-4cbc-8d16-b52ec16253b8"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-02T23:00:00Z"] [:end_date "2024-01-03T23:00:00Z"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "46ca25c7-7e4c-4af8-b644-8633e569ea4a"] [:name "Geisha"] [:categories [#ordered/map ([:id "0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "30990347-e0e4-42bb-8df2-46ca4bbdc7a4"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "c23fb07f-ce21-4603-aa90-0cac35480c1c"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "ae9b6064-bd97-4ed0-bb35-401ec9cdd9d0"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "523f0f2b-1469-4e91-b7ba-7526fbe2b771"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "10858232-fc96-432c-9735-030864c35adb"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "60a3b7b1-f127-4c80-afd2-9d142e2c3b8a"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "40eb7b5c-505c-4ceb-a75b-eeee61b528cd"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "4cfc75e6-24b0-423c-b78a-f81c672d8ab4"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "3209c767-68d8-408d-8c51-88f6989ca60e"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "c219499b-9b34-468a-9066-587ddbc5f289"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "079ff5c7-ea9b-4aaa-88a5-16f68fbcae1c"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "270c69e1-9a4c-4e85-b591-e06a8b4d5d43"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}
2023-12-04T09:46:44.677Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:budget_periods [#ordered/map ([:id "d3cde81d-47f9-4cbc-8d16-b52ec16253b8"] [:name "BP-in-inspection-phase"] [:inspection_start_date "2023-12-02T23:00:00Z"] [:end_date "2024-01-03T23:00:00Z"] [:__typename :BudgetPeriod])]] [:main_categories [#ordered/map ([:id "46ca25c7-7e4c-4af8-b644-8633e569ea4a"] [:name "Geisha"] [:categories [#ordered/map ([:id "0abfea4f-d8eb-4bd0-a9e3-1c6db0bf6431"] [:name "Ennarea"] [:__typename :Category])]] [:__typename :MainCategory])]] [:organizations [#ordered/map ([:id "30990347-e0e4-42bb-8df2-46ca4bbdc7a4"] [:name "Books & Baby"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "c23fb07f-ce21-4603-aa90-0cac35480c1c"] [:name "Sports, Electronics & Health"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "ae9b6064-bd97-4ed0-bb35-401ec9cdd9d0"] [:name "Garden, Industrial & Clothing"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "523f0f2b-1469-4e91-b7ba-7526fbe2b771"] [:name "Movies"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "10858232-fc96-432c-9735-030864c35adb"] [:name "Health, Grocery & Beauty"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "60a3b7b1-f127-4c80-afd2-9d142e2c3b8a"] [:name "Kids, Electronics & Music"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "40eb7b5c-505c-4ceb-a75b-eeee61b528cd"] [:name "Jewelry"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "4cfc75e6-24b0-423c-b78a-f81c672d8ab4"] [:name "Music & Automotive"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "3209c767-68d8-408d-8c51-88f6989ca60e"] [:name "Outdoors & Home"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "c219499b-9b34-468a-9066-587ddbc5f289"] [:name "Electronics & Home"] [:shortname nil] [:__typename :Organization])]]) #ordered/map ([:id "079ff5c7-ea9b-4aaa-88a5-16f68fbcae1c"] [:name "Tools, Baby & Kids"] [:shortname nil] [:__typename :Organization] [:organizations [#ordered/map ([:id "270c69e1-9a4c-4e85-b591-e06a8b4d5d43"] [:name "Grocery, Electronics & Industrial"] [:shortname nil] [:__typename :Organization])]])]])}}
>>requestsB2 ()
>>dashboard-cache-keyB2 {:id -928514721}

>request-http _>  dashboard::determine-budget-periods/result () 


>request-grapql _> request {:leihs-user-language {:name English (UK), :locale en-GB, :default true, :active true}, :authenticated-entity {:email amelia@rosenbaum.name, :contracts_count 0, :lastname Kemmer, :org_id nil, :scope_read true, :is_admin false, :authentication-method :session, :login nil, :scope_system_admin_write false, :scope_write true, :firstname Dawna, :scope_admin_write false, :user_session_created_at #time/instant "2023-12-04T09:46:43.037072Z", :id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :user_session_id #uuid "fd1a8de7-eefc-46b0-a4b4-40a16e567193", :scope_system_admin_read false, :access-rights (), :user_id #uuid "ec6bf72e-afab-47e9-9839-ba15d9eb8f8a", :is_system_admin false, :external_sign_out_url nil, :language_locale nil, :inventory_pool_roles_count 0, :scope_admin_read false}, :cookies {leihs-anti-csrf-token {:value 6dfcdee8-1fe9-4c7d-920c-01ae7833375e}, leihs-user-session {:value 0b044b2f-1843-4154-81cc-10df1cd0e0fa}}, :remote-addr 127.0.0.1, :start-time 7105807116250, :params {}, :settings {:email_sending_enabled false, :sessions_max_lifetime_secs 432000, :smtp_default_from_address your.lending.desk@example.com, :public_image_caching_enabled true, :sessions_force_secure false, :deliver_received_order_notifications false, :external_base_url nil, :sessions_force_uniqueness false, :email_signature Cheers,}, :tx-next #next.jdbc.default_options.DefaultOptions{:connectable #object[com.zaxxer.hikari.HikariDataSource 0x51ddf0c3 HikariDataSource (HikariPool-1)], :options {:builder-fn #object[next.jdbc.result_set$as_unqualified_lower_maps 0x1e09e797 next.jdbc.result_set$as_unqualified_lower_maps@1e09e797]}}, :query-params-raw {}, :route-params nil, :headers {origin http://localhost:3230, sec-fetch-site same-origin, sec-ch-ua-mobile ?0, host localhost:3230, user-agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36, content-type application/json, cookie leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa, content-length 3972, sec-ch-ua "Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24", sec-ch-ua-platform "macOS", referer http://localhost:3230/procure/requests, connection keep-alive, pragma no-cache, x-csrf-token 6dfcdee8-1fe9-4c7d-920c-01ae7833375e, accept application/json, accept-language de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7, sec-fetch-dest empty, accept-encoding gzip, deflate, br, sec-fetch-mode cors, cache-control no-cache}, :async-channel #object[org.httpkit.server.AsyncChannel 0x4735eebf /127.0.0.1:3230<->/127.0.0.1:63452], :server-port 3230, :params-raw {}, :tx {:datasource #object[com.zaxxer.hikari.HikariDataSource 0x7e2a4f3c HikariDataSource (db-pool)]}, :content-length 3972, :form-params {}, :websocket? false, :query-params {}, :content-type application/json, :form-params-raw {}, :character-encoding utf8, :uri /procure/graphql, :server-name localhost, :handler-key :graphql, :query-string nil, :body {:operationName RequestsIndexFiltered, :variables {:inspector_priority [LOW MANDATORY MEDIUM], :onlyOwnRequests false, :state [NEW APPROVED PARTIALLY_APPROVED DENIED], :order_status [NOT_PROCESSED IN_PROGRESS PROCURED ALTERNATIVE_PROCURED NOT_PROCURED], :search , :organizations [5656e676-663c-5402-9809-91f3f72ff4ad], :categories [], :priority [NORMAL HIGH], :budgetPeriods [1173b482-b9e6-46b4-a5e3-0b021c860e9b]}, :query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}
}, :graphql-schema #CompiledSchema<>, :handler #object[leihs.procurement.graphql$handler 0x357adf6f leihs.procurement.graphql$handler@357adf6f], :multipart-params {}, :scheme :http, :request-method :post, :accept {:mime :json, :charset nil, :encoding nil, :language nil}}

>request-c-grapql _> request (json) {"leihs-user-language":{"name":"English (UK)","locale":"en-GB","default":true,"active":true},"authenticated-entity":{"email":"amelia@rosenbaum.name","contracts_count":0,"lastname":"Kemmer","org_id":null,"scope_read":true,"is_admin":false,"authentication-method":"session","login":null,"scope_system_admin_write":false,"scope_write":true,"firstname":"Dawna","scope_admin_write":false,"user_session_created_at":"2023-12-04T09:46:43.037072Z","id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","user_session_id":"fd1a8de7-eefc-46b0-a4b4-40a16e567193","scope_system_admin_read":false,"access-rights":[],"user_id":"ec6bf72e-afab-47e9-9839-ba15d9eb8f8a","is_system_admin":false,"external_sign_out_url":null,"language_locale":null,"inventory_pool_roles_count":0,"scope_admin_read":false},"cookies":{"leihs-anti-csrf-token":{"value":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e"},"leihs-user-session":{"value":"0b044b2f-1843-4154-81cc-10df1cd0e0fa"}},"remote-addr":"127.0.0.1","start-time":7105807116250,"params":{},"settings":{"email_sending_enabled":false,"sessions_max_lifetime_secs":432000,"smtp_default_from_address":"your.lending.desk@example.com","public_image_caching_enabled":true,"sessions_force_secure":false,"deliver_received_order_notifications":false,"external_base_url":null,"sessions_force_uniqueness":false,"email_signature":"Cheers,"},"query-params-raw":{},"route-params":null,"headers":{"origin":"http:\/\/localhost:3230","sec-fetch-site":"same-origin","sec-ch-ua-mobile":"?0","host":"localhost:3230","user-agent":"Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","content-type":"application\/json","cookie":"leihs-anti-csrf-token=6dfcdee8-1fe9-4c7d-920c-01ae7833375e; leihs-user-session=0b044b2f-1843-4154-81cc-10df1cd0e0fa","content-length":"3972","sec-ch-ua":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","sec-ch-ua-platform":"\"macOS\"","referer":"http:\/\/localhost:3230\/procure\/requests","connection":"keep-alive","pragma":"no-cache","x-csrf-token":"6dfcdee8-1fe9-4c7d-920c-01ae7833375e","accept":"application\/json","accept-language":"de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7","sec-fetch-dest":"empty","accept-encoding":"gzip, deflate, br","sec-fetch-mode":"cors","cache-control":"no-cache"},"server-port":3230,"params-raw":{},"content-length":3972,"form-params":{},"websocket?":false,"query-params":{},"content-type":"application\/json","form-params-raw":{},"character-encoding":"utf8","uri":"\/procure\/graphql","server-name":"localhost","handler-key":"graphql","query-string":null,"body":{"operationName":"RequestsIndexFiltered","variables":{"inspector_priority":["LOW","MANDATORY","MEDIUM"],"onlyOwnRequests":false,"state":["NEW","APPROVED","PARTIALLY_APPROVED","DENIED"],"order_status":["NOT_PROCESSED","IN_PROGRESS","PROCURED","ALTERNATIVE_PROCURED","NOT_PROCURED"],"search":"","organizations":["5656e676-663c-5402-9809-91f3f72ff4ad"],"categories":[],"priority":["NORMAL","HIGH"],"budgetPeriods":["1173b482-b9e6-46b4-a5e3-0b021c860e9b"]},"query":"query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {\n  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {\n    cacheKey\n    total_count\n    budget_periods {\n      id\n      cacheKey\n      name\n      inspection_start_date\n      end_date\n      total_price_cents\n      main_categories {\n        id\n        cacheKey\n        name\n        image_url\n        total_price_cents\n        categories {\n          id\n          cacheKey\n          name\n          total_price_cents\n          requests {\n            ...RequestFieldsForIndex\n            total_price_cents\n            actionPermissions {\n              edit\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment RequestFieldsForIndex on Request {\n  id\n  short_id\n  user {\n    value {\n      id\n      firstname\n      lastname\n      __typename\n    }\n    __typename\n  }\n  category {\n    read\n    write\n    required\n    value {\n      id\n      name\n      main_category {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  budget_period {\n    read\n    write\n    required\n    value {\n      name\n      id\n      __typename\n    }\n    __typename\n  }\n  article_name {\n    value\n    __typename\n  }\n  model {\n    value {\n      id\n      product\n      version\n      __typename\n    }\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  organization {\n    value {\n      id\n      name\n      shortname\n      department {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  price_cents {\n    value\n    __typename\n  }\n  price_currency {\n    value\n    __typename\n  }\n  requested_quantity {\n    read\n    value\n    __typename\n  }\n  approved_quantity {\n    read\n    value\n    __typename\n  }\n  order_quantity {\n    read\n    value\n    __typename\n  }\n  replacement {\n    value\n    __typename\n  }\n  priority {\n    value\n    __typename\n  }\n  state\n  article_number {\n    value\n    __typename\n  }\n  supplier {\n    value {\n      name\n      __typename\n    }\n    __typename\n  }\n  supplier_name {\n    value\n    __typename\n  }\n  receiver {\n    value\n    __typename\n  }\n  room {\n    value {\n      id\n      name\n      building {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  motivation {\n    value\n    __typename\n  }\n  inspection_comment {\n    value\n    __typename\n  }\n  inspector_priority {\n    value\n    __typename\n  }\n  accounting_type {\n    value\n    __typename\n  }\n  cost_center {\n    value\n    __typename\n  }\n  general_ledger_account {\n    value\n    __typename\n  }\n  procurement_account {\n    value\n    __typename\n  }\n  internal_order_number {\n    value\n    __typename\n  }\n  order_status {\n    value\n    __typename\n  }\n  order_comment {\n    value\n    __typename\n  }\n  __typename\n}\n"},"multipart-params":{},"scheme":"http","request-method":"post","accept":{"mime":"json","charset":null,"encoding":null,"language":null}}

>request-c-grapql _> query query RequestsIndexFiltered($budgetPeriods: [ID!], $categories: [ID!], $search: String, $state: [State!], $order_status: [OrderStatus], $organizations: [ID!], $priority: [Priority!], $inspector_priority: [InspectorPriority!], $onlyOwnRequests: Boolean) {
  dashboard(budget_period_id: $budgetPeriods, category_id: $categories, search: $search, state: $state, order_status: $order_status, organization_id: $organizations, priority: $priority, inspector_priority: $inspector_priority, requested_by_auth_user: $onlyOwnRequests) {
    cacheKey
    total_count
    budget_periods {
      id
      cacheKey
      name
      inspection_start_date
      end_date
      total_price_cents
      main_categories {
        id
        cacheKey
        name
        image_url
        total_price_cents
        categories {
          id
          cacheKey
          name
          total_price_cents
          requests {
            ...RequestFieldsForIndex
            total_price_cents
            actionPermissions {
              edit
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment RequestFieldsForIndex on Request {
  id
  short_id
  user {
    value {
      id
      firstname
      lastname
      __typename
    }
    __typename
  }
  category {
    read
    write
    required
    value {
      id
      name
      main_category {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  budget_period {
    read
    write
    required
    value {
      name
      id
      __typename
    }
    __typename
  }
  article_name {
    value
    __typename
  }
  model {
    value {
      id
      product
      version
      __typename
    }
    __typename
  }
  receiver {
    value
    __typename
  }
  organization {
    value {
      id
      name
      shortname
      department {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  price_cents {
    value
    __typename
  }
  price_currency {
    value
    __typename
  }
  requested_quantity {
    read
    value
    __typename
  }
  approved_quantity {
    read
    value
    __typename
  }
  order_quantity {
    read
    value
    __typename
  }
  replacement {
    value
    __typename
  }
  priority {
    value
    __typename
  }
  state
  article_number {
    value
    __typename
  }
  supplier {
    value {
      name
      __typename
    }
    __typename
  }
  supplier_name {
    value
    __typename
  }
  receiver {
    value
    __typename
  }
  room {
    value {
      id
      name
      building {
        id
        name
        __typename
      }
      __typename
    }
    __typename
  }
  motivation {
    value
    __typename
  }
  inspection_comment {
    value
    __typename
  }
  inspector_priority {
    value
    __typename
  }
  accounting_type {
    value
    __typename
  }
  cost_center {
    value
    __typename
  }
  general_ledger_account {
    value
    __typename
  }
  procurement_account {
    value
    __typename
  }
  internal_order_number {
    value
    __typename
  }
  order_status {
    value
    __typename
  }
  order_comment {
    value
    __typename
  }
  __typename
}


>request-grapql _> result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey -928514721] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-04T09:46:44.777Z NX-41294 DEBUG [leihs.procurement.graphql:80] - result => {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-928514721"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}
2023-12-04T09:46:44.777Z NX-41294 DEBUG [leihs.procurement.authorization:150] - (authorize handler request) => {:body {:data #ordered/map ([:dashboard #ordered/map ([:cacheKey "-928514721"] [:total_count 0] [:budget_periods []] [:__typename :Dashboard])])}}
